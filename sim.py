from vedo import *
import numpy as np
from scipy.interpolate import make_interp_spline

#region data
xe = np.array([   0.        ,  40.67036172, 112.11577654, 199.61122378, 296.05812808,
  399.50570306, 509.57992249, 626.19494   , 749.54628687, 878.9755276 ,
 1011.804107  ,1144.97142233,1276.8793721 ,1407.42794057,1537.28362987,
 1667.1695525 ,1797.50723869,1928.29216995,2059.20239389,2189.85828097,
 2320.09382987,2450.17544144,2580.8490989 ,2713.03724519,2847.16333708,
 2982.28783538,3115.47155009,3242.6225933 ,3361.59970126,3475.91855105])
he = np.array([ 0.00000000e+00,-6.28525524e-02, 2.75165914e-02,-1.87058392e-02,
  3.96533860e-02, 7.09659802e-02, 1.07459849e-01, 1.07946240e-01,
  1.51303738e-01, 3.44172530e+00, 1.29502808e+01, 2.75119482e+01,
  4.40608705e+01, 6.00352028e+01, 7.43821973e+01, 8.73923705e+01,
  9.98688057e+01, 1.12654030e+02, 1.26178762e+02, 1.40317573e+02,
  1.54473357e+02, 1.67740415e+02, 1.79409801e+02, 1.89708045e+02,
  2.00316915e+02, 2.14229956e+02, 2.34294203e+02, 2.60112774e+02,
  2.85652365e+02, 2.99991684e+02])
ae = np.array([0.89347   ,0.46590265,0.19463583,0.13910781,0.10018586,0.07219567,
 0.05281446,0.03266187,0.02510722,0.0207182 ,0.01340617,0.00874563,
 0.00701051,0.00767112,0.00951521,0.01073071,0.01152712,0.0117201 ,
 0.01162453,0.01141245,0.01065769,0.00934977,0.00808049,0.00781443,
 0.00966483,0.0145878 ,0.02072564,0.02620118,0.01879815,0.00521476])
ge = np.array([ 0.        , 0.0059949 ,-0.00423621, 0.00033767, 0.00050203, 0.00032443,
  0.00067741,-0.00190897, 0.00753902, 0.04711826, 0.0933818 , 0.12066237,
  0.12579744, 0.11641284, 0.10416555, 0.09648135, 0.09549591, 0.09993748,
  0.10581042, 0.10908488, 0.10626231, 0.09597036, 0.08230732, 0.0751856 ,
  0.0862875 , 0.12299197, 0.17704782, 0.2184582 , 0.18673146, 0.04879375])
thetae = ae + ge

xt = np.array([   0.        ,   8.23580089,  23.47055501,  44.38638487,  69.41619298,
   97.33860186, 127.28247944, 158.68106758, 191.69817324, 226.83827616,
  264.45627401, 304.74844785, 347.74383413, 393.29077701, 441.07591669,
  490.71167994, 541.7521186 , 593.61797684, 645.72689873, 697.50472778,
  748.39695341, 797.92527484, 845.71259261, 891.48734304, 935.09661552,
  976.38363818,1015.47094205,1052.5591669 ,1087.94291404,1121.88244314])
ht = np.array([ 0.00000000e+00, 6.93358566e-02,-1.00170667e-02,-7.61759172e-02,
  1.24386934e+00, 4.05388889e+00, 8.42957121e+00, 1.42938561e+01,
  1.96346978e+01, 2.30501155e+01, 2.45960026e+01, 2.51881573e+01,
  2.56900169e+01, 2.69926950e+01, 2.96840894e+01, 3.40421000e+01,
  4.04287599e+01, 4.94181687e+01, 6.10707142e+01, 7.54044332e+01,
  9.23418505e+01, 1.11642892e+02, 1.32949402e+02, 1.55836065e+02,
  1.79825649e+02, 2.04584092e+02, 2.29472070e+02, 2.53956198e+02,
  2.77547270e+02, 2.99927287e+02])
at = np.array([ 6.16271544e-01, 8.65463251e-01, 9.90107723e-01, 4.43738867e-01,
  3.54706372e-01, 2.49634588e-01, 1.64405687e-01, 3.83913477e-02,
  6.48541002e-03, 4.48538080e-03, 1.64942369e-02, 1.58302201e-02,
  1.56872561e-02, 9.39476129e-03, 2.02313060e-03,-1.84628075e-03,
  1.96555341e-03,-2.04516482e-03,-1.87169814e-03,-1.56045926e-03,
 -1.27024554e-03,-1.08156197e-03, 4.62369201e-05,-2.96683591e-04,
  5.79979839e-03, 3.20515396e-03, 5.41785473e-03, 4.04073863e-03,
  1.28898328e-02, 9.69354119e-06])
gt = np.array([ 0.        , 0.00572257,-0.01459251, 0.02191502, 0.07812616, 0.12139728,
  0.1692967 , 0.18528108, 0.13078334, 0.06533562, 0.02324528, 0.00962528,
  0.01732539, 0.0413155 , 0.07131656, 0.10434632, 0.14691078, 0.1957391 ,
  0.24466201, 0.29565867, 0.34678557, 0.39603557, 0.44244606, 0.4837827 ,
  0.52264046, 0.55553145, 0.57724748, 0.58723168, 0.58853005, 0.57147714])
thetat = at + gt
#endregion

m1 = Mesh('lpc.stl').scale(20).rotate_z(180)
m1.c('blue').lighting('glossy').phong()
m2 = m1.clone()
m2.c('red').lighting('glossy').phong()

m1.pos(0, 0, 0).add_trail(n=2000)
m2.pos(0, 0, 0).add_trail(n=2000)

# Setup the scene
cam = dict(
    position=(1500, -9000, 0),
    focal_point=(1500, 0, 0),
    viewup=(0, 0, 1),
    distance=0,
)
plt = Plotter(axes=0, interactive=False)


# interpolate data
n = 1000
num = 30
dt = 2.66245201
# linear time vector and interpolated time vector
tvec = np.linspace(0,num*dt,num)
ti = np.linspace(tvec.min(), tvec.max(), n)
# data splines
xs = make_interp_spline(tvec,xe)
hs = make_interp_spline(tvec,he)
ts = make_interp_spline(tvec,thetae)
# interpolated data splines
xie = xs(ti)
hie = hs(ti)
tie = ts(ti)


index = 0
tref = 0
for t in np.arange(0, num*dt, num*dt/n):
    m1.rotate_y(-1*np.rad2deg(tie[index] - tref))
    tref = tie[index]

    m1.pos(xie[index], 0, hie[index])
    index += 1
    plt.show(m1, m2 , __doc__, axes=0, viewup="z",camera=cam,rate=200)


plt.interactive().close()