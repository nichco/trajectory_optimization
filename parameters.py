import numpy as np


# aircraft and mission parameter definitions
options = {} # aircraft and mission parameter dictionary

# aircraft data
options['mass'] = 2000 # 3724 (kg)
options['wing_area'] = 19.6 # (m^2)
options['aspect_ratio'] = 12.13
options['wing_set_angle'] = 2 # (deg)
options['max_cruise_power'] = 468300 # (w)
options['max_lift_power'] = 103652 # (w)
options['span_efficiency'] = 0.8 # finite wing correction
options['cd_0'] = 0.02 # zero-lift drag coefficient
options['cruise_rotor_diameter'] = 2.1 # 2.7(m)
options['lift_rotor_diameter'] = 2.0 # 3 (m)
options['num_lift_rotors'] = 8
options['num_cruise_blades'] = 4 # 6
options['num_lift_blades'] = 2
options['cruise_mac'] = 0.15
options['lift_mac'] = 0.15
options['c_sigma'] = 0.19
options['l_sigma'] = 0.095
options['energy_scale'] = 0.0001 # scale energy for plotting

# mission parameters
options['gravity'] = 9.81 # (m/s^2)
options['v_0'] = 5 # (m/s)
options['gamma_0'] = 0 # (rad)
options['h_0'] = 0 # (m)
options['x_0'] = 0 # (m)
options['alpha_0'] = 0 # (rad)
options['h_f'] = 300 # (m)
options['v_f'] = 43 # (m/s)

# set the initial integrator timestep
options['dt'] = 0.87066372 #0.85585751 #1.21333051 #2.70794719 # 3.5


# initial control inputs
"""
options['control_x_i'] = np.ones(30)*2300
options['control_z_i'] = np.linspace(800, 100, 30)
options['control_alpha_i'] = np.linspace(0.7, 0, 30)
"""
"""
print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""
"""
# min dt seed (nominal) (converges from here)
options['control_x_i'] = np.array([2124.99713301,2147.24162348,2115.99307639,2214.36883994,2235.05443852,
 2251.16923596,2262.83541486,2251.50139516,2280.69407357,2318.61481819,
 2372.73930726,2396.17291084,2402.23339706,2410.49323496,2416.40173985,
 2422.22593009,2427.72441213,2432.44080978,2435.91621419,2438.89892645,
 2445.35503282,2447.08162961,2442.22806877,2441.27106436,2434.52204514,
 2395.05870964,2383.57262964,2339.14905017,2326.76477643,2322.1561648 ])
options['control_z_i'] = np.array([1.39186114e+03,1.40588527e+03,1.44174575e+03,1.40516985e+03,
 1.40707281e+03,1.40503301e+03,0.00000000e+00,0.00000000e+00,
 5.61818907e-11,1.39204212e+03,1.36908634e+03,1.36221795e+03,
 3.33518864e+01,9.49141118e-11,8.51545310e+01,1.79199693e+01,
 8.46641499e+01,3.23762380e+01,7.03650851e+01,1.92946223e-10,
 2.62559450e+01,1.77522523e+01,1.36160992e+03,1.36296269e+03,
 1.77442966e+02,7.71765306e+00,8.00610237e+00,2.92696133e+01,
 7.80277801e+00,1.79312794e-10])
options['control_alpha_i'] = np.array([ 0.67217549, 0.73394818, 1.35204692, 0.44813604, 0.44881455, 0.4199771 ,
 -0.2944446 ,-0.1687615 ,-0.37530761, 0.34098485, 0.22135739, 0.19954471,
 -0.14085656, 0.0091387 ,-0.01820163,-0.00819797,-0.00176691,-0.00863974,
 -0.01958483,-0.02096045,-0.01700367,-0.10227899, 0.20966134, 0.20845703,
 -0.06247892,-0.01924573,-0.04494589,-0.18205321,-0.16431064,-0.17932383])
"""

# min dt seed (nominal) (converges from here)
options['control_x_i'] = np.array([2129.77666934,2129.86585208,1943.10254843,2203.18900879,2233.74523533,
 2251.21522775,2257.28504896,2274.86587229,2289.48196921,2320.4718101 ,
 2354.77745644,2384.06578688,2399.700716  ,2414.63247526,2419.00480924,
 2427.11757828,2427.01347086,2441.64637093,2446.89035487,2450.87630584,
 2436.70262673,2384.81494831,2377.03803282,2394.82827658,2327.50610107,
 2302.03324004,2319.45993178,2352.35644301,2299.88547666,2331.77024855])
options['control_z_i'] = np.array([1.37878722e+03,1.41473125e+03,1.43158738e+03,1.41279982e+03,
 1.39630849e+03,1.39921304e+03,0.00000000e+00,0.00000000e+00,
 7.24247051e-14,1.39438558e+03,1.39008386e+03,1.37726102e+03,
 4.08734826e+01,3.74049750e-15,7.95020318e+01,1.51796514e+01,
 8.15787596e+01,3.02634647e+01,6.77845551e+01,0.00000000e+00,
 2.36980564e+01,4.76300863e+01,1.35732118e+03,1.36150930e+03,
 2.01073180e+02,0.00000000e+00,5.24674534e+00,2.21796402e+01,
 4.14159148e+00,1.60001403e-16])
options['control_alpha_i'] = np.array([-2.50513146e-17, 1.04719755e+00, 1.04719755e+00, 5.43983278e-01,
  4.38992249e-01, 4.06487932e-01,-3.09925120e-01,-1.70263892e-01,
 -2.51728231e-01, 3.43024195e-01, 3.41008514e-01, 2.89916080e-01,
 -1.90950578e-01, 4.13678556e-03,-1.91743784e-02,-4.67751166e-03,
 -6.22608745e-03,-6.39813319e-03,-9.72676163e-03,-2.49079428e-03,
 -1.61803704e-02,-1.38869519e-01, 2.25403062e-01, 2.23745419e-01,
 -8.56669196e-02,-8.78041663e-03,-3.33641727e-02,-1.53689144e-01,
 -1.58285178e-01,-1.76057858e-01])


"""
# min e seed (nominal)
options['control_x_i'] = np.array([1413.51319542, 1753.71102218, 1728.87276412, 1399.89367014, 1392.52378402,
 1386.93435368, 1400.36858451, 1422.7035186,  1467.58011543, 1517.77141772,
 1541.46126329, 1541.41195974, 1530.897933 ,  1517.56486893, 1510.49175146,
 1510.9059217 , 1514.51576295, 1519.456195 ,  1522.77545268, 1524.5415462,
 1520.37811981, 1518.77123738, 1532.64602281, 1558.62303483, 1590.60344804,
 1605.23621351, 1563.17053215, 1467.44094911, 1353.45810529, 1283.94980524])
options['control_z_i'] = np.array([1622.92466456, 1107.07708667,  684.03697425,  359.62226127,  205.54080207,
  173.58805183,  107.55597198,  100.19190181,  100.,          100.,
  100.        ,  100.        ,  100.        ,  100.,          100.,
  100.        ,  100.        ,  100.        ,  100.,          100.,
  100.        ,  100.        ,  100.        ,  100.,          100.,
  100.        ,  100.        ,  100.        ,  100.,          100.        ])
options['control_alpha_i'] = np.array([0.87190034, 0.46127608, 0.19230684, 0.15067009, 0.10096179, 0.07442622,
 0.05460498, 0.03274503, 0.02643667, 0.01866871, 0.01497499, 0.00867657,
 0.00695788, 0.00875725, 0.00911545, 0.01233707, 0.01199045, 0.01170604,
 0.01289388, 0.01201674, 0.01109781, 0.00996596, 0.00741877, 0.00729881,
 0.01016355, 0.01307813, 0.02133539, 0.02541958, 0.01869125, 0.00592693])
"""









