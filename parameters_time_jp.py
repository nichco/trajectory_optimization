import numpy as np


# aircraft and mission parameter definitions
options = {} # aircraft and mission parameter dictionary

# aircraft data
options['mass'] = 3000 # 2000 # (kg)
options['wing_area'] = 19.6 # (m^2)
options['max_cruise_power'] = 468300.0 # (w)
options['max_lift_power'] = 103652.0 # 103652(w)
options['cruise_rotor_diameter'] = 2.6 # (m)
options['lift_rotor_diameter'] = 2.4 # (m)
options['num_lift_rotors'] = 8
options['num_cruise_blades'] = 3
options['num_lift_blades'] = 2
options['cruise_mac'] = 0.15 # (m)
options['lift_mac'] = 0.15 # (m)
options['c_sigma'] = 0.19
options['l_sigma'] = 0.095
options['energy_scale'] = 0.0001 # scale energy for plotting

# mission parameters
options['gravity'] = 9.81 # (m/s^2)
options['v_0'] = 1.24 # 1.24 (m/s)
options['gamma_0'] = 0 # (rad)
options['h_0'] = 300 # (m)
options['min_h'] = 0.0 # 299.9 (m)
options['x_0'] = 0 # (m)
options['alpha_0'] = 0 # (rad)
options['h_f'] = 300 # (m)
options['v_f'] = 58 # 43 (m/s)
options['vne'] = 70 # (m/s)
options['x_lim'] = 5000 # (m)
options['theta_0'] = 0 # (rad)
options['gamma_f'] = 0 # (rad)
options['max_g'] = 0.5 # (g)
options['max_dgamma'] = 1.5 # (rad/s)


"""
print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""


# min dt seed (dtheta)
options['dt'] = 0.7
options['control_x_i'] = np.array([ 348.70849178,   5.42749529,1504.73021868,1512.44449052,1520.48520495,
 1527.51199302,1409.07619158,1448.46833839,1541.0981999 ,1565.94142857,
 1576.97087181,1583.14838104,1593.39717508,1600.062689  ,1605.07242044,
 1613.60180147,1626.44996964,1635.94886142,1644.76532286,1657.22375355,
 1669.49925719,1677.35302279,1681.94808672,1699.34966068,1704.15818987,
 1716.22755674,1722.32474427,1724.66380132,1739.51491287,1742.82318427,
 1751.65835602,1754.8078714 ,1755.25781044,1765.67152143,1356.18354415,
  588.81786175, 450.22430689, 222.43084563, 185.03740551, 222.97959035,
  178.91982503, 204.0335117 , 536.59170267,1494.47055444, 662.14940144])
options['control_z_i'] = np.array([6.82570852e+02,1.10408797e+02,1.02584647e+03,1.02978791e+03,
 1.03148093e+03,1.03466449e+03,1.03357778e+03,1.03545187e+03,
 1.03530158e+03,1.03018900e+03,1.02886552e+03,1.02609756e+03,
 1.02126373e+03,9.43437762e+02,3.43372716e+02,5.77573887e+01,
 6.69591776e+00,5.44857789e-01,1.22203118e-01,5.55790792e-02,
 3.33448062e-02,3.13535046e-02,1.54927100e-02,4.60358204e-03,
 1.14624755e-02,1.34093560e-02,1.84637438e-02,7.91560156e-03,
 2.08351927e-02,1.37969246e-02,1.10118378e-02,2.42635791e-02,
 1.37742015e-02,1.53142047e-02,1.56055454e-02,5.52734261e-03,
 1.50743351e-02,3.57334690e-02,4.87012322e-02,6.39090164e-02,
 4.66395714e-02,4.41078249e-02,5.01000549e-02,2.29446771e+00,
 1.10823145e+02])
options['control_alpha_i'] = np.array([-1.06284673e-19,-1.15410789e-01,-2.06130602e-01, 1.15272803e-01,
  2.44174358e-01, 2.84348363e-01, 2.43321832e-01, 2.52277587e-01,
  2.58871349e-01, 2.26413170e-01, 1.84363048e-01, 1.40069036e-01,
  1.05703040e-01, 1.29556968e-01, 1.91330052e-01, 2.16176952e-01,
  2.20527656e-01, 2.12433097e-01, 1.96529822e-01, 1.72916606e-01,
  1.42645273e-01, 1.14184096e-01, 9.18413069e-02, 7.70276566e-02,
  6.55067628e-02, 5.85127664e-02, 5.34490836e-02, 5.00528569e-02,
  4.57690254e-02, 4.11776491e-02, 3.58262067e-02, 3.05571910e-02,
  2.40682404e-02, 1.88176122e-02, 1.44881379e-02, 1.35201554e-02,
  1.56952185e-02, 1.72768240e-02, 1.84737881e-02, 1.95023071e-02,
  1.61625802e-02, 1.40289104e-02, 7.83820945e-03,-3.86265529e-03,
  3.52808160e-02])