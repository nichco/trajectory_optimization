import numpy as np


# aircraft and mission parameter definitions
options = {} # aircraft and mission parameter dictionary

# aircraft data
options['mass'] = 3000 # 2000 # (kg)
options['wing_area'] = 19.6 # (m^2)
options['max_cruise_power'] = 468300.0 # (w)
options['max_lift_power'] = 103652.0 # 103652(w)
options['cruise_rotor_diameter'] = 2.6 # (m)
options['lift_rotor_diameter'] = 2.4 # (m)
options['num_lift_rotors'] = 8
options['num_cruise_blades'] = 3
options['num_lift_blades'] = 2
options['cruise_mac'] = 0.15 # (m)
options['lift_mac'] = 0.15 # (m)
options['c_sigma'] = 0.19
options['l_sigma'] = 0.095
options['energy_scale'] = 0.0001 # scale energy for plotting

# mission parameters
options['gravity'] = 9.81 # (m/s^2)
options['v_0'] = 1.5 # 4 (m/s)
options['gamma_0'] = 0 # (rad)
options['h_0'] = 300 # (m)
options['min_h'] = 0.0 # 299.9 (m)
options['x_0'] = 0 # (m)
options['alpha_0'] = 0 # (rad)
options['h_f'] = 300 # (m)
options['v_f'] = 58 # 43 (m/s)
options['vne'] = 70 # (m/s)
options['x_lim'] = 5000 # (m)
options['theta_0'] = 0 # (rad)
options['gamma_f'] = 0 # (rad)
options['max_g'] = 0.5 # (g)
options['max_dgamma'] = 1.5 # (rad/s)

# set the initial integrator timestep
options['dt'] = 1.1390853 #1.78119483


# initial control inputs
"""
options['control_x_i'] = np.ones(30)*2300
options['control_z_i'] = np.linspace(800, 100, 30)
options['control_alpha_i'] = np.linspace(0.7, 0, 30)
"""
"""
print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""


# min dt seed (dtheta)
options['control_x_i'] = np.array([   7.78230335, 397.15612261,1516.60990274,1297.66034257, 560.85783452,
   74.17598793,  11.49208564, 232.05368104, 997.24482546,1415.38601781,
 1413.51044095,1328.34011155,1352.42910591,1415.68980707,1465.55642626,
 1515.30492696,1559.1848699 ,1595.96218666,1629.67183268,1664.03648212,
 1685.5362639 ,1658.48568309,1572.02003817,1432.81866854,1305.45738671,
 1185.90987479,1043.39543809, 896.38546582, 725.05861212, 531.64333858,
  408.11069696, 316.08114961, 229.36817755, 165.22369814,  97.47517409,
    8.93155911,  45.9702843 ,   4.62449359,  10.77742196,  20.8816911 ,
   10.4548544 ,  10.04230099,   1.76434308, 108.06270817, 656.51098652])
options['control_z_i'] = np.array([8.91304101e+02,5.71803853e+01,1.02820344e+03,1.03334621e+03,
 1.03630508e+03,1.03827455e+03,1.03698638e+03,1.03146190e+03,
 1.02352782e+03,1.01698976e+03,4.77706942e+02,3.42568485e+02,
 3.11320689e+02,1.17613692e+02,2.96365483e+01,4.87198529e+00,
 1.07744144e+00,1.25999914e-01,6.05061851e-02,3.54217336e-02,
 2.37173954e-02,2.39056026e-02,1.14824846e-02,2.76001450e-03,
 8.41856818e-03,9.26111188e-03,1.34666238e-02,4.26090019e-03,
 1.49958502e-02,8.99877171e-03,6.51944299e-03,1.73420281e-02,
 8.60833805e-03,1.04319181e-02,1.11864354e-02,2.96627518e-03,
 1.02462592e-02,2.62181285e-02,3.59651523e-02,4.97617205e-02,
 3.53505061e-02,3.51976629e-02,1.70616667e-03,0.00000000e+00,
 1.09035393e+02])
options['control_alpha_i'] = np.array([-3.49543845e-21,-1.00076920e-02,-9.01797861e-02, 1.85760977e-01,
  2.68500839e-01, 3.06215597e-01, 2.83777199e-01, 2.10627703e-01,
  1.13902864e-01, 4.57681216e-02, 7.82147883e-02, 1.32007771e-01,
  1.39112142e-01, 1.28689368e-01, 1.11782895e-01, 9.20157587e-02,
  7.44182959e-02, 5.98416091e-02, 4.75951498e-02, 3.70010789e-02,
  2.77683792e-02, 1.98396756e-02, 1.32878875e-02, 8.43484267e-03,
  5.12713138e-03, 2.97502764e-03, 1.76767247e-03, 1.41964000e-03,
  1.96729638e-03, 2.81300807e-03, 4.32957236e-03, 6.25827185e-03,
  8.37343036e-03, 1.06580985e-02, 1.29975294e-02, 1.53716192e-02,
  1.78128327e-02, 2.01175650e-02, 2.25262706e-02, 2.50265724e-02,
  2.73468495e-02, 2.95646820e-02, 2.98570552e-02, 3.24484335e-02,
  3.53243574e-02])

"""
# min e seed (no dgamma)
options['control_x_i'] = np.array([2.43209089e+01,7.47367962e-14,1.33712622e+03,1.21176390e+03,
 1.59086245e+03,1.60752999e+03,1.38396312e+03,1.28468793e+03,
 1.19929599e+03,1.14596381e+03,1.10550707e+03,1.07275411e+03,
 1.04464066e+03,1.01952002e+03,9.96467657e+02,9.74756602e+02,
 9.53992602e+02,9.34260826e+02,9.15751968e+02,8.98382194e+02,
 8.82045778e+02,8.66555229e+02,8.51920953e+02,8.38111866e+02,
 8.24840072e+02,8.12054414e+02,7.99719323e+02,7.87765959e+02,
 7.76192858e+02,7.65000668e+02,7.54031278e+02,7.43264821e+02,
 7.32709409e+02,7.22343245e+02,7.12153792e+02,7.02180870e+02,
 6.92522050e+02,6.82928715e+02,6.73370254e+02,6.63671124e+02,
 6.54614483e+02,6.45283754e+02,6.36248797e+02,6.27118648e+02,
 6.18990135e+02])
options['control_z_i'] = np.array([1.03003651e+03,4.74248851e-15,1.01000621e+03,1.04759592e+03,
 9.31375716e+02,6.20909785e+02,4.74475762e+02,3.69113114e+02,
 3.06188350e+02,2.61526735e+02,2.17285278e+02,1.97697767e+02,
 1.78055007e+02,1.55525758e+02,1.28814727e+02,9.20615331e+01,
 5.10918711e+01,2.32732408e+01,5.09573869e+00,1.09323117e+00,
 4.01424538e-01,3.15271400e-02,9.45806509e-03,1.59785872e-03,
 8.41982307e-03,1.88815790e-02,2.54970538e-02,1.54686392e-02,
 2.81996785e-03,9.99330690e-04,9.25977370e-04,8.56230914e-04,
 8.11096398e-04,7.69387888e-04,7.32146893e-04,6.99848155e-04,
 6.71705844e-04,6.27907015e-04,6.22582479e-04,6.07262874e-04,
 5.55057009e-04,5.70859871e-04,5.53423762e-04,5.21706763e-04,
 5.83825243e-04])
options['control_alpha_i'] = np.array([-7.30768585e-22, 3.80342478e-01, 4.72244778e-01, 5.23168285e-01,
  2.24610892e-01, 1.72824740e-01, 1.52164006e-01, 1.36800245e-01,
  1.22761511e-01, 1.10857898e-01, 1.01905090e-01, 9.36105756e-02,
  8.66268055e-02, 8.05794295e-02, 7.57445426e-02, 7.17796892e-02,
  6.80113085e-02, 6.43744970e-02, 6.09758357e-02, 5.79601704e-02,
  5.52246767e-02, 5.27483970e-02, 5.06252067e-02, 4.84704923e-02,
  4.65602270e-02, 4.51179912e-02, 4.37296306e-02, 4.23770942e-02,
  4.11548426e-02, 4.01450365e-02, 3.92185250e-02, 3.84309467e-02,
  3.77403614e-02, 3.71552557e-02, 3.67076918e-02, 3.62449619e-02,
  3.59812790e-02, 3.57801248e-02, 3.56799240e-02, 3.56919235e-02,
  3.56194446e-02, 3.58942166e-02, 3.61532937e-02, 3.46399776e-02,
  3.94670144e-02])
  """