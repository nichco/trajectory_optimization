import numpy as np


# aircraft and mission parameter definitions
options = {} # aircraft and mission parameter dictionary

# aircraft data
options['mass'] = 3000 # 2000 # (kg)
options['wing_area'] = 19.6 # (m^2)
options['max_cruise_power'] = 468300 # (w)
options['max_lift_power'] = 145652 # 103652 (w)
options['cruise_rotor_diameter'] = 2.6 # (m)
options['lift_rotor_diameter'] = 2.4 # (m)
options['num_lift_rotors'] = 8
options['num_cruise_blades'] = 3
options['num_lift_blades'] = 2
options['cruise_mac'] = 0.15 # (m)
options['lift_mac'] = 0.15 # (m)
options['c_sigma'] = 0.19
options['l_sigma'] = 0.095
options['energy_scale'] = 0.0001 # scale energy for plotting

# mission parameters
options['gravity'] = 9.81 # (m/s^2)
options['v_0'] = 0.625 #spyder:0.625 (m/s)
options['gamma_0'] = 0.0 # (rad)
options['h_0'] = 0 # (m)
options['min_h'] = -0.1 # (m)
options['x_0'] = 0 # (m)
options['alpha_0'] = 0 # (rad)
options['h_f'] = 300 # (m)
options['v_f'] = 58 # 43 (m/s)
options['vne'] = 65 # (m/s)
options['x_lim'] = 5000 # (m)
options['theta_0'] = 0.0 # (rad)
options['gamma_f'] = 0.0 # (rad)
options['max_g'] = 0.5 # (g)

# obstacle
options['be'] = 10 # (m) start of sinusoidal ramp
options['p_i'] = 80 # (m) start of obstacle
options['p_f'] = 12000 # (m) end of obstacle
options['obs_height'] = 88 # (m) 75


"""
print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""

# min e seed OBS!
options['dt'] = 2.002
options['control_x_i'] = np.array([1472.1244877 ,1466.76315442, 842.60446289,1308.67831756,1426.4755678 ,
 1462.25067716,1467.09578566,1475.87691603,1490.71177993,1475.8512207 ,
 1506.67788211,1544.07065446,1555.24691219,1560.06208595,1560.66608959,
 1501.19472373,1448.7615287 ,1446.06192096,1460.25670597,1426.00316505,
 1486.95829953,1476.43079663,1504.86175606,1514.73929579,1507.6316336 ,
 1520.70015864,1526.51675579,1518.0744976 ,1513.38741229,1515.14170829,
 1501.3168308 ,1486.19525217,1253.14108359,1020.33660511, 802.6312996 ,
  604.85578284, 436.85786313, 279.32249063, 150.503635  , 665.05947458])
options['control_z_i'] = np.array([1.13053816e+03,1.11532578e+03,1.12881730e+03,1.13454341e+03,
 1.13877931e+03,1.14269332e+03,1.14568488e+03,1.14167723e+03,
 1.14005647e+03,1.14308934e+03,1.13835601e+03,1.13347648e+03,
 1.10684629e+03,4.86463585e+02,1.33629495e+02,1.67782934e+01,
 8.58276598e-01,5.51269742e-02,7.14110032e-02,6.86381111e-02,
 8.40237086e-02,4.37453953e-02,1.35003008e-03,1.45033029e-03,
 1.47583038e-03,1.50656149e-03,1.53805314e-03,1.56273243e-03,
 1.56949921e-03,1.56098583e-03,1.54379334e-03,1.52494739e-03,
 1.50541077e-03,1.49747700e-03,1.49412885e-03,1.50671729e-03,
 1.53741901e-03,1.78465316e-02,1.86817603e-02,1.24734075e-03])
options['control_alpha_i'] = np.array([-0.08276886,-1.56555949,-0.72057348,-0.69462149,-0.55455736,-0.33977443,
 -0.17834014,-0.09763408,-0.07374785,-0.03058121,-0.03704629,-0.03748347,
  0.0313959 , 0.11889297, 0.18886714, 0.19992487, 0.16105065, 0.09246722,
  0.07013698, 0.05593857, 0.0448164 , 0.03429505, 0.02113244, 0.01143071,
  0.00476329,-0.00231206,-0.00743127,-0.00952668,-0.01205308,-0.01139117,
 -0.01132888,-0.01034309,-0.0150189 ,-0.01464063,-0.01107816,-0.00331165,
  0.00918187, 0.02366725,-0.02304303, 0.03653872])


"""
# min dt seed new
options['dt'] = 1.499
options['control_x_i'] = np.array([1477.47014741,1417.81292867,1496.15121491,1498.4017867 ,1501.96477912,
 1505.01684938,1508.04043741,1505.39443368,1517.06254609,1541.50892715,
 1546.04454129,1562.05218713,1596.83906202,1586.93702028,1613.63332575,
 1618.39641925,1629.97405975,1653.7895603 ,1671.18000229,1636.33817534,
 1703.51902971,1695.38550771,1726.5473376 ,1735.77830766,1726.48846772,
 1739.44582402,1745.4484975 ,1735.84431128,1731.99784165,1738.76655698,
 1731.27955297,1718.75689868,1466.15385812,1205.69916543, 958.87020639,
  731.40657185, 533.98410776, 346.98317952, 213.73090777, 665.1318676 ])
options['control_z_i'] = np.array([1.09242549e+03,1.11206040e+03,1.12337663e+03,1.12694905e+03,
 1.13045674e+03,1.13435815e+03,1.13434086e+03,1.13296986e+03,
 1.13224078e+03,1.11141073e+03,1.12506322e+03,1.12292828e+03,
 1.06301685e+03,4.25046412e+02,9.53015441e+01,9.62694409e+00,
 3.82438482e-01,4.45160775e-03,1.26540906e-03,1.25317995e-03,
 1.33932405e-03,1.39384327e-03,1.44913855e-03,1.49092784e-03,
 1.51789975e-03,1.53311088e-03,1.54917055e-03,1.56213538e-03,
 1.56153884e-03,1.54923522e-03,1.53477194e-03,1.52012297e-03,
 1.50495617e-03,1.49859039e-03,1.49644905e-03,1.50944004e-03,
 1.47524591e-03,1.44344145e-03,5.53756322e-04,2.34764862e-07])
options['control_alpha_i'] = np.array([ 4.93198149e-02,-1.55914529e+00,-8.11249319e-01,-6.66829642e-01,
 -4.65060683e-01,-2.37813803e-01,-1.65990355e-01,-1.41637845e-01,
 -9.07975263e-02,-3.27030334e-02,-5.19591097e-02,-3.65760338e-02,
  5.21942560e-02, 1.52639188e-01, 1.86847364e-01, 1.75046892e-01,
  1.29389412e-01, 8.67243201e-02, 7.77459667e-02, 6.12642261e-02,
  4.99914466e-02, 4.16662600e-02, 3.05206504e-02, 2.29070194e-02,
  1.71685356e-02, 9.89241754e-03, 5.96229093e-03, 3.76509868e-03,
  6.55877990e-04,-1.42797356e-04,-1.69700860e-03, 9.20555172e-04,
 -3.39778131e-03,-2.55643601e-03, 2.42057992e-04, 4.78653602e-03,
  9.29526923e-03, 1.62377906e-02,-2.58977111e-02, 3.65392037e-02])
"""
