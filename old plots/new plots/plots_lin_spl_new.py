import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import make_interp_spline
plt.rcParams["font.family"] = "Times New Roman"
plt.rcParams.update({'font.size': 12})
"""
print(np.array2string(sim['x'],separator=','))
print(np.array2string(sim['h'],separator=','))
print(np.array2string(sim['v'],separator=','))
print(np.array2string(sim['max_spl_gl'],separator=','))

print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""
num = 30


#region mintnom
# min t nom
dttn = 0.9270615
etn = 16348893.14520152
ttn = np.linspace(0,num*dttn,num)
xtn = np.array([   0.        ,   8.25551682,  23.53072112,  44.51629938,  69.63212422,
   97.64866276, 127.68354605, 159.14075592, 192.1333374 , 227.19184136,
  264.6879085 , 304.81227989, 347.60253217, 392.91372284, 440.44218384,
  489.79171824, 540.48439098, 591.9562347 , 643.60916639, 694.87795119,
  745.22916422, 794.20537274, 841.43675611, 886.71491298, 929.94186223,
  971.00431992,1010.05309921,1047.30265656,1083.04725885,1117.53771003])
htn = np.array([ 0.00000000e+00, 6.31497213e-02,-2.48464296e-02,-7.53045277e-02,
  1.28295978e+00, 4.15754980e+00, 8.62443087e+00, 1.46354416e+01,
  2.02493591e+01, 2.40183198e+01, 2.59393114e+01, 2.68913403e+01,
  2.77142843e+01, 2.92917187e+01, 3.22190782e+01, 3.67999960e+01,
  4.34241321e+01, 5.26652456e+01, 6.45834437e+01, 7.91714178e+01,
  9.63160931e+01, 1.15739029e+02, 1.37037815e+02, 1.59756630e+02,
  1.83409651e+02, 2.07669927e+02, 2.31923633e+02, 2.55670893e+02,
  2.78460928e+02, 3.00015371e+02])
vtn = np.array([ 5.        ,12.81755001,19.90963245,25.08389909,28.9460382 ,31.6803055 ,
 33.73844128,35.3013924 ,36.98110581,39.1926921 ,41.86690118,44.73419471,
 47.5739677 ,50.19239613,52.48131633,54.37369126,55.86238361,56.88044911,
 57.41957628,57.51419024,57.1797669 ,56.42415801,55.31460832,53.93811869,
 52.33506796,50.53452648,48.62387363,46.68094308,44.78213291,43.00011465])
spltn = np.array([119.02899923,118.97299265,118.80830178,117.27373904,116.05749309,
 114.42658082,111.22480171,107.07854671,104.51824726,103.06942414,
 102.42175391,102.29596736,102.17310417,101.81660425,100.94886091,
  99.44175571, 97.97745051, 95.74821128, 93.52007544, 91.28679806,
  89.19495024, 86.69077724, 84.79721519, 82.8428133 , 81.0594126 ,
  79.43389936, 77.9656808 , 76.70374336, 75.52778977, 74.73702941])
#endregion


#region mint120-70seg
# min t 120-70
dtt120_70 = 1.01359087
et120_70 = 16658219.99294153
tt120_70 = np.linspace(0,num*dtt120_70,num)
xt120_70 = np.array([   0.        ,   8.84875203,  24.27953707,  44.81482273,  69.41918394,
   97.42934214, 128.19795134, 161.69622009, 198.14830083, 237.37584061,
  279.01102542, 322.81689924, 368.69066445, 416.47773554, 465.81525585,
  516.3707119 , 567.90022674, 620.22403646, 673.12059824, 725.71723576,
  776.79816226, 825.52347571, 871.64681801, 915.50205243, 958.1960494 ,
 1001.05844456,1044.93305596,1089.46883663,1133.46718605,1174.60533742])
ht120_70 = np.array([  0.        ,  0.36536223,  1.60291293,  3.45057593,  5.66174801,
   8.53994186, 12.16117824, 14.97806308, 17.2567168 , 20.40501987,
  24.80745947, 30.07183521, 35.83024763, 42.20843173, 49.87787736,
  59.04495173, 69.46340341, 80.84754834, 93.29280522,108.36502807,
 127.28101355,149.632155  ,174.03778743,198.7942031 ,221.93965508,
 241.6700536 ,256.86684749,269.33310174,282.58822383,299.94117402])
vt120_70 = np.array([ 5.        ,12.25712092,18.03889494,22.47328216,26.17939159,29.26761782,
 31.82438884,34.57388387,37.47772807,40.1202756 ,42.44937889,44.58914622,
 46.61974016,48.46181803,50.02109546,51.32003639,52.37850411,53.2611054 ,
 53.89389705,53.98253259,53.42689326,52.27762872,50.62253463,48.75775885,
 47.1566229 ,46.07808332,45.67244018,45.57916566,44.93535069,43.01034026])
splt120_70 = np.array([119.15792743,118.27595622,116.55570309,114.83289425,113.11657692,
 111.04886241,108.66146621,107.1437725 ,105.9477481 ,104.51316139,
 102.71947995,100.94790901, 99.19282177, 97.21552575, 95.70050101,
  93.99551252, 92.21539244, 90.68419773, 88.48519722, 87.00505443,
  85.40671339, 83.38787573, 81.00335114, 79.54547361, 78.62105293,
  76.89287117, 75.17397533, 73.45049234, 71.72699769, 70.00287724])
#endregion


#region mint120-65seg
# min t 120-65
dtt120_65 = 1.10286002
et120_65 = 17152758.53834573
tt120_65 = np.linspace(0,num*dtt120_65,num)
xt120_65 = np.array([   0.        ,   9.99312847,  27.68920492,  51.14776228,  79.12372848,
  110.53854783, 144.51971697, 182.19312175, 224.05362489, 268.38905242,
  314.15957341, 362.29065857, 413.05125538, 465.74411037, 519.24250605,
  573.36831973, 628.02154105, 682.93900911, 737.99046784, 792.33070094,
  844.27407187, 891.86402189, 933.77716897, 971.30746616,1007.55117731,
 1045.48433905,1086.50902943,1130.21727917,1176.58238822,1224.07940467])
ht120_65 = np.array([  0.        ,  0.41795077,  1.82714726,  4.11101919,  7.36615629,
  12.61251304, 17.76778716, 17.58651682, 18.34360935, 23.92614696,
  32.81325458, 39.34410423, 45.10511715, 53.39835814, 64.94440628,
  78.26496522, 92.67371892,108.11497551,124.16594361,142.46325481,
 164.39787132,191.22118223,221.39946186,251.18061191,276.69848274,
 294.29408725,300.86178422,299.55625284,297.52542403,299.91544344])
vt120_65 = np.array([ 5.        ,12.89385095,18.98885329,23.57123481,27.4116526 ,30.120194  ,
 32.36815389,36.2076647 ,39.46284915,41.50111546,43.06099092,45.15030815,
 47.465911  ,49.11286293,50.11600862,50.92996792,51.53513943,51.87432926,
 52.10667664,51.69919731,50.51890264,48.38625608,45.19238902,41.73269103,
 38.87925802,37.48440572,38.46019792,40.9796062 ,42.94789142,43.00568395])
splt120_65 = np.array([119.16314985,118.10573741,116.21512834,114.3328623 ,112.09445777,
 108.00271991,105.52123212,105.70460612,104.83841796,102.84554879,
  99.82470859, 98.00682569, 96.85199414, 93.95305181, 92.90834892,
  90.83705909, 88.95530155, 86.84896611, 85.83273135, 82.16410704,
  82.07460476, 78.89119056, 76.39331462, 75.16449002, 74.47308322,
  72.59140735, 70.18402592, 67.92532658, 66.73876154, 64.81136165])
#endregion


#region mint120-60seg
# min t 120-60
dtt120_60 = 1.18089102
et120_60 = 17349703.34377608
tt120_60 = np.linspace(0,num*dtt120_60,num)
xt120_60 = np.array([   0.        ,  11.25210014,  31.53835979,  58.07482627,  88.96254662,
  123.82506298, 161.93796739, 202.93244455, 248.03781598, 296.62619381,
  347.99927631, 401.93980134, 457.81246048, 514.74279888, 571.63609056,
  628.02003949, 683.64498247, 737.94708958, 790.56620874, 840.84855304,
  888.34237192, 932.6297404 , 973.91540945,1013.21214199,1052.73969201,
 1094.97386828,1140.17269085,1189.49715207,1241.37931724,1292.76094115])
ht120_60 = np.array([0.00000000e+00,2.96883223e-01,1.42393373e+00,3.95403883e+00,
 7.61539178e+00,1.04415828e+01,1.73684880e+01,2.20872665e+01,
 2.35759008e+01,2.85530052e+01,3.50197761e+01,4.25496504e+01,
 5.23070654e+01,6.49214645e+01,8.06751866e+01,9.87516404e+01,
 1.18589159e+02,1.40395258e+02,1.63544940e+02,1.87945932e+02,
 2.13123712e+02,2.39309733e+02,2.65125734e+02,2.88432889e+02,
 3.05465414e+02,3.09881923e+02,3.02754644e+02,2.96186341e+02,
 2.94915451e+02,2.99938450e+02])
vt120_60 = np.array([ 5.        ,13.8413514 ,20.2529454 ,24.78449932,28.00249724,31.59252878,
 33.92253456,36.56860588,40.13333831,42.80761867,45.19990819,47.33807293,
 49.01179169,49.99396729,50.31643386,50.31224248,50.04663897,49.37594239,
 48.287264  ,46.6415203 ,44.76804736,42.62869971,40.12296602,37.62700841,
 35.99327332,37.15549216,40.84839191,43.53128298,44.41477237,43.00647746])
splt120_60 = np.array([119.17108123,117.93145597,115.86356868,113.81226731,111.5725461 ,
 109.69061954,105.55980652,103.60814191,102.79516667,101.34554762,
  99.24513632, 97.23516926, 95.04232594, 91.79946614, 89.94127715,
  88.09210338, 86.12929401, 83.90481578, 81.57549354, 78.88622489,
  78.62304378, 76.53896058, 74.4788377 , 72.41554465, 69.93442149,
  67.99270897, 65.6931118 , 63.53516912, 60.80638524, 58.11525316])
#endregion







#region minenom
# min e nom
dten = 2.67211946
een = 13292179.14548814
ten = np.linspace(0,num*dten,num)
xen = np.array([   0.        ,  40.65701204, 112.17081845, 200.02583844, 296.73214727,
  400.33691799, 510.5331433 , 627.26871187, 750.81680282, 880.34086364,
 1012.87399015,1145.32527725,1276.28054124,1405.8413601 ,1534.76383172,
 1663.86013553,1793.56481446,1923.82930224,2054.26904982,2184.38994968,
 2313.93174397,2443.12328429,2572.72358064,2703.77642848,2836.90098202,
 2971.28051056,3104.01698785,3230.96096484,3349.9887158 ,3464.63791329])
hen = np.array([0.00000000e+00,1.06399831e-01,2.07337489e-01,1.46265664e-01,
 2.08870325e-01,2.42177317e-01,2.72598832e-01,2.74610633e-01,
 3.29438490e-01,4.27201101e+00,1.46574533e+01,2.99764583e+01,
 4.68225499e+01,6.27406575e+01,7.69014174e+01,8.95988567e+01,
 1.01836402e+02,1.14492128e+02,1.28025486e+02,1.42372059e+02,
 1.56832730e+02,1.70415360e+02,1.82309841e+02,1.92527388e+02,
 2.02718907e+02,2.16084895e+02,2.35583751e+02,2.60968583e+02,
 2.86036159e+02,2.99999990e+02])
ven = np.array([ 5.        ,22.6008652 ,30.41540877,34.82212713,37.50658898,40.01319966,
 42.45725491,44.93924145,47.48879462,49.33508327,49.98979424,49.71162582,
 49.10719429,48.6387519 ,48.49073989,48.63248586,48.87898542,49.05769053,
 49.06545639,48.89560486,48.67226964,48.59947286,48.87842245,49.55836158,
 50.34307394,50.590355  ,49.5962305 ,47.09887762,44.06340252,42.99997987])
splen = np.array([121.66351372,113.44532375,110.11840687,103.61953258,103.23388204,
 103.00530211,103.32899538,103.92878906,104.92170598,103.93045572,
  97.40896202, 90.31150239, 85.31704283, 81.89681266, 79.5495364 ,
  77.87003624, 76.51938499, 75.27776851, 74.01722182, 72.7301695 ,
  71.49663508, 70.47244681, 69.823173777, 69.60506538, 69.53378182,
  69.13339111, 67.68277267, 65.00031419, 61.83893784, 59.97557756])
#endregion


#region mine120-55seg
# min 2 120-55
dte120_55 = 2.7796364
ee120_55 = 13356553.84959402
te120_55 = np.linspace(0,num*dte120_55,num)
xe120_55 = np.array([   0.        ,  40.77675296, 114.5906842 , 205.88436164, 307.23329596,
  416.49472081, 533.40492901, 657.85485068, 788.12074216, 922.29427946,
 1059.19076584,1196.71796392,1333.40609934,1469.04086962,1604.08953172,
 1739.13425236,1874.50672761,2010.20144786,2146.03374879,2281.92131713,
 2417.91427585,2554.16262605,2690.67904203,2827.06103072,2962.33454638,
 3094.72208975,3222.46887225,3344.136912  ,3460.31500245,3576.70053167])
he120_55 = np.array([0.00000000e+00,9.18441572e-02,3.20196124e-01,1.62551732e-01,
 2.24264409e-01,2.59169794e-01,2.64384507e-01,7.25747394e-01,
 5.25382648e+00,1.22713794e+01,2.31822305e+01,3.80964955e+01,
 5.48218957e+01,7.12996475e+01,8.66024611e+01,1.00882474e+02,
 1.14792455e+02,1.28902208e+02,1.43330523e+02,1.57879662e+02,
 1.72212349e+02,1.86246259e+02,2.00424587e+02,2.15456145e+02,
 2.31960568e+02,2.49703773e+02,2.68373912e+02,2.87060967e+02,
 3.00995544e+02,2.99996998e+02])
ve120_55 = np.array([ 5.        ,22.29147385,30.27180923,34.93616319,37.90809701,40.69050962,
 43.43131217,46.00430466,47.665488  ,48.97131087,49.71896119,49.71972565,
 49.34442341,48.98892512,48.84026983,48.89165211,49.02653658,49.12169698,
 49.15761892,49.17541906,49.22495433,49.33286074,49.40027349,49.283742  ,
 48.65409625,47.35327065,45.44484199,43.1003782 ,41.47358433,43.00019283])
sple120_55 = np.array([120.00000133,113.75790887,109.80356505,104.34532089,103.68458275,
 103.81628152,104.01459123,104.31034213,102.06892357, 98.729829  ,
  93.29966864, 88.0212329 , 83.94450574, 80.8627584 , 78.62655517,
  76.92841515, 75.53658372, 74.20310795, 73.0818689 , 71.96176945,
  70.94705888, 70.11484126, 69.21984712, 68.44826388, 66.20688592,
  63.96555939, 61.72384267, 59.48252859, 57.24190343, 55.00179679])
#endregion


#region mine120-50seg
# min e 120-50
dte120_50 = 2.82818641
ee120_50 = 13436356.17322106
te120_50 = np.linspace(0,num*dte120_50,num)
xe120_50 = np.array([   0.        ,  41.80059213, 117.31395144, 210.49501357, 314.34146107,
  426.86065443, 547.92386257, 676.11128808, 809.51510961, 947.30764554,
 1087.87508679,1228.89844906,1368.95638005,1507.93070381,1646.34525101,
 1784.75770549,1923.53104592,2062.84502356,2202.7028758 ,2342.96623211,
 2483.29147892,2622.96206969,2760.60887029,2894.75753292,3025.04371082,
 3152.0461871 ,3276.34490055,3398.50674149,3518.80847403,3638.72604206])
he120_50 = np.array([0.00000000e+00,9.10250497e-02,3.14144769e-01,1.63959620e-01,
 2.33147568e-01,2.30112831e-01,3.17565041e-01,3.43955663e+00,
 8.63370041e+00,1.65043010e+01,2.89591610e+01,4.54478479e+01,
 6.36298071e+01,8.13842725e+01,9.79225439e+01,1.13490699e+02,
 1.28532006e+02,1.43390178e+02,1.58378993e+02,1.73831091e+02,
 1.90085259e+02,2.07701126e+02,2.26802795e+02,2.45951396e+02,
 2.62941923e+02,2.76552814e+02,2.87190536e+02,2.95115918e+02,
 3.00997886e+02,2.99999247e+02])
ve120_50 = np.array([ 5.        ,22.43921367,30.32507965,35.03028654,38.21318259,41.23527117,
 44.15162219,46.26172972,47.97387711,49.39972052,50.10514619,50.05332519,
 49.65039502,49.29865088,49.15983926,49.20585439,49.36183176,49.55985542,
 49.74820593,49.86725562,49.84065218,49.48309358,48.53030343,47.11311177,
 45.69022414,44.53211171,43.59069103,42.85485596,42.24165556,42.9999643 ])
sple120_50 = np.array([120.00000468,113.61283711,109.33538084,104.73552026,104.26415481,
 104.41082105,104.65083512,103.10318635,100.68952538, 96.92256459,
  91.62412118, 86.71739126, 82.88567399, 79.98881291, 77.85611385,
  76.19475407, 74.83777353, 73.62702071, 72.62508975, 71.63777434,
  70.6910286 , 69.31042243, 66.89658614, 64.4827724 , 62.06893469,
  59.65516887, 57.24140208, 54.82766566, 52.41388181, 49.99998457])
#endregion


#region mine120-45seg
# min e 120-45
dte120_45 = 2.8854407
ee120_45 = 13560862.71541564
te120_45 = np.linspace(0,num*dte120_45,num)
xe120_45 = np.array([   0.        ,  42.70507533, 119.77580286, 215.06062921, 321.89413837,
  438.33065733, 563.92272563, 696.05558944, 833.22682632, 975.1416819 ,
 1119.59246147,1263.95857287,1407.15807637,1549.47955592,1691.55098388,
 1833.86762756,1976.72586555,2120.25087   ,2264.21610102,2407.77795127,
 2549.3821047 ,2687.39505761,2821.16069484,2950.74431804,3076.60861588,
 3199.72627529,3321.63777994,3444.19456509,3567.69287452,3690.56248523])
he120_45 = np.array([0.00000000e+00,9.21105899e-02,2.25051515e-01,1.72042572e-01,
 2.29263257e-01,2.29665014e-01,1.22039939e+00,6.26078341e+00,
 1.26007087e+01,2.21397440e+01,3.69036819e+01,5.57348496e+01,
 7.54763335e+01,9.41969894e+01,1.11616610e+02,1.28204966e+02,
 1.44443604e+02,1.60764059e+02,1.77909874e+02,1.96915726e+02,
 2.17796949e+02,2.38760041e+02,2.57912536e+02,2.74233278e+02,
 2.87210105e+02,2.96181464e+02,3.00531615e+02,3.00704458e+02,
 3.00999130e+02,2.99999258e+02])
ve120_45 = np.array([ 5.        ,22.53601549,30.41076138,35.28658141,38.74944107,42.03854489,
 44.91779444,46.74472644,48.5472412 ,50.01815155,50.57685633,50.35978606,
 49.94287594,49.68690278,49.65220584,49.77479906,49.98994138,50.22218823,
 50.33131445,50.06256278,49.13057475,47.67573644,46.07861619,44.56272935,
 43.28252384,42.45847237,42.3078771 ,42.74313469,42.77955967,42.9999697 ])
sple120_45 = np.array([120.00000251,113.42269677,109.2563064 ,105.48463781,104.77862552,
 105.34556477,104.48276277,101.89646687, 99.31026135, 94.88552932,
  89.71932323, 85.11909971, 81.62733239, 78.99287185, 77.02356757,
  75.49479285, 74.27676121, 73.17763876, 72.20614853, 70.86201186,
  68.27586943, 65.68967047, 63.1034819 , 60.51724777, 57.93108417,
  55.34488135, 52.75864669, 50.17244387, 47.58623627, 45.00003095])
#endregion







# h vs x min e
plt.rcParams['figure.figsize'] = [11, 2.5]

eSplinen = make_interp_spline(xen,hen)
ixen = np.linspace(xen.min(), xen.max(), 500)
ihen = eSplinen(ixen)

eSpline55 = make_interp_spline(xe120_55,he120_55)
ixe55 = np.linspace(xe120_55.min(), xe120_55.max(), 500)
ihe55 = eSpline55(ixe55)

eSpline50 = make_interp_spline(xe120_50,he120_50)
ixe50 = np.linspace(xe120_50.min(), xe120_50.max(), 500)
ihe50 = eSpline50(ixe50)

eSpline45 = make_interp_spline(xe120_45,he120_45)
ixe45 = np.linspace(xe120_45.min(), xe120_45.max(), 500)
ihe45 = eSpline45(ixe45)

target_altitude = np.ones(num)*300
plt.plot(xe120_45,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(xen,hen,color='k',marker='^')
plt.scatter(xe120_55,he120_55,color='darkblue',marker='D')
plt.scatter(xe120_50,he120_50,color='blue',marker='s')
plt.scatter(xe120_45,he120_45,color='royalblue',marker='o')
plt.legend(['target altitude','minimum energy nominal','minimum energy 'r'SPL$\leq$120-55db', 'minimum energy 'r'SPL$\leq$120-50db', 'minimum energy 'r'SPL$\leq$120-45db'], frameon=False)

plt.plot(ixen,ihen,color='k',linestyle='solid',linewidth=2)
plt.plot(ixe55,ihe55,color='navy',linestyle='solid',linewidth=2)
plt.plot(ixe50,ihe50,color='blue',linestyle='solid',linewidth=2)
plt.plot(ixe45,ihe45,color='royalblue',linestyle='solid',linewidth=2)
plt.xlabel('horizontal displacement (m)')
plt.ylabel('altitude (m)')
plt.savefig('new_e_lin_spl_h_vs_x.png', dpi=1200, bbox_inches='tight')
plt.show()



# h vs x min t
plt.rcParams['figure.figsize'] = [11, 2.5]

tSplinen = make_interp_spline(xtn,htn)
ixtn = np.linspace(xtn.min(), xtn.max(), 500)
ihtn = tSplinen(ixtn)

tSpline70 = make_interp_spline(xt120_70,ht120_70)
ixt70 = np.linspace(xt120_70.min(), xt120_70.max(), 500)
iht70 = tSpline70(ixt70)

tSpline65 = make_interp_spline(xt120_65,ht120_65)
ixt65 = np.linspace(xt120_65.min(), xt120_65.max(), 500)
iht65 = tSpline65(ixt65)

tSpline60 = make_interp_spline(xt120_60,ht120_60)
ixt60 = np.linspace(xt120_60.min(), xt120_60.max(), 500)
iht60 = tSpline60(ixt60)

target_altitude = np.ones(num)*300
plt.plot(xt120_60,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(xtn,htn,color='k',marker='o')
plt.scatter(xt120_70,ht120_70,color='darkred',marker='d')
plt.scatter(xt120_65,ht120_65,color='red',marker='P')
plt.scatter(xt120_60,ht120_60,color='indianred',marker='v')
plt.legend(['target altitude','minimum time nominal','minimum time 'r'SPL$\leq$120-70db', 'minimum time 'r'SPL$\leq$120-65db', 'minimum time 'r'SPL$\leq$120-60db'], frameon=False)

plt.plot(ixtn,ihtn,color='k',linestyle='solid',linewidth=2)
plt.plot(ixt70,iht70,color='darkred',linestyle='solid',linewidth=2)
plt.plot(ixt65,iht65,color='red',linestyle='solid',linewidth=2)
plt.plot(ixt60,iht60,color='indianred',linestyle='solid',linewidth=2)
plt.xlabel('horizontal displacement (m)')
plt.ylabel('altitude (m)')
plt.savefig('new_t_lin_spl_h_vs_x.png', dpi=1200, bbox_inches='tight')
plt.show()







# spl vs t min e
plt.rcParams['figure.figsize'] = [5, 2.5]

eSplinen = make_interp_spline(ten,splen)
iten = np.linspace(ten.min(), ten.max(), 500)
isplen = eSplinen(iten)

eSpline55 = make_interp_spline(te120_55,sple120_55)
ite55 = np.linspace(te120_55.min(), te120_55.max(), 500)
isple55 = eSpline55(ite55)

eSpline50 = make_interp_spline(te120_50,sple120_50)
ite50 = np.linspace(te120_50.min(), te120_50.max(), 500)
isple50 = eSpline50(ite50)

eSpline45 = make_interp_spline(te120_45,sple120_45)
ite45 = np.linspace(te120_45.min(), te120_45.max(), 500)
isple45 = eSpline45(ite45)

#target_altitude = np.ones(num)*300
#plt.plot(xe75,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(ten,splen,color='k',marker='o')
plt.scatter(te120_55,sple120_55,color='darkblue',marker='d')
plt.scatter(te120_50,sple120_50,color='blue',marker='P')
plt.scatter(te120_45,sple120_45,color='royalblue',marker='v')
plt.legend(['min energy nominal','min energy 'r'SPL$\leq$120-55db', 'min energy 'r'SPL$\leq$120-50db', 'min energy 'r'SPL$\leq$120-45db'], frameon=False, fontsize=10)

plt.plot(iten,isplen,color='k',linestyle='solid',linewidth=2)
plt.plot(ite55,isple55,color='navy',linestyle='solid',linewidth=2)
plt.plot(ite50,isple50,color='blue',linestyle='solid',linewidth=2)
plt.plot(ite45,isple45,color='royalblue',linestyle='solid',linewidth=2)

plt.plot(te120_55,np.linspace(120,55,30),color='k',linestyle='dashed',linewidth=1)
plt.plot(te120_50,np.linspace(120,50,30),color='k',linestyle='dashed',linewidth=1)
plt.plot(te120_45,np.linspace(120,45,30),color='k',linestyle='dashed',linewidth=1)

plt.xlabel('time (s)')
plt.ylabel('sound pressure level (db)')
plt.savefig('new_e_lin_spl_vs_t.png', dpi=1200, bbox_inches='tight')
plt.show()







# spl vs t min t
plt.rcParams['figure.figsize'] = [5, 2.5]

tSplinen = make_interp_spline(ttn,spltn)
ittn = np.linspace(ttn.min(), ttn.max(), 500)
ispltn = tSplinen(ittn)

tSpline70 = make_interp_spline(tt120_70,splt120_70)
itt70 = np.linspace(tt120_70.min(), tt120_70.max(), 500)
isplt70 = tSpline70(itt70)

tSpline65 = make_interp_spline(tt120_65,splt120_65)
itt65 = np.linspace(tt120_65.min(), tt120_65.max(), 500)
isplt65 = tSpline65(itt65)

tSpline60 = make_interp_spline(tt120_60,splt120_60)
itt60 = np.linspace(tt120_60.min(), tt120_60.max(), 500)
isplt60 = tSpline60(itt60)

plt.scatter(ttn,spltn,color='k',marker='^')
plt.scatter(tt120_70,splt120_70,color='darkred',marker='D')
plt.scatter(tt120_65,splt120_65,color='red',marker='s')
plt.scatter(tt120_60,splt120_60,color='indianred',marker='o')
plt.legend(['min time nominal','min time 'r'SPL$\leq$120-70db', 'min time 'r'SPL$\leq$120-65db', 'min time 'r'SPL$\leq$120-60db'], frameon=False, fontsize=10)

plt.plot(ittn,ispltn,color='k',linestyle='solid',linewidth=2)
plt.plot(itt70,isplt70,color='darkred',linestyle='solid',linewidth=2)
plt.plot(itt65,isplt65,color='red',linestyle='solid',linewidth=2)
plt.plot(itt60,isplt60,color='indianred',linestyle='solid',linewidth=2)

plt.plot(tt120_70,np.linspace(120,70,30),color='k',linestyle='dashed',linewidth=1)
plt.plot(tt120_65,np.linspace(120,65,30),color='k',linestyle='dashed',linewidth=1)
plt.plot(tt120_60,np.linspace(120,60,30),color='k',linestyle='dashed',linewidth=1)

plt.xlabel('time (s)')
plt.ylabel('sound pressure level (db)')
plt.savefig('new_t_lin_spl_vs_t.png', dpi=1200, bbox_inches='tight')
plt.show()





