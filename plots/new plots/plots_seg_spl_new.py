import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import make_interp_spline
plt.rcParams["font.family"] = "Times New Roman"
plt.rcParams.update({'font.size': 12})
"""
print(np.array2string(sim['x'],separator=','))
print(np.array2string(sim['h'],separator=','))
print(np.array2string(sim['v'],separator=','))
print(np.array2string(sim['max_spl_gl'],separator=','))


print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""
num = 30


#region minenom
# min e nom
dten = 2.67211946
een = 13292179.14548814
ten = np.linspace(0,num*dten,num)
xen = np.array([   0.        ,  40.65701204, 112.17081845, 200.02583844, 296.73214727,
  400.33691799, 510.5331433 , 627.26871187, 750.81680282, 880.34086364,
 1012.87399015,1145.32527725,1276.28054124,1405.8413601 ,1534.76383172,
 1663.86013553,1793.56481446,1923.82930224,2054.26904982,2184.38994968,
 2313.93174397,2443.12328429,2572.72358064,2703.77642848,2836.90098202,
 2971.28051056,3104.01698785,3230.96096484,3349.9887158 ,3464.63791329])
hen = np.array([0.00000000e+00,1.06399831e-01,2.07337489e-01,1.46265664e-01,
 2.08870325e-01,2.42177317e-01,2.72598832e-01,2.74610633e-01,
 3.29438490e-01,4.27201101e+00,1.46574533e+01,2.99764583e+01,
 4.68225499e+01,6.27406575e+01,7.69014174e+01,8.95988567e+01,
 1.01836402e+02,1.14492128e+02,1.28025486e+02,1.42372059e+02,
 1.56832730e+02,1.70415360e+02,1.82309841e+02,1.92527388e+02,
 2.02718907e+02,2.16084895e+02,2.35583751e+02,2.60968583e+02,
 2.86036159e+02,2.99999990e+02])
ven = np.array([ 5.        ,22.6008652 ,30.41540877,34.82212713,37.50658898,40.01319966,
 42.45725491,44.93924145,47.48879462,49.33508327,49.98979424,49.71162582,
 49.10719429,48.6387519 ,48.49073989,48.63248586,48.87898542,49.05769053,
 49.06545639,48.89560486,48.67226964,48.59947286,48.87842245,49.55836158,
 50.34307394,50.590355  ,49.5962305 ,47.09887762,44.06340252,42.99997987])
splen = np.array([121.66351372,113.44532375,110.11840687,103.61953258,103.23388204,
 103.00530211,103.32899538,103.92878906,104.92170598,103.93045572,
  97.40896202, 90.31150239, 85.31704283, 81.89681266, 79.5495364 ,
  77.87003624, 76.51938499, 75.27776851, 74.01722182, 72.7301695 ,
  71.49663508, 70.47244681, 69.82313777, 69.60506538, 69.53378182,
  69.13339111, 67.68277267, 65.00031419, 61.83893784, 59.97557756])
#endregion


#region mine85seg
# min e 85db
dte85 = 2.70448724
ee85 = 13304313.95430566
te85 = np.linspace(0,num*dte85,num)
xe85 = np.array([   0.        ,  41.205322  , 113.74035283, 202.80127969, 301.3037883 ,
  407.53757236, 521.18313754, 642.34427192, 770.10626822, 900.29045934,
 1028.47997986,1154.87973433,1283.08186209,1413.77319945,1545.86488768,
 1678.13981777,1810.05140434,1941.57229794,2072.78440307,2203.68156001,
 2334.24948809,2464.71049859,2595.71695953,2728.20017313,2862.72450348,
 2998.4924445 ,3132.58075584,3260.78593167,3380.99380691,3496.92856195])
he85 = np.array([0.00000000e+00,1.08465715e-01,1.92667315e-01,1.48416923e-01,
 2.09472183e-01,2.24301376e-01,2.56150950e-01,2.78853503e-01,
 4.14254113e+00,1.68421963e+01,3.39147022e+01,4.58339388e+01,
 5.42883099e+01,6.33898633e+01,7.50131077e+01,8.86105727e+01,
 1.02838116e+02,1.16958334e+02,1.30927794e+02,1.44884562e+02,
 1.58682900e+02,1.71736114e+02,1.83352645e+02,1.93522177e+02,
 2.03727510e+02,2.17037603e+02,2.36496173e+02,2.61803034e+02,
 2.86636836e+02,2.99999605e+02])
ve85 = np.array([ 5.        ,22.6655931 ,30.45100811,34.93234764,37.86954614,40.65927525,
 43.39650516,46.16223455,48.13589459,48.35019146,47.19321956,47.03318369,
 48.00001903,48.82053409,49.16485479,49.13293062,48.98006073,48.84617317,
 48.73516126,48.61059254,48.49216293,48.50295424,48.81777763,49.4881993 ,
 50.25161799,50.49001236,49.47803472,46.96244566,43.94244453,43.00002425])
sple85 = np.array([121.59294852,113.36822725,109.81310098,104.21085594,104.09420493,
 103.95617396,104.40313444,105.10983795,104.02381398, 95.8803352 ,
  84.99998534, 84.99568106, 83.08342972, 81.61446686, 79.83915062,
  77.98671401, 76.28948212, 74.82095711, 73.51404662, 72.30063767,
  71.16039592, 70.20011969, 69.58722073, 69.37477764, 69.30359825,
  68.90688479, 67.44333995, 64.75731358, 61.61100034, 59.84953603])
#endregion


#region mine80seg
# min e 80db
dte80 = 2.72971162
ee80 = 13321246.76399264
te80 = np.linspace(0,num*dte80,num)
xe80 = np.array([   0.        ,  41.65437228, 114.98903707, 205.01272502, 304.90459459,
  413.09720437, 529.29680429, 653.58851752, 784.49827213, 916.26947578,
 1043.12087199,1165.54906159,1289.45988278,1418.11055913,1550.83440136,
 1685.27569529,1819.42839274,1952.56183524,2084.82657862,2216.56824323,
 2348.02037069,2479.44906708,2611.44788502,2744.91090771,2880.42383699,
 3017.22101298,3152.36240527,3281.57552013,3402.71362354,3519.64602573])
he80 = np.array([0.00000000e+00,1.08864587e-01,1.70895891e-01,1.50467385e-01,
 2.16165340e-01,2.38811666e-01,2.61674907e-01,5.65416726e-01,
 6.32219456e+00,2.33946141e+01,4.57919382e+01,5.99381878e+01,
 6.51635846e+01,6.86356160e+01,7.56200943e+01,8.73964727e+01,
 1.02177224e+02,1.17600424e+02,1.32404626e+02,1.46472852e+02,
 1.60010304e+02,1.72819649e+02,1.84338223e+02,1.94466717e+02,
 2.04583324e+02,2.17753830e+02,2.37095186e+02,2.62347768e+02,
 2.87063352e+02,2.99999955e+02])
ve80 = np.array([ 5.        ,22.72022573,30.48339153,35.02163723,38.13045486,41.10796273,
 44.04304351,46.9578383 ,48.75405009,48.29500731,45.93919389,44.87512241,
 46.21124168,48.03042941,49.21827219,49.54148938,49.29361233,48.90878292,
 48.6257089 ,48.46143948,48.37257349,48.41065139,48.72563746,49.3864575 ,
 50.15088764,50.39925925,49.39282623,46.87047397,43.8545958 ,43.00001263])
sple80 = np.array([121.53940499,113.28431603,109.62795818,104.59992681,104.6227689 ,
 104.55255201,105.07266055,105.86276364,103.29404876, 93.18459526,
  80.00000228, 79.99998395, 79.99999881, 80.00000612, 79.60851015,
  78.16827816, 76.36945013, 74.69508855, 73.25463915, 72.00781519,
  70.89792165, 69.97512932, 69.37634367, 69.17292489, 69.11175504,
  68.72644179, 67.28695281, 64.60883645, 61.43645436, 59.77608453])
#endregion


#region mine75seg
# min e 75db
dte75 = 2.78437946
ee75 = 13363128.16769983
te75 = np.linspace(0,num*dte75,num)
xe75 = np.array([   0.        ,  42.60068145, 117.64738837, 209.67423409, 312.40516609,
  424.5198335 , 545.76045427, 676.51920809, 814.49040255, 951.54798761,
 1080.08115285,1200.43993144,1320.15617097,1444.25841116,1573.17433078,
 1705.3397715 ,1839.54654642,1975.04399985,2110.88838814,2246.12801617,
 2380.43536209,2514.15400346,2648.16873376,2783.62205595,2921.25880551,
 3060.38550501,3198.0022244 ,3329.6277179 ,3452.95231293,3572.09678362])
he75 = np.array([0.00000000e+00,1.13613720e-01,1.55533213e-01,1.56909783e-01,
 2.18335123e-01,2.49956874e-01,2.38402545e-01,2.81501215e-01,
 8.76905211e+00,3.18727913e+01,6.17616321e+01,8.08923707e+01,
 8.71372959e+01,8.86721966e+01,9.18909822e+01,9.81944284e+01,
 1.07002637e+02,1.18128380e+02,1.31519142e+02,1.46226586e+02,
 1.60939422e+02,1.74527877e+02,1.86269819e+02,1.96250263e+02,
 2.06021959e+02,2.18782953e+02,2.37825918e+02,2.63008262e+02,
 2.87660394e+02,2.99998902e+02])
ve75 = np.array([ 5.        ,22.8282867 ,30.53531068,35.16903661,38.59095767,41.90546569,
 45.22198609,48.60109228,50.30132907,49.16715034,45.35498741,42.84145392,
 43.63123942,45.5163133 ,47.01340826,47.96376887,48.6103906 ,48.99408471,
 48.99186009,48.69831274,48.3652849 ,48.2280628 ,48.47360881,49.13949978,
 49.95077416,50.26009563,49.29292258,46.7611686 ,43.72923128,43.00015551])
sple75 = np.array([121.42875208,113.13386583,109.17143635,105.27025474,105.44851611,
 105.55085767,106.26214503,107.38927254,102.96552862, 91.27314152,
  74.99996681, 74.9999925 , 74.99997877, 74.99994858, 74.99991249,
  74.99994013, 75.00004787, 74.47883193, 73.20733271, 71.88295824,
  70.62724786, 69.60725943, 68.97365841, 68.7914367 , 68.7735922 ,
  68.43244684, 67.02528044, 64.34498477, 61.13984256, 59.62922006])
#endregion


#region mine70
# min e 70
dte70 = 2.88262207
ee70 = 13467991.18825232
te70 = np.linspace(0,num*dte70,num)
xe70 = np.array([   0.        ,  44.22623652, 122.36477691, 217.93993176, 325.49766356,
  443.89119987, 572.96822808, 713.55901246, 861.98646305,1006.80528014,
 1139.11148057,1260.04300684,1378.44799947,1501.01425184,1628.63192388,
 1759.15383017,1891.03537658,2024.0412097 ,2158.58771925,2294.84990438,
 2432.62912269,2571.53955683,2711.23565265,2851.8618486 ,2994.10612932,
 3137.74987482,3280.10921176,3416.46777732,3544.06342888,3667.29805145])
he70 = np.array([0.00000000e+00,1.24278053e-01,1.37009530e-01,1.59877308e-01,
 2.10180222e-01,2.78246075e-01,2.14652361e-01,3.58377411e-01,
 1.36804696e+01,4.54404341e+01,8.41331594e+01,1.07216397e+02,
 1.13979152e+02,1.13573422e+02,1.15085987e+02,1.19987523e+02,
 1.27056917e+02,1.34525474e+02,1.42052513e+02,1.50284222e+02,
 1.59799677e+02,1.70865676e+02,1.82966593e+02,1.94535626e+02,
 2.05457074e+02,2.18435741e+02,2.37342967e+02,2.62753810e+02,
 2.87908557e+02,3.00000445e+02])
ve70 = np.array([ 5.        ,23.00508881,30.62869355,35.3762182 ,39.20372427,42.91017689,
 46.7176744 ,50.68920332,52.19128578,50.28350746,44.98832437,41.23352432,
 41.54648213,43.50262788,44.91498984,45.62436173,45.99919738,46.45497692,
 47.0517393 ,47.65030363,48.15001868,48.51457825,48.76832339,49.17616486,
 49.81214081,50.13624501,49.26226097,46.74804905,43.64593134,42.99996905])
sple70 = np.array([121.19792617,112.9251694 ,108.31926864,106.12587366,106.16424666,
 106.57102954,107.62074779,109.37023937,101.3770738 , 89.37496524,
  69.99999578, 69.99999664, 70.00000722, 70.00002871, 70.00000079,
  69.99999305, 69.99998085, 69.99999164, 70.00000414, 69.99999521,
  69.99998855, 69.89553578, 69.16169046, 68.75736396, 68.63209993,
  68.31298353, 66.97062286, 64.27278605, 60.93210847, 59.4671847 ])
#endregion


#region mine65
# min e 65
dte65 = 3.25121824
ee65 = 13659930.52510142
te65 = np.linspace(0,num*dte65,num)
xe65 = np.array([   0.        ,  51.89841818, 145.31760566, 260.13714432, 388.66330584,
  530.53033982, 686.58155336, 854.87121511,1026.70082443,1190.07736141,
 1336.3755201 ,1468.51230467,1599.07919869,1735.23920759,1876.06718641,
 2019.09875708,2162.85019387,2307.43060383,2453.25503217,2600.4220206 ,
 2748.73721412,2898.10247446,3048.49059353,3199.98731299,3353.39292439,
 3509.51461883,3666.94628718,3820.75191428,3965.24507239,4103.92355048])
he65 = np.array([0.00000000e+00,1.06858995e-01,1.72454216e-01,1.42147098e-01,
 4.70908559e-01,2.28079974e-01,2.87265506e-01,8.49954894e+00,
 3.43803028e+01,7.58631076e+01,1.21631710e+02,1.44618654e+02,
 1.47280745e+02,1.45866858e+02,1.47893300e+02,1.52738613e+02,
 1.59315349e+02,1.65487782e+02,1.71850978e+02,1.78599932e+02,
 1.86249464e+02,1.94415110e+02,2.03263880e+02,2.12308539e+02,
 2.20366699e+02,2.28353641e+02,2.40853683e+02,2.62261597e+02,
 2.88052998e+02,2.99999137e+02])
ve65 = np.array([ 5.        ,24.3308925 ,32.57445755,37.57441967,41.52575721,45.78348779,
 50.12394238,53.20947524,53.16184721,50.20393686,43.75230011,39.84173021,
 40.89679867,42.75658711,43.76814047,44.19524954,44.34424902,44.69636672,
 45.09907968,45.5137558 ,45.8409138 ,46.17752304,46.49420946,46.90717438,
 47.64234317,48.46628469,48.47249613,46.77251373,43.54657346,43.00001644])
sple65 = np.array([121.01010273,112.8936195 ,108.80513154,105.08526668,106.10347379,
 107.26151004,108.62018196,105.84776714, 92.63884383, 84.47968185,
  65.00001085, 64.99980109, 65.00006803, 65.0001452 , 65.00007089,
  65.00002941, 65.00004928, 65.00008655, 65.00017303, 65.00007902,
  65.00000821, 65.00014379, 65.00008517, 65.00012256, 65.0000362 ,
  65.00008679, 65.00003988, 64.33000572, 59.01624458, 59.95725887])
#endregion










#region mintnom
# min t nom
dttn = 0.9270615
etn = 16348893.14520152
ttn = np.linspace(0,num*dttn,num)
xtn = np.array([   0.        ,   8.25551682,  23.53072112,  44.51629938,  69.63212422,
   97.64866276, 127.68354605, 159.14075592, 192.1333374 , 227.19184136,
  264.6879085 , 304.81227989, 347.60253217, 392.91372284, 440.44218384,
  489.79171824, 540.48439098, 591.9562347 , 643.60916639, 694.87795119,
  745.22916422, 794.20537274, 841.43675611, 886.71491298, 929.94186223,
  971.00431992,1010.05309921,1047.30265656,1083.04725885,1117.53771003])
htn = np.array([ 0.00000000e+00, 6.31497213e-02,-2.48464296e-02,-7.53045277e-02,
  1.28295978e+00, 4.15754980e+00, 8.62443087e+00, 1.46354416e+01,
  2.02493591e+01, 2.40183198e+01, 2.59393114e+01, 2.68913403e+01,
  2.77142843e+01, 2.92917187e+01, 3.22190782e+01, 3.67999960e+01,
  4.34241321e+01, 5.26652456e+01, 6.45834437e+01, 7.91714178e+01,
  9.63160931e+01, 1.15739029e+02, 1.37037815e+02, 1.59756630e+02,
  1.83409651e+02, 2.07669927e+02, 2.31923633e+02, 2.55670893e+02,
  2.78460928e+02, 3.00015371e+02])
vtn = np.array([ 5.        ,12.81755001,19.90963245,25.08389909,28.9460382 ,31.6803055 ,
 33.73844128,35.3013924 ,36.98110581,39.1926921 ,41.86690118,44.73419471,
 47.5739677 ,50.19239613,52.48131633,54.37369126,55.86238361,56.88044911,
 57.41957628,57.51419024,57.1797669 ,56.42415801,55.31460832,53.93811869,
 52.33506796,50.53452648,48.62387363,46.68094308,44.78213291,43.00011465])
spltn = np.array([119.02899923,118.97299265,118.80830178,117.27373904,116.05749309,
 114.42658082,111.22480171,107.07854671,104.51824726,103.06942414,
 102.42175391,102.29596736,102.17310417,101.81660425,100.94886091,
  99.44175571, 97.97745051, 95.74821128, 93.52007544, 91.28679806,
  89.19495024, 86.69077724, 84.79721519, 82.8428133 , 81.0594126 ,
  79.43389936, 77.9656808 , 76.70374336, 75.52778977, 74.73702941])
#endregion


#region mint85seg
# min t 85db
dtt85 = 0.99477231
et85 = 19156218.07227789
tt85 = np.linspace(0,num*dtt85,num)
xt85 = np.array([   0.        ,   9.06075396,  25.89490778,  49.86861305,  79.79781818,
  112.01979484, 141.79673612, 168.51555219, 193.36975631, 216.42799138,
  238.85990694, 261.90410989, 286.83584697, 314.27122626, 344.64872877,
  378.20109233, 414.93143574, 454.66134193, 497.24045933, 542.56469437,
  590.55331447, 641.00645525, 693.11805528, 745.43134464, 796.32507478,
  844.38559762, 888.90267253, 929.77924698, 967.42684335,1002.42828445])
ht85 = np.array([0.00000000e+00,3.12663862e-01,1.17365141e+00,6.24120805e-02,
 2.71046251e+00,1.33836590e+01,3.13839665e+01,5.08753121e+01,
 6.91376092e+01,8.60075083e+01,1.00076662e+02,1.10219419e+02,
 1.15931900e+02,1.18736428e+02,1.19940276e+02,1.20532013e+02,
 1.21335546e+02,1.22856510e+02,1.24792237e+02,1.27015501e+02,
 1.29396403e+02,1.32834208e+02,1.39790104e+02,1.51895007e+02,
 1.69475712e+02,1.91939607e+02,2.17763873e+02,2.45331573e+02,
 2.73120562e+02,2.99974651e+02])
vt85 = np.array([ 5.        ,13.09259268,20.7083955 ,27.48284699,32.69069356,35.19211831,
 34.34313492,32.12657067,29.87400472,27.60205602,25.78133985,25.21460054,
 26.53777309,29.05641586,32.1222925 ,35.34835217,38.48525971,41.42533235,
 44.25024256,46.96990939,49.61330654,51.98150464,53.59734526,54.24185518,
 53.90447783,52.66507388,50.73693155,48.34575495,45.7071579 ,43.00471505])
splt85 = np.array([119.16604796,119.3753337 ,119.12186858,119.81740616,118.7453584 ,
 109.78424898, 99.89125758, 93.9552239 , 89.78310658, 87.224811  ,
  84.95319958, 85.00226868, 84.76922301, 84.58974238, 84.72028374,
  84.86600677, 85.00041976, 84.99990159, 84.94104185, 84.89828508,
  84.9671089 , 84.99751746, 84.45971375, 83.66569634, 82.27813686,
  80.5106181 , 78.68793212, 77.00541643, 75.44493949, 74.26898564])
#endregion


#region mint80seg
# min t 80db
dtt80 = 1.13831379
et80 = 21793569.94241211
tt80 = np.linspace(0,num*dtt80,num)
xt80 = np.array([   0.        ,  11.22799674,  32.13999562,  61.55265835,  97.92389423,
  137.69453501, 173.24190847, 207.27901687, 242.13706735, 275.4188454 ,
  306.11174676, 333.83893073, 359.62094476, 384.53009389, 409.603638  ,
  435.85056951, 464.02629868, 494.60987387, 528.67309861, 567.22529921,
  610.31921483, 657.07850551, 706.311262  , 756.26762351, 805.44968519,
  853.14711962, 899.52894753, 945.22355411, 990.96248076,1037.24123508])
ht80 = np.array([0.00000000e+00,2.54101689e-01,1.75699920e+00,7.37144070e-02,
 7.72128447e-01,1.23074088e+01,3.58089760e+01,5.66362040e+01,
 7.29001421e+01,9.01662560e+01,1.08218945e+02,1.25029293e+02,
 1.39744617e+02,1.52481074e+02,1.63209177e+02,1.71536928e+02,
 1.76935902e+02,1.79001157e+02,1.78090943e+02,1.75780317e+02,
 1.74443901e+02,1.76202230e+02,1.81583402e+02,1.92194655e+02,
 2.07902359e+02,2.26947183e+02,2.47085004e+02,2.66554387e+02,
 2.84232636e+02,2.99851782e+02])
vt80 = np.array([ 5.        ,14.35304073,22.29869062,29.32410149,34.58958266,37.85096207,
 36.36894105,34.19542195,33.46158929,32.31087736,29.96504675,27.13676801,
 25.17178252,24.13829102,23.93957204,24.5921216 ,25.92079585,28.21009641,
 31.85543107,35.98552478,39.64246912,42.46229912,44.38358056,45.26240625,
 45.35322233,44.81671704,44.01362672,43.29969618,42.92165386,43.01197444])
splt80 = np.array([119.16433432,119.38129405,118.98286065,120.05592061,119.29749172,
 111.64045383, 98.65203258, 93.44212239, 89.7829528 , 87.07846643,
  80.01144499, 80.01299196, 79.97908902, 80.01366341, 79.94685128,
  79.07558419, 78.87935412, 79.64986286, 79.80126766, 80.00653713,
  80.00177615, 80.0003637 , 79.41164498, 79.99985962, 79.3392129 ,
  78.17455455, 77.09334083, 76.19802466, 75.37730915, 75.06170994])
#endregion


#region mint75seg
# min t 75db
dtt75 = 1.27790049
et75 = 24788443.79648934
tt75 = np.linspace(0,num*dtt75,num)
xt75 = np.array([   0.        ,  11.92820532,  35.90419779,  70.29324844, 112.43718452,
  153.07753121, 182.99526294, 215.73193168, 251.63515145, 285.16844803,
  312.66875574, 334.11909896, 352.45388361, 370.04679155, 388.9752974 ,
  411.22377186, 437.87132894, 468.57912202, 502.80954801, 540.67494466,
  582.47087147, 628.03199785, 676.16438659, 725.88343032, 776.09539401,
  825.30323782, 872.94199921, 921.09553583, 971.93790411,1026.13565773])
ht75 = np.array([0.00000000e+00,4.74623687e-01,1.59552576e+00,5.11946744e-02,
 7.23514971e+00,3.04269604e+01,6.35742666e+01,8.48550898e+01,
 9.84354045e+01,1.18595882e+02,1.42399884e+02,1.63722443e+02,
 1.79532836e+02,1.90311054e+02,1.97983286e+02,2.03554127e+02,
 2.08345609e+02,2.12803474e+02,2.16481439e+02,2.18615649e+02,
 2.19485438e+02,2.20458553e+02,2.22978762e+02,2.28342600e+02,
 2.38016202e+02,2.52330462e+02,2.69355184e+02,2.83979525e+02,
 2.93397468e+02,2.99868429e+02])
vt75 = np.array([ 5.        ,14.03572955,23.2774724 ,30.58793187,35.94624234,36.99523559,
 32.50206102,29.92572745,30.58412732,30.17567355,26.29781456,21.10632211,
 17.15342965,15.65250205,16.65893877,19.50301895,22.82115263,25.65196661,
 28.2543085 ,31.16478844,34.26690856,36.85299335,38.50390133,39.70386987,
 40.21096417,39.9045203 ,39.3377189 ,39.68444611,41.47986869,43.97838519])
splt75 = np.array([118.28325653,119.28156002,119.07894028,119.38784312,114.36994187,
 102.89402734, 91.17238354, 88.22873121, 88.94935762, 83.07069633,
  74.94614676, 75.00480455, 74.72303001, 74.73143474, 74.929625  ,
  75.00347412, 75.00185735, 75.0011864 , 75.00098114, 74.95768082,
  74.99903494, 74.96813607, 74.97321083, 74.86828414, 74.99986545,
  74.81633761, 74.98208442, 74.99873058, 75.00026054, 74.70285706])
#endregion


#region mint70seg
# min t 70db
dtt70 = 1.75251336
et70 = 33328082.50378816
tt70 = np.linspace(0,num*dtt70,num)
xt70 = np.array([   0.        ,  18.01917916,  50.17291014,  92.41875774, 142.9441907 ,
  194.99623144, 229.90569817, 263.58803262, 307.54629622, 365.8641603 ,
  423.46050524, 466.19662416, 496.15698056, 517.16295796, 532.63855905,
  546.74114782, 567.02847902, 598.93193407, 643.14099418, 701.78883882,
  774.28557249, 852.75981088, 924.9312089 , 982.99737129,1027.42143961,
 1063.52677616,1097.25982391,1133.70895569,1178.37615392,1236.91597589])
ht70 = np.array([  0.        ,  1.82482012, 11.14105294, 21.80102774, 28.47837877,
  53.46240534, 95.75378527,122.46017378,121.37871173,124.99827349,
 153.43148909,187.99914766,218.59447976,242.32892831,258.59625129,
 268.1269874 ,271.13940939,264.84642618,248.1815973 ,227.0261997 ,
 213.00320346,217.53579008,241.76786337,276.95178398,311.537777  ,
 337.42510122,349.60529906,345.70335918,326.90288631,300.00586382])
vt70 = np.array([ 5.        ,16.12473494,23.46335156,28.50711241,33.08659061,35.62037016,
 29.52490984,24.78795891,30.69581326,38.80216582,36.63501943,29.27722186,
 22.19342952,15.98847621,11.29978885,10.16613874,15.55037371,23.67906777,
 33.01601888,41.41755411,46.57859565,47.20046382,43.7362952 ,37.43069005,
 30.08196089,23.56152917,20.64629886,24.76126638,33.77183707,43.35343469])
splt70 = np.array([118.97652696,118.76005402,112.92723583,107.17236514,103.91919281,
  96.34329899, 85.28160031, 83.74801915, 84.77559772, 85.46025343,
  69.99839385, 70.00021379, 70.00156525, 70.0048042 , 70.00080642,
  69.99889762, 69.99840629, 69.95266129, 69.74082651, 70.01369703,
  69.72801038, 70.02449613, 69.69079522, 68.24065516, 66.86196998,
  65.60561768, 66.2836059 , 67.01672564, 67.1859237 , 67.05627722])
#endregion




# h vs x min e
plt.rcParams['figure.figsize'] = [11, 2.5]

eSplinen = make_interp_spline(xen,hen)
ixen = np.linspace(xen.min(), xen.max(), 500)
ihen = eSplinen(ixen)

eSpline85 = make_interp_spline(xe85,he85)
ixe85 = np.linspace(xe85.min(), xe85.max(), 500)
ihe85 = eSpline85(ixe85)

eSpline80 = make_interp_spline(xe80,he80)
ixe80 = np.linspace(xe80.min(), xe80.max(), 500)
ihe80 = eSpline80(ixe80)

eSpline75 = make_interp_spline(xe75,he75)
ixe75 = np.linspace(xe75.min(), xe75.max(), 500)
ihe75 = eSpline75(ixe75)

target_altitude = np.ones(num)*300
plt.plot(xe75,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(xen,hen,color='k',marker='^')
plt.scatter(xe85,he85,color='darkblue',marker='D')
plt.scatter(xe80,he80,color='blue',marker='s')
plt.scatter(xe75,he75,color='royalblue',marker='o')
plt.legend(['target altitude','minimum energy nominal','minimum energy 'r'SPL$\leq$85db', 'minimum energy 'r'SPL$\leq$80db', 'minimum energy 'r'SPL$\leq$75db'], frameon=False)

plt.plot(ixen,ihen,color='k',linestyle='solid',linewidth=2)
plt.plot(ixe85,ihe85,color='navy',linestyle='solid',linewidth=2)
plt.plot(ixe80,ihe80,color='blue',linestyle='solid',linewidth=2)
plt.plot(ixe75,ihe75,color='royalblue',linestyle='solid',linewidth=2)
plt.xlabel('horizontal displacement (m)')
plt.ylabel('altitude (m)')
# plt.legend(['nominal','85db', '80db', '75db'], frameon=False)
plt.savefig('new_e_spl_h_vs_x.png', dpi=1200, bbox_inches='tight')
plt.show()



# h vs x min t
plt.rcParams['figure.figsize'] = [11, 2.5]

tSplinen = make_interp_spline(xtn,htn)
ixtn = np.linspace(xtn.min(), xtn.max(), 500)
ihtn = tSplinen(ixtn)

tSpline85 = make_interp_spline(xt85,ht85)
ixt85 = np.linspace(xt85.min(), xt85.max(), 500)
iht85 = tSpline85(ixt85)

tSpline80 = make_interp_spline(xt80,ht80)
ixt80 = np.linspace(xt80.min(), xt80.max(), 500)
iht80 = tSpline80(ixt80)

tSpline75 = make_interp_spline(xt75,ht75)
ixt75 = np.linspace(xt75.min(), xt75.max(), 500)
iht75 = tSpline75(ixt75)

target_altitude = np.ones(num)*300
plt.plot(xtn,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(xtn,htn,color='k',marker='o')
plt.scatter(xt85,ht85,color='darkred',marker='d')
plt.scatter(xt80,ht80,color='red',marker='P')
plt.scatter(xt75,ht75,color='indianred',marker='v')
plt.legend(['target altitude','minimum time nominal','minimum time 'r'SPL$\leq$85db', 'minimum time 'r'SPL$\leq$80db', 'minimum time 'r'SPL$\leq$75db'], frameon=False, fontsize=11)

plt.plot(ixtn,ihtn,color='k',linestyle='solid',linewidth=2)
plt.plot(ixt85,iht85,color='darkred',linestyle='solid',linewidth=2)
plt.plot(ixt80,iht80,color='red',linestyle='solid',linewidth=2)
plt.plot(ixt75,iht75,color='indianred',linestyle='solid',linewidth=2)
plt.xlabel('horizontal displacement (m)')
plt.ylabel('altitude (m)')
#plt.legend(['nominal','85db', '80db', '75db'], frameon=False)
plt.savefig('new_t_spl_h_vs_x.png', dpi=1200, bbox_inches='tight')
plt.show()







# spl vs t min e
plt.rcParams['figure.figsize'] = [5, 2.5]

eSplinen = make_interp_spline(ten,splen)
iten = np.linspace(ten.min(), ten.max(), 500)
isplen = eSplinen(iten)

eSpline85 = make_interp_spline(te85,sple85)
ite85 = np.linspace(te85.min(), te85.max(), 500)
isple85 = eSpline85(ite85)

eSpline80 = make_interp_spline(te80,sple80)
ite80 = np.linspace(te80.min(), te80.max(), 500)
isple80 = eSpline80(ite80)

eSpline75 = make_interp_spline(te75,sple75)
ite75 = np.linspace(te75.min(), te75.max(), 500)
isple75 = eSpline75(ite75)

#target_altitude = np.ones(num)*300
#plt.plot(xe75,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(ten,splen,color='k',marker='o')
plt.scatter(te85,sple85,color='darkblue',marker='d')
plt.scatter(te80,sple80,color='blue',marker='P')
plt.scatter(te75,sple75,color='royalblue',marker='v')
plt.legend(['minimum energy nominal','minimum energy 'r'SPL$\leq$85db', 'minimum energy 'r'SPL$\leq$80db', 'minimum energy 'r'SPL$\leq$75db'], frameon=False, fontsize=11)

plt.plot(iten,isplen,color='k',linestyle='solid',linewidth=2)
plt.plot(ite85,isple85,color='navy',linestyle='solid',linewidth=2)
plt.plot(ite80,isple80,color='blue',linestyle='solid',linewidth=2)
plt.plot(ite75,isple75,color='royalblue',linestyle='solid',linewidth=2)
plt.xlabel('time (s)')
plt.ylabel('sound pressure level (db)')
plt.savefig('new_e_spl_vs_t.png', dpi=1200, bbox_inches='tight')
plt.show()







# spl vs t min t
plt.rcParams['figure.figsize'] = [5, 2.5]

tSplinen = make_interp_spline(ttn,spltn)
ittn = np.linspace(ttn.min(), ttn.max(), 500)
ispltn = tSplinen(ittn)

tSpline85 = make_interp_spline(tt85,splt85)
itt85 = np.linspace(tt85.min(), tt85.max(), 500)
isplt85 = tSpline85(itt85)

tSpline80 = make_interp_spline(tt80,splt80)
itt80 = np.linspace(tt80.min(), tt80.max(), 500)
isplt80 = tSpline80(itt80)

tSpline75 = make_interp_spline(tt75,splt75)
itt75 = np.linspace(tt75.min(), tt75.max(), 500)
isplt75 = tSpline75(itt75)

#target_altitude = np.ones(num)*300
#plt.plot(xe75,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(ttn,spltn,color='k',marker='^')
plt.scatter(tt85,splt85,color='darkred',marker='D')
plt.scatter(tt80,splt80,color='red',marker='s')
plt.scatter(tt75,splt75,color='indianred',marker='o')
plt.legend(['minimum time nominal','minimum time 'r'SPL$\leq$85db', 'minimum time 'r'SPL$\leq$80db', 'minimum time 'r'SPL$\leq$75db'], frameon=False, fontsize=11)

plt.plot(ittn,ispltn,color='k',linestyle='solid',linewidth=2)
plt.plot(itt85,isplt85,color='darkred',linestyle='solid',linewidth=2)
plt.plot(itt80,isplt80,color='red',linestyle='solid',linewidth=2)
plt.plot(itt75,isplt75,color='indianred',linestyle='solid',linewidth=2)
plt.xlabel('time (s)')
plt.ylabel('sound pressure level (db)')
plt.savefig('new_t_spl_vs_t.png', dpi=1200, bbox_inches='tight')
plt.show()






