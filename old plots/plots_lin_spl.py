import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import make_interp_spline
plt.rcParams["font.family"] = "Times New Roman"
plt.rcParams.update({'font.size': 12})
"""
print(np.array2string(sim['x'],separator=','))
print(np.array2string(sim['h'],separator=','))
print(np.array2string(sim['v'],separator=','))
print(np.array2string(sim['max_spl_gl'],separator=','))


print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""
num = 30



#region mintnom
# min t nom
dttn = 0.92450286
etn = 15531639.33530839
ttn = np.linspace(0,num*dttn,num)
xtn = np.array([   0.        ,   8.23580089,  23.47055501,  44.38638487,  69.41619298,
   97.33860186, 127.28247944, 158.68106758, 191.69817324, 226.83827616,
  264.45627401, 304.74844785, 347.74383413, 393.29077701, 441.07591669,
  490.71167994, 541.7521186 , 593.61797684, 645.72689873, 697.50472778,
  748.39695341, 797.92527484, 845.71259261, 891.48734304, 935.09661552,
  976.38363818,1015.47094205,1052.5591669 ,1087.94291404,1121.88244314])
htn = np.array([ 0.00000000e+00, 6.93358566e-02,-1.00170667e-02,-7.61759172e-02,
  1.24386934e+00, 4.05388889e+00, 8.42957121e+00, 1.42938561e+01,
  1.96346978e+01, 2.30501155e+01, 2.45960026e+01, 2.51881573e+01,
  2.56900169e+01, 2.69926950e+01, 2.96840894e+01, 3.40421000e+01,
  4.04287599e+01, 4.94181687e+01, 6.10707142e+01, 7.54044332e+01,
  9.23418505e+01, 1.11642892e+02, 1.32949402e+02, 1.55836065e+02,
  1.79825649e+02, 2.04584092e+02, 2.29472070e+02, 2.53956198e+02,
  2.77547270e+02, 2.99927287e+02])
vtn = np.array([ 5.        ,12.82271641,19.90517245,25.06536617,28.92348045,31.65561838,
 33.72290662,35.33661809,37.09935993,39.38247541,42.12812579,45.05626783,
 47.93888267,50.58650379,52.89599406,54.83767256,56.37489468,57.43081151,
 58.01715342,58.144849  ,57.8307285 ,57.11139355,56.03232099,54.64250607,
 52.99664967,51.12232661,49.10759415,47.03108015,44.97490081,43.00402133])
spltn = np.array([101.87667103,102.21056089,102.07265058,100.46292652, 99.37854002,
  98.03199616, 96.58880886, 95.18044238, 93.72922598, 92.67400365,
  92.1910186 , 91.94515566, 91.91063947, 91.84047928, 91.51048578,
  91.05705144, 90.43062603, 89.61644002, 88.7799018 , 88.01858393,
  87.30328939, 86.67676379, 86.13038854, 85.65373936, 85.2521069 ,
  84.89597058, 84.60245531, 84.34130633, 84.10942531, 83.86027327])
#endregion


#region mint110-75seg
# min t 110-75
dtt110_75 = 1.1317318
et110_75 = 15855718.97793571
tt110_75 = np.linspace(0,num*dtt110_75,num)
xt110_75 = np.array([   0.        ,  11.06611819,  32.31321451,  60.47837865,  93.24077853,
  130.66042136, 171.80252343, 215.01719339, 259.74192208, 306.4399825 ,
  355.37916467, 406.40256966, 459.11422771, 512.94361612, 567.33017464,
  621.90896949, 676.39074848, 730.43136394, 783.9102937 , 836.80429404,
  889.15421745, 941.06900765, 992.55334223,1043.30517037,1093.16388524,
 1142.09377469,1190.32841741,1238.19019475,1286.06361807,1334.31491334])
ht110_75 = np.array([ 0.00000000e+00, 3.29964599e-01, 9.48333736e-01, 5.95551560e-01,
 -7.43227071e-02, 2.51425407e-01, 3.89672412e+00, 1.21008608e+01,
  2.18671232e+01, 3.08274738e+01, 3.89897319e+01, 4.76525474e+01,
  5.77103374e+01, 6.98466068e+01, 8.40935928e+01, 9.99925825e+01,
  1.17246463e+02, 1.35839292e+02, 1.55264567e+02, 1.75112342e+02,
  1.95039930e+02, 2.14702446e+02, 2.33714817e+02, 2.51478420e+02,
  2.67300954e+02, 2.80720561e+02, 2.91024181e+02, 2.97764309e+02,
  3.00727061e+02, 3.00130565e+02])
vt110_75 = np.array([ 5.        ,14.53883363,22.60808367,26.77731376,31.09066003,34.94304385,
 37.88931551,39.71593299,41.19389247,42.88984343,44.80312211,46.62050501,
 48.15830107,49.28948509,50.00884567,50.40789151,50.5437198 ,50.41533036,
 50.11398155,49.71311911,49.27584951,48.82348641,48.07610447,46.89971985,
 45.5289337 ,44.16642167,43.07544338,42.45380375,42.4269765 ,42.96962175])
splt110_75 = np.array([101.93104627,102.4645361 ,102.0326223 , 98.80404066, 98.17497338,
  97.87529027, 97.2875693 , 95.52892145, 93.54374515, 92.05476256,
  91.29984778, 90.55504804, 90.0341171 , 89.51312174, 88.8227347 ,
  88.14864931, 87.47335386, 86.79670888, 86.19633284, 85.66535014,
  85.18406408, 84.65700219, 83.45015107, 82.24324079, 81.0362935 ,
  79.8291261 , 78.62185039, 77.41433932, 76.20685185, 75.00047203])
#endregion



#region mint110-70seg
# min t 110-70
dtt110_70 = 1.38986592
et110_70 = 17440836.23692034
tt110_70 = np.linspace(0,num*dtt110_70,num)
xt110_70 = np.array([   0.        ,  14.95518001,  44.70825023,  83.80660437, 128.91522348,
  179.57651662, 232.430068  , 282.97238972, 330.81403217, 377.88249352,
  425.61553549, 475.01884281, 527.14074608, 582.85515617, 642.87046359,
  707.65736586, 777.28087518, 851.17449687, 928.2145424 ,1006.6828688 ,
 1083.94986491,1157.67649351,1226.59016626,1290.52697962,1350.19202173,
 1406.65695172,1461.35393356,1515.69064637,1571.0070729 ,1628.61830242])
ht110_70 = np.array([ 0.00000000e+00, 5.70087042e-01, 1.47417652e+00, 5.64078990e-02,
 -7.99671683e-02, 4.06936759e+00, 1.68372193e+01, 3.84853177e+01,
  6.25108177e+01, 8.42658193e+01, 1.02437049e+02, 1.17294156e+02,
  1.28882584e+02, 1.37661867e+02, 1.44128636e+02, 1.48895401e+02,
  1.53404665e+02, 1.60005538e+02, 1.70304002e+02, 1.85454770e+02,
  2.05567478e+02, 2.29378319e+02, 2.54620470e+02, 2.78643837e+02,
  2.98936337e+02, 3.13737535e+02, 3.21440628e+02, 3.21359433e+02,
  3.13679357e+02, 2.99690455e+02])
vt110_70 = np.array([ 5.        ,16.42171037,25.91741034,29.9773577 ,34.73875169,38.21735557,
 39.74758975,39.17421835,37.85555324,36.88528415,36.78634972,37.61830373,
 39.37368361,41.91188576,45.03151253,48.47614979,51.87563701,54.77833855,
 56.94508809,57.77799115,56.85039944,54.4438648 ,51.04920568,47.21667295,
 43.55670982,40.65678431,39.15782604,39.38908689,41.2486834 ,44.24102988])
splt110_70 = np.array([101.89517855,102.469953  ,102.40749422, 98.44862245, 97.72735236,
  97.4774891 , 95.29706312, 92.68574677, 90.90059261, 89.73276649,
  88.94449016, 88.11888585, 87.61170658, 87.19535769, 86.67335778,
  86.25334134, 85.92081827, 85.59763595, 85.09572514, 83.7965511 ,
  82.41576939, 81.03496462, 79.65419272, 78.27352879, 76.89302517,
  75.51275854, 74.13255105, 72.73843177, 71.26904446, 69.89449275])
#endregion


#region mint110-65seg
# min t 110-65
dtt110_65 = 1.68188698
et110_65 = 18878755.40118048
tt110_65 = np.linspace(0,num*dtt110_65,num)
xt110_65 = np.array([   0.        ,  18.35001039,  52.0318787 ,  93.13106506, 137.96551041,
  191.80832108, 255.53852898, 326.33477413, 401.6966536 , 480.35742549,
  560.23745009, 637.42473555, 708.56904198, 772.53169827, 830.84261205,
  886.84488786, 944.28197442,1006.36911971,1075.48005617,1151.91403284,
 1235.0310158 ,1323.90044418,1417.08171894,1512.52738477,1607.89024888,
 1700.81401654,1789.68392512,1873.98056535,1954.15592475,2031.14956222])
ht110_65 = np.array(
[  0.        ,  1.85049651, 10.19858723, 18.56623062, 20.67643439,
  18.23460752, 18.95858534, 26.60579453, 39.32422612, 55.77105006,
  77.81422894,108.33427453,145.62357213,185.8282297 ,224.04763109,
 255.97022284,279.01503861,292.15707412,295.26574815,290.12073819,
 280.09560446,269.04764112,260.37346819,256.37119592,257.91674563,
 265.10933063,275.47722618,286.29832012,294.93264266,299.85169436])
vt110_65 = np.array([ 5.        ,16.45830274,24.15070951,25.04724696,28.99662766,35.13657376,
 40.4046636 ,44.06207936,46.7218345 ,48.71302866,49.62674242,48.83291984,
 46.51878511,43.22717148,39.73802153,37.231704  ,36.85447574,39.15697648,
 43.31590546,47.76048713,51.6713842 ,54.64564209,56.44183571,56.96567525,
 56.26495875,54.42467257,51.90141691,49.17971678,46.79617369,45.1506845 ])
splt110_65 = np.array([101.65004725,102.28394766,100.42815075, 93.48629573, 93.18925983,
  93.4397639 , 93.546988  , 92.58779704, 91.73255028, 91.05585586,
  90.30599207, 88.96321734, 87.90144371, 86.84906551, 85.79454721,
  85.07771382, 84.39209036, 83.6245824 , 82.07030249, 80.51654249,
  78.96518301, 77.41320272, 75.86081482, 74.30871099, 72.75253385,
  71.19406442, 69.56409375, 67.75950172, 66.05505025, 64.19076244])
#endregion

"""
#region mint110-60seg
# min t 110-60
dtt110_60 = 
et110_60 = 
tt110_60 = np.linspace(0,num*dtt110_60,num)
xt110_60 = np.array()
ht110_60 = np.array()
vt110_60 = np.array()
splt110_60 = np.array()
#endregion
"""




#region minenom
# min e nom
dten = 2.66245201
een = 12647649.77219404
ten = np.linspace(0,num*dten,num)
xen = np.array([   0.        ,  40.67036172, 112.11577654, 199.61122378, 296.05812808,
  399.50570306, 509.57992249, 626.19494   , 749.54628687, 878.9755276 ,
 1011.804107  ,1144.97142233,1276.8793721 ,1407.42794057,1537.28362987,
 1667.1695525 ,1797.50723869,1928.29216995,2059.20239389,2189.85828097,
 2320.09382987,2450.17544144,2580.8490989 ,2713.03724519,2847.16333708,
 2982.28783538,3115.47155009,3242.6225933 ,3361.59970126,3475.91855105])
hen = np.array([ 0.00000000e+00,-6.28525524e-02, 2.75165914e-02,-1.87058392e-02,
  3.96533860e-02, 7.09659802e-02, 1.07459849e-01, 1.07946240e-01,
  1.51303738e-01, 3.44172530e+00, 1.29502808e+01, 2.75119482e+01,
  4.40608705e+01, 6.00352028e+01, 7.43821973e+01, 8.73923705e+01,
  9.98688057e+01, 1.12654030e+02, 1.26178762e+02, 1.40317573e+02,
  1.54473357e+02, 1.67740415e+02, 1.79409801e+02, 1.89708045e+02,
  2.00316915e+02, 2.14229956e+02, 2.34294203e+02, 2.60112774e+02,
  2.85652365e+02, 2.99991684e+02])
ven = np.array([ 5.        ,22.68382994,30.43496736,34.81487619,37.57102248,40.10932407,
 42.56806139,45.0479003 ,47.57870601,49.52769274,50.33241086,50.19389992,
 49.65258923,49.18354313,49.00463198,49.08311055,49.27566711,49.41837236,
 49.41861933,49.28714277,49.13066328,49.13512296,49.47775695,50.15837578,
 50.8730185 ,51.023168  ,49.92446614,47.33799953,44.18369662,42.99981117])
splen = np.array([103.33626292, 99.57464541, 96.18920581, 92.79270769, 91.79528984,
  91.51774483, 91.38507575, 91.46167072, 91.66688026, 91.31348434,
  88.72972147, 86.45385192, 84.97939193, 83.97732524, 83.25380432,
  82.74409157, 82.3400475 , 81.9867508 , 81.64168728, 81.29821597,
  80.96012959, 80.66708707, 80.47289452, 80.38476625, 80.36610701,
  80.30668832, 80.01373974, 79.34423079, 78.32613725, 77.44835434])
#endregion


#region mine110-75seg
# min t 110-75
dte110_75 = 2.74848259
ee110_75 = 12682445.29038964
te110_75 = np.linspace(0,num*dte110_75,num)
xe110_75 = np.array([   0.        ,  42.06214967, 116.32497458, 206.81602139, 307.43092706,
  416.05263666, 531.92391455, 655.13809215, 785.33664126, 920.58688956,
 1058.04843353,1195.38563302,1331.83508405,1467.3793247 ,1601.80119151,
 1735.28170471,1868.54749531,2002.01119273,2135.30690245,2268.33949082,
 2401.95154163,2537.38693445,2675.45829915,2816.25448535,2958.57833344,
 3098.13579022,3228.09600264,3346.0769007 ,3456.82533471,3569.63922545])
he110_75 = np.array([ 0.00000000e+00,-7.45141293e-02, 3.43742871e-02, 6.09908350e-03,
  4.50949822e-02, 3.67785304e-02, 1.42744974e-01, 6.93419847e-02,
  2.19085265e+00, 8.84994442e+00, 2.09136930e+01, 3.63754976e+01,
  5.25278597e+01, 6.88158762e+01, 8.52744870e+01, 1.00190484e+02,
  1.13090527e+02, 1.25719269e+02, 1.39403499e+02, 1.52669032e+02,
  1.63910298e+02, 1.73688215e+02, 1.83531741e+02, 1.94632955e+02,
  2.09914589e+02, 2.33919701e+02, 2.65049987e+02, 2.93637026e+02,
  3.07967735e+02, 3.00005627e+02])
ve110_75 = np.array([ 5.        ,22.87895751,30.52250092,34.98546135,38.12480619,40.86262402,
 43.46874011,46.17323228,48.4703519 ,49.91507137,50.35927574,50.15610905,
 49.83194206,49.49658589,49.04539997,48.73396013,48.73182176,48.80053081,
 48.688867  ,48.63748854,49.0146178 ,49.85094585,50.88543838,51.83837595,
 52.1524544 ,50.48757726,46.5036927 ,42.00366104,40.10172636,43.00188328])
sple110_75 = np.array([103.20682682, 99.58357602, 95.93078392, 93.13719822, 91.96102617,
  91.58662451, 91.51946686, 91.69820284, 91.53638346, 89.84217423,
  87.07877351, 85.64384602, 84.51648754, 83.7045913 , 82.85273868,
  82.12208615, 81.71717198, 81.47388516, 81.16206297, 80.77131311,
  80.62700553, 80.69154785, 80.72062124, 80.71079177, 80.77381836,
  79.8246688 , 78.62031873, 77.30554297, 76.20611908, 75.0006832 ])
#endregion


#region mine110-70seg
# min t 110-70
dte110_70 = 2.76130858
ee110_70 = 12913562.23684766
te110_70 = np.linspace(0,num*dte110_70,num)
xe110_70 = np.array([   0.        ,  42.34683597, 116.94163305, 208.09310103, 309.54116953,
  419.59313291, 538.03853997, 665.07916045, 800.31358883, 940.83410983,
 1082.39060704,1222.62803671,1361.24360613,1498.92983108,1636.43020834,
 1774.18673452,1912.39542139,2051.1037307 ,2190.3443328 ,2330.0610658 ,
 2469.74103624,2608.3831117 ,2744.85507821,2877.73966556,3005.39875616,
 3125.91472097,3236.19145969,3336.12436685,3432.34331167,3535.85067083])
he110_70 = np.array([ 0.00000000e+00,-5.82155304e-02,-8.10664568e-03,-9.05779058e-03,
  5.59342893e-02, 6.63962158e-02, 1.12118554e-01, 9.62135006e-02,
  2.75057105e+00, 1.29589893e+01, 3.03314066e+01, 5.07354631e+01,
  7.08803108e+01, 8.93292279e+01, 1.06353832e+02, 1.22627317e+02,
  1.38649116e+02, 1.54688987e+02, 1.70811308e+02, 1.87350411e+02,
  2.05142005e+02, 2.24739319e+02, 2.45382350e+02, 2.65208708e+02,
  2.83362926e+02, 3.01026913e+02, 3.19565141e+02, 3.32717130e+02,
  3.29706520e+02, 2.99997555e+02])
ve110_70 = np.array([ 5.        ,22.88637955,30.55651929,35.08477766,38.32225573,41.37159872,
 44.43088084,47.56709402,50.24964081,51.5679437 ,51.58591934,51.02233029,
 50.46632395,50.19892647,50.18201164,50.30192334,50.47547536,50.66170751,
 50.86492372,51.01409655,50.91730015,50.44128632,49.43043225,47.77347312,
 45.52827305,42.50017655,38.40552652,35.02964402,35.88871749,42.99870597])
sple110_70 = np.array([103.21497132, 99.51532188, 95.98126611, 93.11285098, 92.15847565,
  92.05916162, 92.04221187, 92.2071393 , 92.04004597, 89.3092508 ,
  86.80700495, 85.17521366, 84.10057595, 83.33031152, 82.75207856,
  82.2985158 , 81.918825  , 81.59460112, 81.32407928, 81.05880467,
  80.79137335, 80.51152431, 79.65410964, 78.27514126, 76.89544571,
  75.51597977, 74.13822165, 72.75791752, 71.37872301, 69.99937808])
#endregion


#region mine110-65seg
# min t 110-65
dte110_65 = 2.75123688
ee110_65 = 13321024.65394
te110_65 = np.linspace(0,num*dte110_65,num)
xe110_65 = np.array([   0.        ,  42.262628  , 116.52280245, 207.76286912, 310.15063367,
  422.58320046, 544.8571182 , 677.16387245, 818.00790748, 962.70394632,
 1106.77318247,1248.75752797,1389.03369925,1528.40932784,1668.14039449,
 1809.10785359,1951.83826263,2095.45993968,2237.73062685,2376.08867575,
 2508.11171646,2632.94803033,2752.84993268,2871.13108689,2989.69820067,
 3106.03063055,3213.36502282,3310.26116205,3403.41220622,3503.84948239])
he110_65 = np.array([ 0.00000000e+00,-5.43615173e-02,-2.73021951e-02, 1.32098243e-03,
  7.32865157e-02, 5.26315837e-02, 9.18368670e-02, 5.34551336e-01,
  6.90654141e+00, 2.33692193e+01, 4.67448852e+01, 7.19142681e+01,
  9.56653936e+01, 1.17096254e+02, 1.35996896e+02, 1.53325545e+02,
  1.70577041e+02, 1.90634825e+02, 2.15328765e+02, 2.43666386e+02,
  2.72041079e+02, 2.95208041e+02, 3.08473654e+02, 3.12358982e+02,
  3.12611370e+02, 3.18289012e+02, 3.31329484e+02, 3.40586248e+02,
  3.34255650e+02, 2.99993671e+02])
ve110_65 = np.array([ 5.        ,22.86851559,30.58268625,35.36339257,39.04554223,42.65542666,
 46.25421685,49.84915657,52.40836502,53.20586853,52.78945721,52.03628127,
 51.42257576,51.17297964,51.38162393,51.91736817,52.56324544,52.74317739,
 52.09473861,50.39124103,47.64477946,44.787074  ,43.18648756,43.01261702,
 43.03257675,41.2279646 ,37.24711482,33.96693467,35.1260836 ,42.99971131])
sple110_65 = np.array([103.25557579, 99.48658351, 96.04894144, 93.34483843, 92.7460776 ,
  92.60844894, 92.66159271, 92.81523856, 91.55903413, 88.02094628,
  86.11187543, 84.75346859, 83.69742674, 83.05896379, 82.48356819,
  82.19783747, 81.92875235, 81.6967679 , 81.4206768 , 80.51699856,
  78.96624858, 77.41407039, 75.86235938, 74.31111447, 72.75791155,
  71.20732431, 69.65514362, 68.1042752 , 66.55217485, 64.75982437])
#endregion





# h vs x min e
plt.rcParams['figure.figsize'] = [11, 2.5]

eSplinen = make_interp_spline(xen,hen)
ixen = np.linspace(xen.min(), xen.max(), 500)
ihen = eSplinen(ixen)

eSpline75 = make_interp_spline(xe110_75,he110_75)
ixe75 = np.linspace(xe110_75.min(), xe110_75.max(), 500)
ihe75 = eSpline75(ixe75)

eSpline70 = make_interp_spline(xe110_70,he110_70)
ixe70 = np.linspace(xe110_70.min(), xe110_70.max(), 500)
ihe70 = eSpline70(ixe70)

eSpline65 = make_interp_spline(xe110_65,he110_65)
ixe65 = np.linspace(xe110_65.min(), xe110_65.max(), 500)
ihe65 = eSpline65(ixe65)

target_altitude = np.ones(num)*300
plt.plot(xe110_65,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(xen,hen,color='k',marker='^')
plt.scatter(xe110_75,he110_75,color='darkblue',marker='D')
plt.scatter(xe110_70,he110_70,color='blue',marker='s')
plt.scatter(xe110_65,he110_65,color='royalblue',marker='o')
plt.legend(['target altitude','minimum energy nominal','minimum energy 'r'SPL$\leq$110-75db', 'minimum energy 'r'SPL$\leq$110-70db', 'minimum energy 'r'SPL$\leq$110-65db'], frameon=False)

plt.plot(ixen,ihen,color='k',linestyle='solid',linewidth=2)
plt.plot(ixe75,ihe75,color='navy',linestyle='solid',linewidth=2)
plt.plot(ixe70,ihe70,color='blue',linestyle='solid',linewidth=2)
plt.plot(ixe65,ihe65,color='royalblue',linestyle='solid',linewidth=2)
plt.xlabel('horizontal displacement (m)')
plt.ylabel('altitude (m)')
plt.savefig('e_lin_spl_h_vs_x.png', dpi=1200, bbox_inches='tight')
plt.show()



# h vs x min t
plt.rcParams['figure.figsize'] = [11, 2.5]

tSplinen = make_interp_spline(xtn,htn)
ixtn = np.linspace(xtn.min(), xtn.max(), 500)
ihtn = tSplinen(ixtn)

tSpline75 = make_interp_spline(xt110_75,ht110_75)
ixt75 = np.linspace(xt110_75.min(), xt110_75.max(), 500)
iht75 = tSpline75(ixt75)

tSpline70 = make_interp_spline(xt110_70,ht110_70)
ixt70 = np.linspace(xt110_70.min(), xt110_70.max(), 500)
iht70 = tSpline70(ixt70)

tSpline65 = make_interp_spline(xt110_65,ht110_65)
ixt65 = np.linspace(xt110_65.min(), xt110_65.max(), 500)
iht65 = tSpline65(ixt65)

target_altitude = np.ones(num)*300
plt.plot(xt110_65,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(xtn,htn,color='k',marker='o')
plt.scatter(xt110_75,ht110_75,color='darkred',marker='d')
plt.scatter(xt110_70,ht110_70,color='red',marker='P')
plt.scatter(xt110_65,ht110_65,color='indianred',marker='v')
plt.legend(['target altitude','minimum time nominal','minimum time 'r'SPL$\leq$110-75db', 'minimum time 'r'SPL$\leq$110-70db', 'minimum time 'r'SPL$\leq$110-65db'], frameon=False)

plt.plot(ixtn,ihtn,color='k',linestyle='solid',linewidth=2)
plt.plot(ixt75,iht75,color='darkred',linestyle='solid',linewidth=2)
plt.plot(ixt70,iht70,color='red',linestyle='solid',linewidth=2)
plt.plot(ixt65,iht65,color='indianred',linestyle='solid',linewidth=2)
plt.xlabel('horizontal displacement (m)')
plt.ylabel('altitude (m)')
plt.savefig('t_lin_spl_h_vs_x.png', dpi=1200, bbox_inches='tight')
plt.show()







# spl vs t min e
plt.rcParams['figure.figsize'] = [5, 2.5]

eSplinen = make_interp_spline(ten,splen)
iten = np.linspace(ten.min(), ten.max(), 500)
isplen = eSplinen(iten)

eSpline75 = make_interp_spline(te110_75,sple110_75)
ite75 = np.linspace(te110_75.min(), te110_75.max(), 500)
isple75 = eSpline75(ite75)

eSpline70 = make_interp_spline(te110_70,sple110_70)
ite70 = np.linspace(te110_70.min(), te110_70.max(), 500)
isple70 = eSpline70(ite70)

eSpline65 = make_interp_spline(te110_65,sple110_65)
ite65 = np.linspace(te110_65.min(), te110_65.max(), 500)
isple65 = eSpline65(ite65)

#target_altitude = np.ones(num)*300
#plt.plot(xe75,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(ten,splen,color='k',marker='o')
plt.scatter(te110_75,sple110_75,color='darkblue',marker='d')
plt.scatter(te110_70,sple110_70,color='blue',marker='P')
plt.scatter(te110_65,sple110_65,color='royalblue',marker='v')
plt.legend(['min energy nominal','min energy 'r'SPL$\leq$110-75db', 'min energy 'r'SPL$\leq$110-70db', 'min energy 'r'SPL$\leq$110-65db'], frameon=False, fontsize=10)

plt.plot(iten,isplen,color='k',linestyle='solid',linewidth=2)
plt.plot(ite75,isple75,color='navy',linestyle='solid',linewidth=2)
plt.plot(ite70,isple70,color='blue',linestyle='solid',linewidth=2)
plt.plot(ite65,isple65,color='royalblue',linestyle='solid',linewidth=2)

plt.plot(te110_75,np.linspace(110,75,30),color='k',linestyle='dashed',linewidth=1)
plt.plot(te110_70,np.linspace(110,70,30),color='k',linestyle='dashed',linewidth=1)
plt.plot(te110_65,np.linspace(110,65,30),color='k',linestyle='dashed',linewidth=1)

plt.xlabel('time (s)')
plt.ylabel('sound pressure level (db)')
plt.savefig('e_lin_spl_vs_t.png', dpi=1200, bbox_inches='tight')
plt.show()







# spl vs t min t
plt.rcParams['figure.figsize'] = [5, 2.5]

tSplinen = make_interp_spline(ttn,spltn)
ittn = np.linspace(ttn.min(), ttn.max(), 500)
ispltn = tSplinen(ittn)

tSpline75 = make_interp_spline(tt110_75,splt110_75)
itt75 = np.linspace(tt110_75.min(), tt110_75.max(), 500)
isplt75 = tSpline75(itt75)

tSpline70 = make_interp_spline(tt110_70,splt110_70)
itt70 = np.linspace(tt110_70.min(), tt110_70.max(), 500)
isplt70 = tSpline70(itt70)

tSpline65 = make_interp_spline(tt110_65,splt110_65)
itt65 = np.linspace(tt110_65.min(), tt110_65.max(), 500)
isplt65 = tSpline65(itt65)

plt.scatter(ttn,spltn,color='k',marker='^')
plt.scatter(tt110_75,splt110_75,color='darkred',marker='D')
plt.scatter(tt110_70,splt110_70,color='red',marker='s')
plt.scatter(tt110_65,splt110_65,color='indianred',marker='o')
plt.legend(['min time nominal','min time 'r'SPL$\leq$110-75db', 'min time 'r'SPL$\leq$110-70db', 'min time 'r'SPL$\leq$110-65db'], frameon=False, fontsize=10)

plt.plot(ittn,ispltn,color='k',linestyle='solid',linewidth=2)
plt.plot(itt75,isplt75,color='darkred',linestyle='solid',linewidth=2)
plt.plot(itt70,isplt70,color='red',linestyle='solid',linewidth=2)
plt.plot(itt65,isplt65,color='indianred',linestyle='solid',linewidth=2)

plt.plot(tt110_75,np.linspace(110,75,30),color='k',linestyle='dashed',linewidth=1)
plt.plot(tt110_70,np.linspace(110,70,30),color='k',linestyle='dashed',linewidth=1)
plt.plot(tt110_65,np.linspace(110,65,30),color='k',linestyle='dashed',linewidth=1)

plt.xlabel('time (s)')
plt.ylabel('sound pressure level (db)')
plt.savefig('t_lin_spl_vs_t.png', dpi=1200, bbox_inches='tight')
plt.show()







