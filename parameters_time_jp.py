import numpy as np


# aircraft and mission parameter definitions
options = {} # aircraft and mission parameter dictionary

# aircraft data
options['mass'] = 3000 # 2000 # (kg)
options['wing_area'] = 19.6 # (m^2)
options['max_cruise_power'] = 468300.0 # (w)
options['max_lift_power'] = 103652.0 # 103652(w)
options['cruise_rotor_diameter'] = 2.6 # (m)
options['lift_rotor_diameter'] = 2.4 # (m)
options['num_lift_rotors'] = 8
options['num_cruise_blades'] = 3
options['num_lift_blades'] = 2
options['cruise_mac'] = 0.15 # (m)
options['lift_mac'] = 0.15 # (m)
options['c_sigma'] = 0.19
options['l_sigma'] = 0.095
options['energy_scale'] = 0.0001 # scale energy for plotting

# mission parameters
options['gravity'] = 9.81 # (m/s^2)
options['v_0'] = 1.5 # 4 (m/s)
options['gamma_0'] = 0 # (rad)
options['h_0'] = 300 # (m)
options['min_h'] = 0.0 # 299.9 (m)
options['x_0'] = 0 # (m)
options['alpha_0'] = 0 # (rad)
options['h_f'] = 300 # (m)
options['v_f'] = 58 # 43 (m/s)
options['vne'] = 70 # (m/s)
options['x_lim'] = 5000 # (m)
options['theta_0'] = 0 # (rad)
options['gamma_f'] = 0 # (rad)
options['max_g'] = 0.5 # (g)
options['max_dgamma'] = 1.5 # (rad/s)

# set the initial integrator timestep
options['dt'] = 1.14059017 #1.78119483


# initial control inputs
"""
options['control_x_i'] = np.ones(30)*2300
options['control_z_i'] = np.linspace(800, 100, 30)
options['control_alpha_i'] = np.linspace(0.7, 0, 30)
"""
"""
print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""


# min dt seed (dtheta)
options['control_x_i'] = np.array([   3.38950744, 388.57680932,1516.68677668,1283.34067476, 544.47184566,
   70.51486388,  10.95492376, 265.46040708, 908.33387271,1345.03979896,
 1383.05975083,1339.43631201,1375.55070814,1437.43816011,1491.93328577,
 1535.64276346,1557.70777375,1613.23612135,1677.62698076,1738.85361438,
 1708.6819903 ,1640.8905847 ,1543.20504274,1407.42562927,1291.85669855,
 1184.67617388,1051.9450508 , 909.17904726, 743.41440144, 551.9143315 ,
  429.26421102, 337.23012642, 248.9902513 , 182.02428666, 108.73194689,
   12.55222786,  51.38595912,   4.77512342,  13.47554549,  25.2120668 ,
   14.3094111 ,  12.90958989,   1.91118022, 138.17427661, 655.61818068])
options['control_z_i'] = np.array([8.93099835e+02,6.82164883e+01,1.02831373e+03,1.03338267e+03,
 1.03624972e+03,1.03807224e+03,1.03644787e+03,1.02754102e+03,
 1.02351870e+03,9.82358224e+02,3.83362563e+02,2.55457620e+02,
 2.14417147e+02,7.37348249e+01,1.97418829e+01,3.13748230e+00,
 4.13169977e-01,1.22518600e-01,5.15351164e-02,2.93139937e-02,
 1.94427292e-02,8.31792660e-03,1.25584700e-03,2.06187345e-03,
 6.92961106e-03,5.55827815e-03,8.87275594e-03,3.99339927e-03,
 1.33731372e-02,7.15011417e-03,5.10524098e-03,1.36114661e-02,
 5.68404785e-03,6.85631165e-03,7.96745707e-03,2.14708951e-03,
 5.99345331e-03,1.61741145e-02,2.26534231e-02,3.38828182e-02,
 2.42254811e-02,2.77875703e-02,1.10678041e-03,4.70421578e-05,
 1.14609213e+02])
options['control_alpha_i'] = np.array([ 2.61331231e-20,-1.53620481e-02,-8.32401547e-02, 1.86787631e-01,
  2.66426896e-01, 3.01099907e-01, 2.76213578e-01, 2.05796812e-01,
  1.13208016e-01, 5.29384030e-02, 9.59434365e-02, 1.50766518e-01,
  1.57147562e-01, 1.40742502e-01, 1.16240289e-01, 9.26287132e-02,
  7.39516416e-02, 5.92579531e-02, 4.68017104e-02, 3.57588524e-02,
  2.60130115e-02, 1.80614281e-02, 1.19291890e-02, 7.46776582e-03,
  4.43637257e-03, 2.50819480e-03, 1.40403176e-03, 1.06037408e-03,
  1.42606152e-03, 2.40322141e-03, 3.96221778e-03, 5.87345873e-03,
  7.99977313e-03, 1.02077708e-02, 1.26007645e-02, 1.49960676e-02,
  1.74904130e-02, 1.99694133e-02, 2.24081156e-02, 2.48634900e-02,
  2.72811515e-02, 2.90069466e-02, 3.03130091e-02, 3.17269504e-02,
  3.51967277e-02])

"""
# min e seed (no dgamma)
options['control_x_i'] = np.array([2.43209089e+01,7.47367962e-14,1.33712622e+03,1.21176390e+03,
 1.59086245e+03,1.60752999e+03,1.38396312e+03,1.28468793e+03,
 1.19929599e+03,1.14596381e+03,1.10550707e+03,1.07275411e+03,
 1.04464066e+03,1.01952002e+03,9.96467657e+02,9.74756602e+02,
 9.53992602e+02,9.34260826e+02,9.15751968e+02,8.98382194e+02,
 8.82045778e+02,8.66555229e+02,8.51920953e+02,8.38111866e+02,
 8.24840072e+02,8.12054414e+02,7.99719323e+02,7.87765959e+02,
 7.76192858e+02,7.65000668e+02,7.54031278e+02,7.43264821e+02,
 7.32709409e+02,7.22343245e+02,7.12153792e+02,7.02180870e+02,
 6.92522050e+02,6.82928715e+02,6.73370254e+02,6.63671124e+02,
 6.54614483e+02,6.45283754e+02,6.36248797e+02,6.27118648e+02,
 6.18990135e+02])
options['control_z_i'] = np.array([1.03003651e+03,4.74248851e-15,1.01000621e+03,1.04759592e+03,
 9.31375716e+02,6.20909785e+02,4.74475762e+02,3.69113114e+02,
 3.06188350e+02,2.61526735e+02,2.17285278e+02,1.97697767e+02,
 1.78055007e+02,1.55525758e+02,1.28814727e+02,9.20615331e+01,
 5.10918711e+01,2.32732408e+01,5.09573869e+00,1.09323117e+00,
 4.01424538e-01,3.15271400e-02,9.45806509e-03,1.59785872e-03,
 8.41982307e-03,1.88815790e-02,2.54970538e-02,1.54686392e-02,
 2.81996785e-03,9.99330690e-04,9.25977370e-04,8.56230914e-04,
 8.11096398e-04,7.69387888e-04,7.32146893e-04,6.99848155e-04,
 6.71705844e-04,6.27907015e-04,6.22582479e-04,6.07262874e-04,
 5.55057009e-04,5.70859871e-04,5.53423762e-04,5.21706763e-04,
 5.83825243e-04])
options['control_alpha_i'] = np.array([-7.30768585e-22, 3.80342478e-01, 4.72244778e-01, 5.23168285e-01,
  2.24610892e-01, 1.72824740e-01, 1.52164006e-01, 1.36800245e-01,
  1.22761511e-01, 1.10857898e-01, 1.01905090e-01, 9.36105756e-02,
  8.66268055e-02, 8.05794295e-02, 7.57445426e-02, 7.17796892e-02,
  6.80113085e-02, 6.43744970e-02, 6.09758357e-02, 5.79601704e-02,
  5.52246767e-02, 5.27483970e-02, 5.06252067e-02, 4.84704923e-02,
  4.65602270e-02, 4.51179912e-02, 4.37296306e-02, 4.23770942e-02,
  4.11548426e-02, 4.01450365e-02, 3.92185250e-02, 3.84309467e-02,
  3.77403614e-02, 3.71552557e-02, 3.67076918e-02, 3.62449619e-02,
  3.59812790e-02, 3.57801248e-02, 3.56799240e-02, 3.56919235e-02,
  3.56194446e-02, 3.58942166e-02, 3.61532937e-02, 3.46399776e-02,
  3.94670144e-02])
  """