import numpy as np


# aircraft and mission parameter definitions
options = {} # aircraft and mission parameter dictionary

# aircraft data
options['mass'] = 3000 # 2000 # (kg)
options['wing_area'] = 19.6 # (m^2)
options['max_cruise_power'] = 468300 # (w)
options['max_lift_power'] = 143652 # 103652 (w)
options['cruise_rotor_diameter'] = 2.6 # (m)
options['lift_rotor_diameter'] = 2.4 # (m)
options['num_lift_rotors'] = 8
options['num_cruise_blades'] = 3
options['num_lift_blades'] = 2
options['cruise_mac'] = 0.15 # (m)
options['lift_mac'] = 0.15 # (m)
options['c_sigma'] = 0.19
options['l_sigma'] = 0.095
options['energy_scale'] = 0.0001 # scale energy for plotting

# mission parameters
options['gravity'] = 9.81 # (m/s^2)
options['v_0'] = 0.625 #spyder:0.625 (m/s)
options['gamma_0'] = 0.0 # (rad)
options['h_0'] = 0 # (m)
options['min_h'] = -0.1 # (m)
options['x_0'] = 0 # (m)
options['alpha_0'] = 0 # (rad)
options['h_f'] = 300 # (m)
options['v_f'] = 58 # 43 (m/s)
options['vne'] = 65 # (m/s)
options['x_lim'] = 5000 # (m)
options['theta_0'] = 0.0 # (rad)
options['gamma_f'] = 0.0 # (rad)
options['max_g'] = 0.5 # (g)

# obstacle
options['be'] = 10 # (m) start of sinusoidal ramp
options['p_i'] = 50 # (m) start of obstacle
options['p_f'] = 12000 # (m) end of obstacle
options['obs_height'] = 55 # (m)


"""
print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""

"""
# min e seed OBS!
options['dt'] = 4.11975845
options['control_x_i'] = np.array([1478.46115449,1470.10925412,1562.10905279,1591.39211652,1620.71694832,
 1222.52344219,1130.18735388,1058.99541098,1016.82168465, 978.55505587,
  948.98588448, 924.1583309 , 901.78114123, 883.89836611, 869.80140038,
  853.06603777, 843.0659189 , 837.01471622, 822.09687294, 822.60588068,
  812.67618177, 814.75534446, 803.33252653, 810.96531208, 805.13246131,
  810.43167314, 807.38603351, 809.76566938, 810.16772161, 810.6499241 ,
  811.77893695, 812.30724735, 813.12877112, 814.01286968, 814.71286412,
  815.56664069, 816.27369657, 816.75306621, 817.57147671, 817.6235195 ,
  818.59952304, 819.24051539, 825.72287246, 827.46491127, 822.04011844,
  750.94244555, 665.06721531])
options['control_z_i'] = np.array([1.13821917e+03,1.09446509e+03,1.12690496e+03,8.29571025e+02,
 3.37995298e+02,5.66047377e+01,4.39210431e-13,0.00000000e+00,
 2.79260465e-01,1.00518278e+00,7.76069533e-16,7.52788523e-03,
 9.53369801e-17,1.41179823e-02,1.22805115e-01,6.41379886e-01,
 4.52593028e-01,0.00000000e+00,1.39887898e-03,2.21744461e-03,
 2.86787025e-01,0.00000000e+00,6.33448075e-02,1.13759122e-02,
 0.00000000e+00,8.18492369e-02,0.00000000e+00,9.55876546e-04,
 5.80739234e-04,1.88527630e-04,5.16411321e-04,3.82985648e-04,
 3.66161572e-04,2.55238998e-04,3.75824665e-04,3.36522094e-04,
 3.51610526e-04,3.38129408e-04,3.95904537e-04,2.92982470e-04,
 3.97784093e-04,4.23260401e-04,2.54015112e-04,3.25710174e-04,
 2.08532422e-04,1.09107619e-04,3.27797101e-04])
options['control_alpha_i'] = np.array([ 1.90002106e-01,-1.57079633e+00,-1.06808973e-01, 9.95546301e-02,
  1.80328919e-01, 1.11537230e-01, 8.77137289e-02, 6.90088090e-02,
  5.57646803e-02, 4.53953358e-02, 3.69577038e-02, 2.99735312e-02,
  2.40801226e-02, 1.90318764e-02, 1.46264206e-02, 1.07969402e-02,
  7.41091238e-03, 4.33644710e-03, 1.61460261e-03,-8.72971619e-04,
 -3.20470446e-03,-5.11682965e-03,-8.05478906e-03,-4.71948298e-03,
 -9.86174493e-03,-8.93474880e-03,-8.84661732e-03,-8.95377788e-03,
 -9.04065615e-03,-9.01492466e-03,-9.01147869e-03,-9.03448037e-03,
 -8.86732783e-03,-8.75828845e-03,-8.81252198e-03,-8.55438294e-03,
 -8.53887935e-03,-8.74007720e-03,-9.09723190e-03,-1.00852592e-02,
 -1.02435221e-02,-9.37937393e-03,-3.40340583e-03, 2.91180094e-03,
  2.60424904e-02,-9.29974886e-03, 3.65392422e-02])
"""

# min dt seed new
options['dt'] = 1.49816422
options['control_x_i'] = np.array([1471.81451239,1405.21643451,1495.92764768,1497.51642624,1501.84496519,
 1503.75299179,1507.69436399,1505.13364542,1516.78192443,1540.95416745,
 1545.46969776,1561.54293138,1596.46734215,1586.99324365,1614.21804569,
 1619.34286007,1631.10969309,1654.9880178 ,1672.39111271,1637.64767182,
 1705.1353542 ,1697.38936695,1728.97301477,1738.56318426,1729.52929226,
 1742.66890213,1748.76447067,1739.16940316,1735.28715997,1741.98673946,
 1734.37256375,1721.6079797 ,1468.49545256,1207.52489622, 960.28386216,
  732.50738961, 534.83542248, 347.59788702, 214.31176925, 665.06725713])
options['control_z_i'] = np.array([1.09291135e+03,1.11547099e+03,1.12301522e+03,1.12634554e+03,
 1.12976311e+03,1.13374255e+03,1.13471037e+03,1.13456207e+03,
 1.13348532e+03,1.10962987e+03,1.12818045e+03,1.12511342e+03,
 1.06097161e+03,4.24271670e+02,9.51358504e+01,9.60594243e+00,
 3.80842959e-01,4.41586309e-03,1.26636467e-03,1.25204865e-03,
 1.33592923e-03,1.38883932e-03,1.44340220e-03,1.48526413e-03,
 1.51292570e-03,1.52926226e-03,1.54659820e-03,1.56074880e-03,
 1.56109035e-03,1.54936212e-03,1.53507668e-03,1.52027278e-03,
 1.50493868e-03,1.49846873e-03,1.49636316e-03,1.50953428e-03,
 1.47569205e-03,1.44440933e-03,5.54801545e-04,0.00000000e+00])
options['control_alpha_i'] = np.array([ 5.04290391e-02,-1.55832803e+00,-8.10266960e-01,-6.66581666e-01,
 -4.64784902e-01,-2.37530878e-01,-1.65814521e-01,-1.41562014e-01,
 -9.07510761e-02,-3.26271809e-02,-5.18728968e-02,-3.64029715e-02,
  5.24893360e-02, 1.52832743e-01, 1.86850916e-01, 1.74828426e-01,
  1.29048289e-01, 8.66511175e-02, 7.80394189e-02, 6.09828166e-02,
  4.89809295e-02, 4.02069159e-02, 2.89566199e-02, 2.15028392e-02,
  1.60833205e-02, 9.16727809e-03, 5.57332176e-03, 3.61990581e-03,
  6.33938486e-04,-1.62549092e-04,-1.79948196e-03, 6.72109862e-04,
 -3.76203404e-03,-2.94132550e-03,-4.83307543e-05, 4.68208533e-03,
  9.39848586e-03, 1.65699148e-02,-2.53554928e-02, 3.65392512e-02])

