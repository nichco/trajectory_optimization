import numpy as np


# aircraft and mission parameter definitions
options = {} # aircraft and mission parameter dictionary

# aircraft data
options['mass'] = 3000 # 2000 # (kg)
options['wing_area'] = 19.6 # (m^2)
options['max_cruise_power'] = 468300.0 # (w)
options['max_lift_power'] = 103652.0 # 103652(w)
options['cruise_rotor_diameter'] = 2.6 # (m)
options['lift_rotor_diameter'] = 2.4 # (m)
options['num_lift_rotors'] = 8
options['num_cruise_blades'] = 3
options['num_lift_blades'] = 2
options['cruise_mac'] = 0.15 # (m)
options['lift_mac'] = 0.15 # (m)
options['c_sigma'] = 0.19
options['l_sigma'] = 0.095
options['energy_scale'] = 0.0001 # scale energy for plotting

# mission parameters
options['gravity'] = 9.81 # (m/s^2)
options['v_0'] = 1.5 # 4 (m/s)
options['gamma_0'] = 0 # (rad)
options['h_0'] = 300 # (m)
options['min_h'] = 299.9 # (m)
options['x_0'] = 0 # (m)
options['alpha_0'] = 0 # (rad)
options['h_f'] = 300 # (m)
options['v_f'] = 58 # 43 (m/s)
options['vne'] = 70 # (m/s)
options['x_lim'] = 5000 # (m)
options['theta_0'] = 0 # (rad)
options['gamma_f'] = 0 # (rad)
options['max_g'] = 0.5 # (g)
options['max_dgamma'] = 1.5 # (rad/s)

# set the initial integrator timestep
options['dt'] = 0.62235129 #1.78119483


# initial control inputs
"""
options['control_x_i'] = np.ones(30)*2300
options['control_z_i'] = np.linspace(800, 100, 30)
options['control_alpha_i'] = np.linspace(0.7, 0, 30)
"""
"""
print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""


# min dt seed
options['control_x_i'] = np.array([1617.41880536,1305.0841948 , 886.57193   ,1010.68370008, 884.58129813,
 1024.95808963,1052.0057094 ,1143.95540215,1224.37174944,1328.93916284,
 1482.06170371,1575.41365136,1589.1854625 ,1585.99609991,1588.19026373,
 1564.96749253,1540.99702055,1513.67019392,1480.48238295,1453.27871199,
 1422.20557896,1392.38371464,1376.36018127,1354.85537317,1346.19836167,
 1331.81853227,1316.17218034,1313.93771002,1302.04495445,1296.41323777,
 1282.48012062,1281.74819305,1271.27058007,1257.10966075,1255.04638245,
 1248.7626585 ,1242.80863067,1239.19190881,1226.97838367,1223.36724259,
 1218.33596061,1207.79748252,1217.05561358,1200.28743064,1211.37328421])
options['control_z_i'] = np.array([2.20326305e+02,7.94350885e+02,1.42806024e+03,1.09315466e+03,
 1.22299491e+03,1.11323607e+03,1.10581042e+03,1.06223435e+03,
 1.03784987e+03,1.01641907e+03,9.41542656e+02,8.30054515e+02,
 7.76869312e+02,7.39391810e+02,6.83326890e+02,6.18445817e+02,
 5.66104884e+02,5.29216554e+02,4.78796438e+02,4.35964873e+02,
 3.97837090e+02,3.49419703e+02,3.33829068e+02,2.94834287e+02,
 2.98898729e+02,2.43760287e+02,2.43166119e+02,2.35976436e+02,
 2.23021882e+02,2.04795317e+02,2.00310922e+02,1.79487733e+02,
 1.94366366e+02,8.14606035e+01,7.86271586e+01,4.14881469e+01,
 2.27956612e+01,1.38209626e+01,7.46597158e+00,2.92584294e+00,
 6.65673829e-01,7.30386808e-02,9.78691194e-03,6.40039386e-02,
 4.56432933e-01])
options['control_alpha_i'] = np.array([-7.20501012e-21, 4.25025979e-01, 1.63973783e-01, 4.22108063e-01,
  3.39848686e-01, 4.04870986e-01, 3.94023719e-01, 4.02031173e-01,
  3.93368144e-01, 3.61893393e-01, 2.84032093e-01, 2.12485551e-01,
  2.05171090e-01, 1.91884339e-01, 1.80311571e-01, 1.69594765e-01,
  1.58286977e-01, 1.53030504e-01, 1.43623882e-01, 1.35106595e-01,
  1.29496000e-01, 1.23546348e-01, 1.19872467e-01, 1.10273557e-01,
  1.06731700e-01, 1.01470114e-01, 9.15072302e-02, 9.50868706e-02,
  8.19996498e-02, 8.61973513e-02, 6.91904132e-02, 8.04322323e-02,
  6.93456847e-02, 5.84217269e-02, 7.14607924e-02, 5.99301137e-02,
  5.75704720e-02, 5.90799431e-02, 5.10139385e-02, 4.68809810e-02,
  5.12866243e-02, 3.93017648e-02, 3.45547059e-02, 4.10131088e-02,
  4.55742519e-02])

"""
# min e seed (no dgamma)
options['control_x_i'] = np.array([2.43209089e+01,7.47367962e-14,1.33712622e+03,1.21176390e+03,
 1.59086245e+03,1.60752999e+03,1.38396312e+03,1.28468793e+03,
 1.19929599e+03,1.14596381e+03,1.10550707e+03,1.07275411e+03,
 1.04464066e+03,1.01952002e+03,9.96467657e+02,9.74756602e+02,
 9.53992602e+02,9.34260826e+02,9.15751968e+02,8.98382194e+02,
 8.82045778e+02,8.66555229e+02,8.51920953e+02,8.38111866e+02,
 8.24840072e+02,8.12054414e+02,7.99719323e+02,7.87765959e+02,
 7.76192858e+02,7.65000668e+02,7.54031278e+02,7.43264821e+02,
 7.32709409e+02,7.22343245e+02,7.12153792e+02,7.02180870e+02,
 6.92522050e+02,6.82928715e+02,6.73370254e+02,6.63671124e+02,
 6.54614483e+02,6.45283754e+02,6.36248797e+02,6.27118648e+02,
 6.18990135e+02])
options['control_z_i'] = np.array([1.03003651e+03,4.74248851e-15,1.01000621e+03,1.04759592e+03,
 9.31375716e+02,6.20909785e+02,4.74475762e+02,3.69113114e+02,
 3.06188350e+02,2.61526735e+02,2.17285278e+02,1.97697767e+02,
 1.78055007e+02,1.55525758e+02,1.28814727e+02,9.20615331e+01,
 5.10918711e+01,2.32732408e+01,5.09573869e+00,1.09323117e+00,
 4.01424538e-01,3.15271400e-02,9.45806509e-03,1.59785872e-03,
 8.41982307e-03,1.88815790e-02,2.54970538e-02,1.54686392e-02,
 2.81996785e-03,9.99330690e-04,9.25977370e-04,8.56230914e-04,
 8.11096398e-04,7.69387888e-04,7.32146893e-04,6.99848155e-04,
 6.71705844e-04,6.27907015e-04,6.22582479e-04,6.07262874e-04,
 5.55057009e-04,5.70859871e-04,5.53423762e-04,5.21706763e-04,
 5.83825243e-04])
options['control_alpha_i'] = np.array([-7.30768585e-22, 3.80342478e-01, 4.72244778e-01, 5.23168285e-01,
  2.24610892e-01, 1.72824740e-01, 1.52164006e-01, 1.36800245e-01,
  1.22761511e-01, 1.10857898e-01, 1.01905090e-01, 9.36105756e-02,
  8.66268055e-02, 8.05794295e-02, 7.57445426e-02, 7.17796892e-02,
  6.80113085e-02, 6.43744970e-02, 6.09758357e-02, 5.79601704e-02,
  5.52246767e-02, 5.27483970e-02, 5.06252067e-02, 4.84704923e-02,
  4.65602270e-02, 4.51179912e-02, 4.37296306e-02, 4.23770942e-02,
  4.11548426e-02, 4.01450365e-02, 3.92185250e-02, 3.84309467e-02,
  3.77403614e-02, 3.71552557e-02, 3.67076918e-02, 3.62449619e-02,
  3.59812790e-02, 3.57801248e-02, 3.56799240e-02, 3.56919235e-02,
  3.56194446e-02, 3.58942166e-02, 3.61532937e-02, 3.46399776e-02,
  3.94670144e-02])
  """