import numpy as np
import matplotlib.pyplot as plt
plt.rcParams["font.family"] = "Times New Roman"
plt.rcParams.update({'font.size': 12})



num = 45
dte = 4.10321105
dtt = 0.70132
te = np.linspace(0,num*dte,num)
tt = np.linspace(0,num*dtt,num)

# region energy

he = np.array([300.        ,300.09696176,300.12095064,297.0046514 ,289.1055699 ,
 275.68293949,258.36813478,238.55518637,220.32599814,206.20228982,
 195.09901949,186.07705369,178.88810557,173.46332807,169.77368286,
 167.74023849,167.30063128,168.32001105,170.6783076 ,174.72982288,
 179.69491369,184.94277007,190.64062307,196.64598298,202.92244228,
 209.14858896,215.32478688,221.53492198,227.72750436,233.90073485,
 240.01456283,246.02557985,251.87878495,257.56946842,263.15222111,
 268.55756996,273.66307126,278.43290973,282.8971063 ,287.0528708 ,
 290.89104282,294.36642848,297.41053206,299.50715194,299.92319843])
xe = np.array([0.00000000e+00,1.33348938e+00,8.86962055e+00,3.44440541e+01,
 7.09563672e+01,1.18408388e+02,1.76937187e+02,2.45037617e+02,
 3.20809048e+02,4.03639855e+02,4.92635685e+02,5.86951808e+02,
 6.85865797e+02,7.88732746e+02,8.94955711e+02,1.00397984e+03,
 1.11528780e+03,1.22840104e+03,1.34290141e+03,1.45829026e+03,
 1.57422340e+03,1.69056878e+03,1.80714891e+03,1.92380118e+03,
 2.04037332e+03,2.15679292e+03,2.27300148e+03,2.38891861e+03,
 2.50448052e+03,2.61963139e+03,2.73431972e+03,2.84848520e+03,
 2.96207040e+03,3.07501872e+03,3.18724502e+03,3.29866033e+03,
 3.40918874e+03,3.51875582e+03,3.62727638e+03,3.73465939e+03,
 3.84081122e+03,3.94564247e+03,4.04907623e+03,4.15115631e+03,
 4.25221092e+03])
ve = np.array([ 1.45      , 4.67367432,11.80447814,19.19485014,25.20193528,31.74015061,
 38.26068463,42.99949732,46.63389872,50.00725178,53.10526882,55.8311508 ,
 58.20358352,60.24585572,61.97703047,63.41889764,64.58580525,65.50819159,
 66.19106705,66.59999566,66.87802035,67.08188045,67.17505901,67.1813062 ,
 67.10834369,67.00441638,66.86095579,66.67315057,66.45257042,66.20055125,
 65.9159    ,65.59414411,65.24078422,64.84954229,64.40450006,63.90879162,
 63.36958444,62.78590475,62.1512675 ,61.46367374,60.7234191 ,59.92852055,
 59.11827667,58.35707137,58.00722634])
ge = np.array([ 0.00000000e+00, -0.30153798e-02, -3.59531593e-02,-3.62116379e-01,
 -2.91014632e-01,-2.78023944e-01,-2.91842671e-01,-2.67626123e-01,
 -2.01640146e-01,-1.42260297e-01,-1.08337848e-01,-8.33824378e-02,
 -6.23062291e-02,-4.34308139e-02,-2.64371464e-02,-1.11102719e-02,
  2.94958137e-03, 1.44273941e-02, 2.80529073e-02, 4.04024446e-02,
  4.40950672e-02, 4.68385764e-02, 5.02759115e-02, 5.28731153e-02,
  5.39280798e-02, 5.30856849e-02, 5.32988486e-02, 5.35801086e-02,
  5.35576518e-02, 5.34718652e-02, 5.30010030e-02, 5.21068282e-02,
  5.08384010e-02, 5.00043900e-02, 4.92715383e-02, 4.74550590e-02,
  4.48101482e-02, 4.22813699e-02, 3.99046860e-02, 3.74650212e-02,
  3.46869523e-02, 3.16020373e-02, 2.66152855e-02, 1.18517756e-02,
  4.33035078e-05])
cxe = np.array([   4.84957043, 549.77233204,1520.78051239,1551.26557337,1574.58227571,
 1597.56172793,1334.10071667, 851.93398385, 947.50217037,1069.02319858,
 1096.64476191,1106.8895996 ,1113.20691323,1117.9215256 ,1120.04901544,
 1119.72714903,1116.31300859,1111.25679359,1104.86067758,1097.61529023,
 1088.13537261,1074.10460569,1058.73892452,1041.53684946,1025.12408642,
 1007.36597365, 991.97896617, 976.90576232, 963.44621212, 949.81698386,
  929.53380644, 906.56741053, 883.76883155, 856.86269518, 825.73871278,
  787.36378772, 744.6504969 , 700.68810867, 652.89451629, 601.32613833,
  545.5187396 , 473.97352424, 438.20373243, 247.89913008, 665.06720824])
cze = np.array([1.03002830e+03,4.56059130e-01,6.13702708e+02,1.03828403e+03,
 9.77813693e+02,6.24273770e+02,3.42650675e+02,4.37631059e+01,
 4.96144639e+00,7.42897560e-16,1.68444993e-02,1.22815433e-02,
 6.38517492e-02,2.61253972e-01,9.86470971e-04,1.35002677e+00,
 1.17893175e+00,1.77147768e+00,9.67970323e-01,9.85795918e-02,
 1.58463651e-15,3.12527028e-16,4.32974699e-02,1.22540959e-01,
 1.46350083e-01,1.13236073e-01,4.07058807e-02,6.64671693e-17,
 3.99799533e-01,5.56400518e-02,1.82536777e-01,1.05319629e-01,
 6.24943000e-02,7.14065905e-02,2.38014262e-01,1.66061435e-02,
 5.28656211e-05,2.18266919e-05,1.90366296e-01,8.60489248e-01,
 3.03622896e-03,0.00000000e+00,1.49389385e-01,2.37614107e-03,
 4.33392128e-16])
control_alpha_e = np.array([ 9.67263366e-19,-3.53109650e-02,-1.27348351e-02, 3.04760257e-01,
  2.32646394e-01, 2.16463993e-01, 2.29865185e-01, 2.05859254e-01,
  1.45959766e-01, 9.49513322e-02, 7.00113617e-02, 5.38190905e-02,
  4.18130367e-02, 3.26675046e-02, 2.51402263e-02, 1.94711636e-02,
  1.49479486e-02, 1.04372162e-02, 1.14214126e-02, 6.04463139e-03,
  2.61362719e-03, 3.91104719e-03, 2.35248231e-03, 3.04284475e-03,
  1.46250423e-03, 2.20817718e-03, 3.15145998e-03, 3.37996666e-03,
  4.27525719e-03, 4.90261667e-03, 5.75260738e-03, 6.59770285e-03,
  7.73605418e-03, 9.47766780e-03, 1.06949259e-02, 1.18834703e-02,
  1.37014737e-02, 1.60553857e-02, 1.83447840e-02, 2.10265823e-02,
  2.36380664e-02, 2.69370146e-02, 2.87282820e-02, 2.51714803e-02,
  3.65392420e-02])
cruisepower_e = np.array([1.59725787e-02,2.27873076e+04,4.60153350e+05,4.67867817e+05,
 4.68356386e+05,4.66613765e+05,2.59398070e+05,6.50031003e+04,
 8.62910384e+04,1.19862696e+05,1.25626992e+05,1.25820251e+05,
 1.25021847e+05,1.24032336e+05,1.22530747e+05,1.20577596e+05,
 1.17984502e+05,1.15208370e+05,1.12363647e+05,1.09621118e+05,
 1.06423710e+05,1.02077656e+05,9.76035871e+04,9.28630103e+04,
 8.85594217e+04,8.40830676e+04,8.03688731e+04,7.68743197e+04,
 7.38764650e+04,7.09400833e+04,6.66608908e+04,6.20234263e+04,
 5.76505689e+04,5.27395078e+04,4.74013960e+04,4.12936785e+04,
 3.51168609e+04,2.94268406e+04,2.39573792e+04,1.88460635e+04,
 1.41751484e+04,9.37158302e+03,7.46562188e+03,1.36165545e+03,
 2.63954579e+04])
liftpower_e = np.array([1.03509234e+05,9.00349013e-06,2.20971845e+04,1.03652417e+05,
 8.76246330e+04,2.30328299e+04,3.83890320e+03,8.13759903e+00,
 1.21899496e-02,4.20137990e-50,4.99175240e-10,1.96570184e-10,
 2.80031599e-08,1.94068290e-06,1.05527122e-13,2.72711764e-04,
 1.82816140e-04,6.23629818e-04,1.02000983e-04,1.08085914e-07,
 4.49800869e-49,3.45062347e-51,9.17884053e-09,2.07925712e-07,
 3.54043471e-07,1.63779686e-07,7.59628566e-09,3.30207441e-53,
 7.17251170e-06,1.92958403e-08,6.79857620e-07,1.30285200e-07,
 2.71516168e-08,4.03877736e-08,1.49136005e-06,5.04938317e-10,
 1.62353036e-17,1.13835527e-18,7.52306536e-07,6.91903467e-05,
 3.02648658e-12,0.00000000e+00,3.57307930e-07,1.43461965e-12,
 8.66206832e-51])
ee = np.array([       0.        ,  395790.76235193,  1125446.35559287, 2539062.32738082,
  4843979.19910647, 6477307.67980199, 7317895.56401934, 7612284.9396666 ,
  7753077.83688868, 7944525.60056403, 8173687.07418427, 8408232.50027799,
  8642016.1291686 , 8873957.98410542, 9103425.54430835, 9329542.21692233,
  9551310.6450478 , 9767993.76153051, 9979352.73898548,10185473.82921818,
 10386045.17907823,10579540.89023773,10764793.93114175,10941437.8729226 ,
 11109655.91243314,11269685.30694401,11422086.05509931,11567774.40608637,
 11707422.28327772,11841548.190191  ,11968942.12139208,12088029.64229661,
 12198734.00524025,12300786.78700697,12393293.88891345,12475138.25103762,
 12545565.02480321,12604990.78944938,12654075.26924796,12693373.09454086,
 12723649.64116823,12745159.75050548,12760683.83366404,12767970.00157421,
 12787071.25774335])
sple = np.array([95.12870628,55.88974456,83.10423968,95.30063884,94.07409008,85.73420667,
 81.40767762,70.57401492,74.01963076,77.65912398,78.71167181,79.26862435,
 79.65736296,79.92719582,80.08173233,80.22926254,80.2701258 ,80.17297605,
 80.05527784,79.75750698,79.29861333,78.75940772,78.14665284,77.48934641,
 76.79875533,76.0772099 ,75.42799629,74.77489567,74.16575633,73.54580769,
 72.73790303,71.84186733,70.94096627,69.91933855,68.74117754,67.28405294,
 65.62592495,63.85924026,61.8537473 ,59.56510525,56.89398874,53.12653282,
 50.93933592,35.90141783,61.37731436])

# endregion


# region time

ht = np.array([300.        ,300.53623296,300.18135957,300.11465653,299.36520567,
 296.73781102,293.19359059,288.90010271,284.11913369,279.16178676,
 274.35454348,270.0269262 ,266.39546953,263.56083028,261.20282954,
 258.05465326,253.98100191,249.38535557,244.75655645,240.58166651,
 237.24034294,234.86281807,233.33611587,232.47075622,232.14469544,
 232.29969026,232.96585609,234.22337326,236.16967958,238.85754768,
 242.28765204,246.40644218,251.11967202,256.28274778,261.75102888,
 267.32448101,272.8169491 ,278.13965008,283.20338397,287.90755513,
 292.1276959 ,295.65406876,298.28276274,299.73998736,299.9931503 ])
xt = np.array([0.00000000e+00,8.38094019e-02,1.55558893e+00,5.79509494e+00,
 1.16529937e+01,1.91205666e+01,2.82450398e+01,3.90976994e+01,
 5.17386650e+01,6.62270195e+01,8.26221158e+01,1.00935773e+02,
 1.21100783e+02,1.42959343e+02,1.66237876e+02,1.90878473e+02,
 2.16960996e+02,2.44563370e+02,2.73740201e+02,3.04499254e+02,
 3.36792097e+02,3.70520023e+02,4.05563027e+02,4.41818370e+02,
 4.79213959e+02,5.17681447e+02,5.57152120e+02,5.97540844e+02,
 6.38746975e+02,6.80674021e+02,7.23223881e+02,7.66314096e+02,
 8.09877021e+02,8.53870837e+02,8.98192121e+02,9.42406656e+02,
 9.86069233e+02,1.02907202e+03,1.07139087e+03,1.11305269e+03,
 1.15411375e+03,1.19465637e+03,1.23479777e+03,1.27484138e+03,
 1.31532845e+03])
vt = np.array([ 1.24      , 2.06444626, 4.90921807, 7.3504072 , 9.98424124,12.64453548,
 15.33070232,18.00313991,20.60063964,23.15026762,25.66065778,28.09802054,
 30.42843568,32.48268573,34.41635045,36.58733402,38.84461895,41.09961044,
 43.29148615,45.3822818 ,47.36206718,49.22662086,50.97455487,52.63040345,
 54.20376449,55.69084894,57.08114033,58.3500068 ,59.49606245,60.52116208,
 61.42807083,62.2323345 ,62.94738355,63.6059311 ,63.86661484,63.32544195,
 62.39619951,61.39585428,60.38289923,59.41878759,59.03283983,58.76609945,
 58.22902437,58.00202778,57.99981644])
gt = np.array([ 0.00000000e+00, 0.00144543e-01, -0.25350861e-01,-1.86800810e-01,
 -3.07744684e-01,-3.59180993e-01,-3.77348590e-01,-3.72525248e-01,
 -3.48337868e-01,-3.09750235e-01,-2.59949555e-01,-2.04962540e-01,
 -1.53002867e-01,-1.05901734e-01,-1.09320689e-01,-1.43446065e-01,
 -1.63029488e-01,-1.63964062e-01,-1.48341751e-01,-1.20057059e-01,
 -8.62989628e-02,-5.57645243e-02,-3.27318496e-02,-1.57607238e-02,
 -2.18544292e-03, 1.02667449e-02, 2.36685252e-02, 3.88964723e-02,
  5.55562386e-02, 7.23815512e-02, 8.81748222e-02, 1.02026467e-01,
  1.12860496e-01, 1.20288583e-01, 1.24616622e-01, 1.25655668e-01,
  1.24416154e-01, 1.21519003e-01, 1.16207240e-01, 1.08189687e-01,
  9.55328933e-02, 7.71224980e-02, 5.23599456e-02, 1.88346029e-02,
 -1.88222598e-05])
cxt = np.array([ 348.70849178,   5.42749529,1504.73021868,1512.44449052,1520.48520495,
 1527.51199302,1409.07619158,1448.46833839,1541.0981999 ,1565.94142857,
 1576.97087181,1583.14838104,1593.39717508,1600.062689  ,1605.07242044,
 1613.60180147,1626.44996964,1635.94886142,1644.76532286,1657.22375355,
 1669.49925719,1677.35302279,1681.94808672,1699.34966068,1704.15818987,
 1716.22755674,1722.32474427,1724.66380132,1739.51491287,1742.82318427,
 1751.65835602,1754.8078714 ,1755.25781044,1765.67152143,1356.18354415,
  588.81786175, 450.22430689, 222.43084563, 185.03740551, 222.97959035,
  178.91982503, 204.0335117 , 536.59170267,1494.47055444, 662.14940144])
czt = np.array([6.82570852e+02,1.10408797e+02,1.02584647e+03,1.02978791e+03,
 1.03148093e+03,1.03466449e+03,1.03357778e+03,1.03545187e+03,
 1.03530158e+03,1.03018900e+03,1.02886552e+03,1.02609756e+03,
 1.02126373e+03,9.43437762e+02,3.43372716e+02,5.77573887e+01,
 6.69591776e+00,5.44857789e-01,1.22203118e-01,5.55790792e-02,
 3.33448062e-02,3.13535046e-02,1.54927100e-02,4.60358204e-03,
 1.14624755e-02,1.34093560e-02,1.84637438e-02,7.91560156e-03,
 2.08351927e-02,1.37969246e-02,1.10118378e-02,2.42635791e-02,
 1.37742015e-02,1.53142047e-02,1.56055454e-02,5.52734261e-03,
 1.50743351e-02,3.57334690e-02,4.87012322e-02,6.39090164e-02,
 4.66395714e-02,4.41078249e-02,5.01000549e-02,2.29446771e+00,
 1.10823145e+02])
control_alpha_t = np.array([-1.06284673e-19,-0.15410789e-01,-0.00130602e-01, 1.15272803e-01,
  2.44174358e-01, 2.84348363e-01, 2.43321832e-01, 2.52277587e-01,
  2.58871349e-01, 2.26413170e-01, 1.84363048e-01, 1.40069036e-01,
  1.05703040e-01, 1.29556968e-01, 1.91330052e-01, 2.16176952e-01,
  2.20527656e-01, 2.12433097e-01, 1.96529822e-01, 1.72916606e-01,
  1.42645273e-01, 1.14184096e-01, 9.18413069e-02, 7.70276566e-02,
  6.55067628e-02, 5.85127664e-02, 5.34490836e-02, 5.00528569e-02,
  4.57690254e-02, 4.11776491e-02, 3.58262067e-02, 3.05571910e-02,
  2.40682404e-02, 1.88176122e-02, 1.44881379e-02, 1.35201554e-02,
  1.56952185e-02, 1.72768240e-02, 1.84737881e-02, 1.95023071e-02,
  1.61625802e-02, 1.40289104e-02, 7.83820945e-03,5.86265529e-03,
  1.52808160e-02])
cruisepower_t = np.array([5.94601208e+03,2.23039491e-02,4.67029231e+05,4.66637247e+05,
 4.66888440e+05,4.65939791e+05,3.59097997e+05,3.83468089e+05,
 4.54169129e+05,4.67672011e+05,4.68416681e+05,4.64780760e+05,
 4.65097444e+05,4.64138180e+05,4.63485062e+05,4.64276970e+05,
 4.67613674e+05,4.67249355e+05,4.65838522e+05,4.67168046e+05,
 4.68140367e+05,4.65786573e+05,4.61387520e+05,4.68087005e+05,
 4.64717685e+05,4.67673978e+05,4.66093887e+05,4.61967602e+05,
 4.68347187e+05,4.65875817e+05,4.68300724e+05,4.66596166e+05,
 4.63122710e+05,4.67817413e+05,2.11259656e+05,1.73807911e+04,
 7.84285496e+03,9.55243371e+02,5.55473918e+02,9.81260478e+02,
 5.11281437e+02,7.63792196e+02,1.39633576e+04,3.00790010e+05,
 2.60499391e+04])
liftpower_t = np.array([3.01206906e+04,1.27668115e+02,1.02967851e+05,1.03097750e+05,
 1.02779651e+05,1.03249919e+05,1.03182107e+05,1.03621201e+05,
 1.03516788e+05,1.02568246e+05,1.03075819e+05,1.03360303e+05,
 1.02968543e+05,8.11170351e+04,3.87332205e+03,1.83975180e+01,
 2.87553279e-02,1.55982087e-05,1.77647251e-07,1.69152164e-08,
 3.70560528e-09,3.12424293e-09,3.81626278e-10,1.01148525e-11,
 1.57572227e-10,2.54210446e-10,6.68184834e-10,5.29620037e-11,
 9.71423225e-10,2.83598711e-10,1.44934625e-10,1.55772572e-09,
 2.86324419e-10,3.95089084e-10,4.18903654e-10,1.85650733e-11,
 3.74612164e-10,4.96355574e-09,1.25012539e-08,2.81150535e-08,
 1.08941827e-08,9.18857952e-09,1.34573424e-08,1.29841617e-03,
 1.44884466e+02])
et = np.array([       0.        ,   54986.98985016,  317721.9871499 , 1292676.5721242 ,
  2266301.53216506, 3239682.24130141, 4171847.80010969, 5074970.07703193,
  6014495.14055409, 6982922.99225334, 7955294.49349646, 8928918.32568307,
  9900969.7974186 ,10803707.32329085,11341313.87549694,11699941.95246536,
 12052357.19466179,12405545.72916609,12757844.32548123,13109893.07784499,
 13462582.31049883,13814530.33449521,14163744.84456143,14513660.8094478 ,
 14864650.49720408,15215334.39656049,15566377.32181748,15915135.21014312,
 16264622.08563252,16615450.98801082,16966168.59448356,17317063.35234014,
 17665942.65970694,18015218.49629274,18261476.10064419,18328893.66184142,
 18337946.65568397,18340728.11694831,18341411.48720607,18342103.19992722,
 18342775.96288093,18343375.0239746 ,18347516.87651606,18434268.21767171,
 18532036.23467838])
splt = np.array([84.40687616,36.91476974,94.98542548,95.09578812,95.18249308,95.32758187,
 95.35941186,95.53247803,95.68031173,95.69337819,95.80058809,95.86002396,
 95.84822692,93.88307336,86.30331863,86.4475621 ,86.63543296,86.86747271,
 87.19721269,87.62353544,87.9957785 ,88.24113299,88.38400736,88.71174523,
 88.82208027,89.06050192,89.21874554,89.33414858,89.61366601,89.68832909,
 89.79617714,89.77336636,89.64298269,89.61961128,82.56823956,60.73173877,
 53.58146992,35.10006686,30.10269985,34.68491777,28.64989853,31.67965415,
 56.20435419,81.9996042 ,61.24711822])

# endregion


plt.rcParams['figure.figsize'] = [11, 2.5]
plt.figure(layout='constrained')

plt.plot(xe,np.ones(num)*300,color='k',linestyle='dashed',linewidth=1)
plt.scatter(xe,he,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(xt,ht,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['target altitude', 'minimum energy transition', 'minimum time transition'], frameon=False)

plt.plot(xe,he,color='blue')
plt.plot(xt,ht,color='red')
plt.ylim(0, 500)
plt.xlim(0,xe.max())
plt.xlabel('horizontal position (m)')
plt.ylabel('altitude (m)')
plt.show()


"""
plt.rcParams['figure.figsize'] = [11, 5]
plt.figure(layout='constrained')

plt.subplot(2,2,1)
plt.plot(te,np.ones(num)*58,color='k',linestyle='dashed',linewidth=1)
plt.scatter(te,ve,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,vt,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['target velocity', 'minimum energy transition', 'minimum time transition'], frameon=False)
plt.plot(te,ve,color='blue')
plt.plot(tt,vt,color='red')
plt.xlabel('time (s)')
plt.ylabel('velocity (m/s)')
plt.xlim(0,te.max())


plt.subplot(2,2,2)
plt.scatter(te,np.rad2deg(ge),color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,np.rad2deg(gt),color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy transition', 'minimum time transition'], frameon=False)
plt.plot(te,np.rad2deg(ge),color='blue')
plt.plot(tt,np.rad2deg(gt),color='red')
plt.xlabel('time (s)')
plt.ylabel('flight path angle ' r'($^{\circ}$)')
plt.xlim(0,te.max())


plt.subplot(2,2,3)
plt.scatter(te,np.rad2deg(control_alpha_e),color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,np.rad2deg(control_alpha_t),color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy transition', 'minimum time transition'], frameon=False)
plt.plot(te,np.rad2deg(control_alpha_e),color='blue')
plt.plot(tt,np.rad2deg(control_alpha_t),color='red')
plt.xlabel('time (s)')
plt.ylabel('angle of attack ' r'($^{\circ}$)')
plt.xlim(0,te.max())


plt.subplot(2,2,4)
plt.scatter(te,np.rad2deg(control_alpha_e + ge),color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,np.rad2deg(control_alpha_t + gt),color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy transition', 'minimum time transition'], frameon=False)
plt.plot(te,np.rad2deg(control_alpha_e + ge),color='blue')
plt.plot(tt,np.rad2deg(control_alpha_t + gt),color='red')
plt.xlabel('time (s)')
plt.ylabel('pitch angle ' r'($^{\circ}$)')
plt.xlim(0,te.max())

plt.show()
"""


"""
plt.rcParams['figure.figsize'] = [11, 5]
plt.figure(layout='constrained')

plt.subplot(2,2,1)
plt.scatter(te,cxe,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,cxt,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy transition', 'minimum time transition'], frameon=False)
plt.plot(te,cxe,color='blue')
plt.plot(tt,cxt,color='red')
plt.xlabel('time (s)')
plt.ylabel('cruise rotor speed (rpm)')

plt.subplot(2,2,2)
plt.scatter(te,cze,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,czt,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy transition', 'minimum time transition'], frameon=False)
plt.plot(te,cze,color='blue')
plt.plot(tt,czt,color='red')
plt.xlabel('time (s)')
plt.ylabel('lift rotor speed (rpm)')

plt.subplot(2,2,3)
plt.scatter(te,ee/1E6,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,et/1E6,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy transition', 'minimum time transition'], frameon=False)
plt.plot(te,ee/1E6,color='blue')
plt.plot(tt,et/1E6,color='red')
plt.xlabel('time (s)')
plt.ylabel('energy (MJ)')

plt.subplot(2,2,4)
plt.scatter(te,sple,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,splt,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy transition', 'minimum time transition'], frameon=False)
plt.plot(te,sple,color='blue')
plt.plot(tt,splt,color='red')
plt.xlabel('time (s)')
plt.ylabel('sound pressure level (db)')


plt.show()
"""