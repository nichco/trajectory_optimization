import numpy as np


# aircraft and mission parameter definitions
options = {} # aircraft and mission parameter dictionary

# aircraft data
options['mass'] = 3000 # 2000 # (kg)
options['wing_area'] = 19.6 # (m^2)
options['max_cruise_power'] = 468300 # (w)
options['max_lift_power'] = 103652 # (w)
options['cruise_rotor_diameter'] = 2.6 # (m)
options['lift_rotor_diameter'] = 2.4 # (m)
options['num_lift_rotors'] = 8
options['num_cruise_blades'] = 3
options['num_lift_blades'] = 2
options['cruise_mac'] = 0.15 # (m)
options['lift_mac'] = 0.15 # (m)
options['c_sigma'] = 0.19
options['l_sigma'] = 0.095
options['energy_scale'] = 0.0001 # scale energy for plotting

# mission parameters
options['gravity'] = 9.81 # (m/s^2)
options['v_0'] = 4.0 # 5 (m/s)
options['gamma_0'] = 0 # (rad)
options['h_0'] = 0 # (m)
options['min_h'] = -0.1 # (m)
options['x_0'] = 0 # (m)
options['alpha_0'] = 0 # (rad)
options['h_f'] = 300 # (m)
options['v_f'] = 58 # 43 (m/s)
options['vne'] = 65 # (m/s)
options['x_lim'] = 5000 # (m)
options['theta_0'] = 0.0 # (rad)
options['gamma_f'] = 0.0 # (rad)
options['max_g'] = 0.5 # (g)

# set the initial integrator timestep
options['dt'] = 1.28468183 #2.90903366 # 3.5


# initial control inputs
"""
options['control_x_i'] = np.ones(30)*2300
options['control_z_i'] = np.linspace(800, 100, 30)
options['control_alpha_i'] = np.linspace(0.7, 0, 30)
"""
"""
print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""


# min e seed new
options['control_x_i'] = np.array([   7.4652232 ,1053.39685397,1513.859881  ,1505.80179453,1244.43120418,
 1344.20415533,1419.77359465,1531.69100204,1534.65095566,1569.26525462,
 1573.26969286,1627.42871788,1412.48907528,1651.13343152,1605.40267459,
 1656.7024041 ,1683.14868136,1664.50154668,1651.73562387,1646.2042176 ,
 1638.23212604,1629.59647396,1625.45881535,1623.71500872,1620.99734397,
 1617.35533761,1611.38525589,1604.96660356,1600.40682248,1598.96797655,
 1599.93568154,1601.71910698,1602.08834331,1599.21321039,1591.16694426,
 1576.09259806,1538.4994316 ,1446.07879462,1381.46244963, 665.09267504])
options['control_z_i'] = np.array([1.95928220e+02,1.02271015e+03,1.02583869e+03,1.02767903e+03,
 1.02707436e+03,9.45279337e+02,9.56969243e+02,5.57067359e+02,
 4.17455429e+02,1.25997797e+02,2.78637048e+01,5.01863244e+00,
 6.89109150e-01,6.94109340e-02,6.29409660e-03,1.52204239e-03,
 1.02706382e-03,7.94094734e-04,6.69788310e-04,5.71505384e-04,
 5.26361499e-04,4.97351373e-04,4.99845212e-04,5.06696943e-04,
 5.11545106e-04,5.14308459e-04,5.14127800e-04,5.11567580e-04,
 5.08221405e-04,5.04010965e-04,5.03387338e-04,5.13534017e-04,
 5.52906578e-04,6.50381281e-04,8.49073925e-04,1.20644665e-03,
 1.63469051e-03,1.42560196e-03,1.31846010e-04,6.19332070e-05])
options['control_alpha_i'] = np.array([-0.05603546, 0.16487471, 0.27577093, 0.30642353, 0.31494961, 0.28572825,
  0.1814596 , 0.10095894, 0.14910051, 0.20663184, 0.23136949, 0.21736228,
  0.17144696, 0.12152611, 0.0944398 , 0.07404672, 0.06534425, 0.06105922,
  0.05543256, 0.05230396, 0.04843319, 0.03299982, 0.03067707, 0.03097791,
  0.0303227 , 0.02932782, 0.0283048 , 0.02692215, 0.02635882, 0.02611583,
  0.02680822, 0.02773748, 0.02927251, 0.0314274 , 0.0341889 , 0.0361423 ,
  0.02849021, 0.0104689 ,-0.07032413, 0.03653923])


"""
# min e seed (nominal)
options['control_x_i'] = np.array([1.47855031e-15,2.50470577e+02,1.56047951e+03,1.54602870e+03,
 1.18254133e+03,1.15148779e+03,1.08226472e+03,1.06061702e+03,
 1.04237249e+03,1.03502324e+03,1.03164771e+03,1.03156371e+03,
 1.03218558e+03,1.03629692e+03,1.03481931e+03,1.04723080e+03,
 1.04216775e+03,1.04570747e+03,1.04613593e+03,1.04693095e+03,
 1.04785350e+03,1.04863823e+03,1.04950639e+03,1.05032760e+03,
 1.05118870e+03,1.05205102e+03,1.05291187e+03,1.05364504e+03,
 1.05465023e+03,1.05539487e+03,1.05624950e+03,1.05718247e+03,
 1.05794571e+03,1.05870443e+03,1.06002567e+03,1.06053371e+03,
 1.06017716e+03,1.04807614e+03,1.00207247e+03,9.36016407e+02])
options['control_z_i'] = np.array([9.32201132e+02,7.68225214e+02,1.02776660e+03,6.32744588e+02,
 2.88034635e+02,2.35413135e+02,1.62301078e+02,7.02325290e+01,
 0.00000000e+00,3.19059568e-03,5.70548583e-03,1.89369080e-04,
 1.39318668e-03,5.03293468e-04,4.35137170e-04,7.72917245e-04,
 3.92763945e-04,4.53820702e-04,4.27047731e-04,4.44222146e-04,
 4.39462749e-04,4.43954202e-04,4.46175223e-04,4.48897304e-04,
 4.50883895e-04,4.52379153e-04,4.54867841e-04,4.58387355e-04,
 4.60284546e-04,4.60813039e-04,4.66497505e-04,4.66642724e-04,
 4.69830355e-04,4.71493517e-04,4.77024341e-04,4.75439890e-04,
 7.33346115e-04,1.18332465e-03,4.43222087e-04,0.00000000e+00])
options['control_alpha_i'] = np.array([ 8.51785733e-23, 1.57079633e+00, 2.84553121e-01, 1.64025297e-01,
  1.19794358e-01, 1.04622789e-01, 8.68016900e-02, 7.45562613e-02,
  6.25764140e-02, 5.17703598e-02, 4.23677829e-02, 3.41640734e-02,
  2.61828862e-02, 2.10738133e-02, 9.59328805e-03, 2.62518607e-02,
  6.26458766e-03, 9.18137422e-03, 7.84918763e-03, 8.64875976e-03,
  8.46212714e-03, 8.66907695e-03, 8.78466708e-03, 8.84180799e-03,
  9.01439034e-03, 9.10643512e-03, 9.18418746e-03, 9.31414258e-03,
  9.47230412e-03, 9.49110087e-03, 9.68236549e-03, 9.75153971e-03,
  9.88842002e-03, 9.94810972e-03, 1.01557764e-02, 1.04353727e-02,
  2.35793211e-02, 3.76341876e-02, 1.95703798e-02,-4.29344164e-02])
"""