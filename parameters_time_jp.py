import numpy as np


# aircraft and mission parameter definitions
options = {} # aircraft and mission parameter dictionary

# aircraft data
options['mass'] = 3000 # 2000 # (kg)
options['wing_area'] = 19.6 # (m^2)
options['max_cruise_power'] = 468300.0 # (w)
options['max_lift_power'] = 103652.0 # 103652(w)
options['cruise_rotor_diameter'] = 2.6 # (m)
options['lift_rotor_diameter'] = 2.4 # (m)
options['num_lift_rotors'] = 8
options['num_cruise_blades'] = 3
options['num_lift_blades'] = 2
options['cruise_mac'] = 0.15 # (m)
options['lift_mac'] = 0.15 # (m)
options['c_sigma'] = 0.19
options['l_sigma'] = 0.095
options['energy_scale'] = 0.0001 # scale energy for plotting

# mission parameters
options['gravity'] = 9.81 # (m/s^2)
options['v_0'] = 1.5 # 4 (m/s)
options['gamma_0'] = 0 # (rad)
options['h_0'] = 300 # (m)
options['min_h'] = 0.0 # 299.9 (m)
options['x_0'] = 0 # (m)
options['alpha_0'] = 0 # (rad)
options['h_f'] = 300 # (m)
options['v_f'] = 58 # 43 (m/s)
options['vne'] = 70 # (m/s)
options['x_lim'] = 5000 # (m)
options['theta_0'] = 0 # (rad)
options['gamma_f'] = 0 # (rad)
options['max_g'] = 0.5 # (g)
options['max_dgamma'] = 1.5 # (rad/s)

# set the initial integrator timestep
options['dt'] = 1.14171522 #1.78119483


# initial control inputs
"""
options['control_x_i'] = np.ones(30)*2300
options['control_z_i'] = np.linspace(800, 100, 30)
options['control_alpha_i'] = np.linspace(0.7, 0, 30)
"""
"""
print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""


# min dt seed (dtheta)
options['control_x_i'] = np.array([   3.23005036, 393.20259952,1516.56007184,1328.30484229, 606.99205513,
   59.75123845,  19.86985909, 309.05225085, 873.66399924,1309.56057783,
 1375.92070365,1349.69237123,1396.551429  ,1468.25497716,1525.76699341,
 1548.29235754,1542.27374289,1618.07916233,1718.44126382,1734.74822217,
 1714.88091704,1623.51745404,1520.76663945,1386.87044219,1276.94612574,
 1175.76892409,1048.68767743, 909.29489933, 747.26939039, 557.83836957,
  436.46045223, 345.06688873, 256.63618955, 188.88603595, 113.53427759,
   14.60234042,  53.75394637,   5.85656088,  14.71211943,  27.28358437,
   16.04732496,  14.29541195,   5.10933758, 149.37494095, 657.21086154])
options['control_z_i'] = np.array([8.93303875e+02,6.67118030e+01,1.02806674e+03,1.03328582e+03,
 1.03622391e+03,1.03821950e+03,1.03685816e+03,1.00637832e+03,
 1.02443152e+03,9.29537728e+02,3.21242629e+02,1.96927157e+02,
 1.73657017e+02,5.16509703e+01,1.38814038e+01,1.83301173e+00,
 2.56053749e-01,9.89155984e-02,4.30849392e-02,2.50559140e-02,
 1.71060602e-02,7.21177685e-03,1.00076891e-03,1.79697299e-03,
 6.23259843e-03,4.80316191e-03,7.98855322e-03,3.19614628e-03,
 1.19068980e-02,6.19211486e-03,4.20526221e-03,1.18214437e-02,
 4.48739667e-03,5.85551250e-03,6.90716084e-03,1.49022837e-03,
 4.69132069e-03,1.31924386e-02,1.81926408e-02,2.79997643e-02,
 1.93481385e-02,2.43986442e-02,1.13382825e-02,7.18759834e-05,
 1.04466817e+02])
options['control_alpha_i'] = np.array([-2.08168950e-19,-7.84412532e-03,-9.91311887e-02, 1.83042691e-01,
  2.66020802e-01, 3.04551405e-01, 2.83530250e-01, 2.19639787e-01,
  1.25880435e-01, 6.60727054e-02, 1.11575415e-01, 1.61193536e-01,
  1.64102078e-01, 1.43132798e-01, 1.14778597e-01, 8.99160225e-02,
  7.14644878e-02, 5.74043951e-02, 4.51594407e-02, 3.41219191e-02,
  2.45839324e-02, 1.68346919e-02, 1.10273805e-02, 6.83184419e-03,
  4.06418374e-03, 2.29364240e-03, 1.24885119e-03, 9.62164987e-04,
  1.32788838e-03, 2.30349582e-03, 3.93434372e-03, 5.86208053e-03,
  7.92848001e-03, 1.02280293e-02, 1.26194700e-02, 1.50023313e-02,
  1.75259740e-02, 2.00167336e-02, 2.25365766e-02, 2.49910226e-02,
  2.66313222e-02, 2.92896361e-02, 2.97144656e-02, 3.28432298e-02,
  3.54242444e-02])

"""
# min e seed (no dgamma)
options['control_x_i'] = np.array([2.43209089e+01,7.47367962e-14,1.33712622e+03,1.21176390e+03,
 1.59086245e+03,1.60752999e+03,1.38396312e+03,1.28468793e+03,
 1.19929599e+03,1.14596381e+03,1.10550707e+03,1.07275411e+03,
 1.04464066e+03,1.01952002e+03,9.96467657e+02,9.74756602e+02,
 9.53992602e+02,9.34260826e+02,9.15751968e+02,8.98382194e+02,
 8.82045778e+02,8.66555229e+02,8.51920953e+02,8.38111866e+02,
 8.24840072e+02,8.12054414e+02,7.99719323e+02,7.87765959e+02,
 7.76192858e+02,7.65000668e+02,7.54031278e+02,7.43264821e+02,
 7.32709409e+02,7.22343245e+02,7.12153792e+02,7.02180870e+02,
 6.92522050e+02,6.82928715e+02,6.73370254e+02,6.63671124e+02,
 6.54614483e+02,6.45283754e+02,6.36248797e+02,6.27118648e+02,
 6.18990135e+02])
options['control_z_i'] = np.array([1.03003651e+03,4.74248851e-15,1.01000621e+03,1.04759592e+03,
 9.31375716e+02,6.20909785e+02,4.74475762e+02,3.69113114e+02,
 3.06188350e+02,2.61526735e+02,2.17285278e+02,1.97697767e+02,
 1.78055007e+02,1.55525758e+02,1.28814727e+02,9.20615331e+01,
 5.10918711e+01,2.32732408e+01,5.09573869e+00,1.09323117e+00,
 4.01424538e-01,3.15271400e-02,9.45806509e-03,1.59785872e-03,
 8.41982307e-03,1.88815790e-02,2.54970538e-02,1.54686392e-02,
 2.81996785e-03,9.99330690e-04,9.25977370e-04,8.56230914e-04,
 8.11096398e-04,7.69387888e-04,7.32146893e-04,6.99848155e-04,
 6.71705844e-04,6.27907015e-04,6.22582479e-04,6.07262874e-04,
 5.55057009e-04,5.70859871e-04,5.53423762e-04,5.21706763e-04,
 5.83825243e-04])
options['control_alpha_i'] = np.array([-7.30768585e-22, 3.80342478e-01, 4.72244778e-01, 5.23168285e-01,
  2.24610892e-01, 1.72824740e-01, 1.52164006e-01, 1.36800245e-01,
  1.22761511e-01, 1.10857898e-01, 1.01905090e-01, 9.36105756e-02,
  8.66268055e-02, 8.05794295e-02, 7.57445426e-02, 7.17796892e-02,
  6.80113085e-02, 6.43744970e-02, 6.09758357e-02, 5.79601704e-02,
  5.52246767e-02, 5.27483970e-02, 5.06252067e-02, 4.84704923e-02,
  4.65602270e-02, 4.51179912e-02, 4.37296306e-02, 4.23770942e-02,
  4.11548426e-02, 4.01450365e-02, 3.92185250e-02, 3.84309467e-02,
  3.77403614e-02, 3.71552557e-02, 3.67076918e-02, 3.62449619e-02,
  3.59812790e-02, 3.57801248e-02, 3.56799240e-02, 3.56919235e-02,
  3.56194446e-02, 3.58942166e-02, 3.61532937e-02, 3.46399776e-02,
  3.94670144e-02])
  """