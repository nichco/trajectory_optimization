import numpy as np


# aircraft and mission parameter definitions
options = {} # aircraft and mission parameter dictionary

# aircraft data
options['mass'] = 2500 # (kg)
options['wing_area'] = 19.6 # 19.6(m^2)
options['max_cruise_power'] = 468300 # (w)
options['max_lift_power'] = 103652 # (w)
options['cruise_rotor_diameter'] = 2.6 # 2.6(m)
options['lift_rotor_diameter'] = 2.4 # 2.4(m)
options['num_lift_rotors'] = 8
options['num_cruise_blades'] = 3
options['num_lift_blades'] = 2
options['cruise_mac'] = 0.15 # (m)
options['lift_mac'] = 0.15 # (m)
options['c_sigma'] = 0.19
options['l_sigma'] = 0.095
options['energy_scale'] = 0.0001 # scale energy for plotting

# mission parameters
options['gravity'] = 9.81 # (m/s^2)
options['v_0'] = 5.0 # 5 (m/s)
options['gamma_0'] = 0 # (rad)
options['h_0'] = 0 # (m)
options['min_h'] = -0.1 # (m)
options['x_0'] = 0 # (m)
options['alpha_0'] = 0 # (rad)
options['h_f'] = 300 # (m)
options['v_f'] = 58 # 43 (m/s)
options['vne'] = 65 # (m/s)
options['x_lim'] = 5000 # (m)
options['theta_0'] = 0 # (rad)
options['gamma_f'] = 0 # (rad)

# set the initial integrator timestep
options['dt'] = 1.05503061


# initial control inputs
"""
options['control_x_i'] = np.ones(30)*2300
options['control_z_i'] = np.linspace(800, 100, 30)
options['control_alpha_i'] = np.linspace(0.7, 0, 30)
"""
"""
print(np.array2string(sim['control_x'],separator=','))
print(np.array2string(sim['control_z'],separator=','))
print(np.array2string(sim['control_alpha'],separator=','))
"""


# min dt seed (nominal) (converges from here)
options['control_x_i'] = np.array([1489.85470705,1508.78722672,1505.72310218,1519.17530258,1580.56015856,
 1593.60669493,1608.79074087,1627.11248591,1642.19629393,1662.10844577,
 1677.67594668,1694.69796275,1710.98227054,1723.63317189,1745.6109998 ,
 1759.02209465,1766.12697308,1769.23310006,1772.37654354,1774.29971667,
 1775.44673689,1775.92173163,1774.85995776,1767.61689834,1756.28270895,
 1714.6326432 ,1738.87419935,1725.40844861,1723.29594236,1730.67888234])
options['control_z_i'] = np.array([1.02466019e+03,1.03313194e+03,1.05573934e+03,1.06448527e+03,
 8.99224532e+02,1.66524671e-12,4.82754492e+02,5.12641828e+02,
 3.87987994e+02,2.47407719e+02,2.70487054e+02,6.84160824e+01,
 1.17558259e+01,3.78386902e+01,2.77708136e+02,2.16820436e+02,
 2.74331716e+02,8.28226111e+00,1.76020415e-16,4.14472357e-16,
 1.16840800e-14,1.84047713e+02,1.44344933e+02,2.86979223e+02,
 2.15099815e+01,2.50823965e-02,1.31940434e-04,1.53565921e-03,
 2.45175512e-06,9.13433186e-05])
options['control_alpha_i'] = np.array([ 4.14353673e-01, 5.56789299e-01, 9.79380836e-01, 9.13417519e-01,
  2.05679263e-01,-2.79104906e-02, 1.16609305e-01, 1.10738079e-01,
  8.15062766e-02, 4.53650080e-02, 4.92552094e-02, 1.97877992e-02,
  2.08846185e-02,-1.54303699e-02, 4.00157733e-02, 2.70382036e-02,
  3.80759350e-02,-1.89089854e-02,-6.68820551e-03,-1.19356034e-02,
 -2.07616221e-02, 1.46864876e-02, 2.30230608e-03, 4.27224320e-02,
 -8.24705633e-03,-6.19775124e-04,-1.67542255e-02,-4.09786842e-02,
 -6.80266452e-02,-9.80587721e-02])


"""
# min e seed (nominal)
options['control_x_i'] = np.array([2.83750361e-16,2.50327847e+02,1.56048322e+03,1.54607247e+03,
 1.18247178e+03,1.15145795e+03,1.08224617e+03,1.06062299e+03,
 1.04238537e+03,1.03496031e+03,1.03164408e+03,1.03129258e+03,
 1.03243549e+03,1.03550668e+03,1.03599478e+03,1.04546735e+03,
 1.04303554e+03,1.04540663e+03,1.04596552e+03,1.04695216e+03,
 1.04768643e+03,1.04861572e+03,1.04941861e+03,1.05018888e+03,
 1.05113153e+03,1.05196055e+03,1.05280133e+03,1.05370428e+03,
 1.05438216e+03,1.05550744e+03,1.05597111e+03,1.05720842e+03,
 1.05795141e+03,1.05836949e+03,1.06021851e+03,1.06041882e+03,
 1.05876918e+03,1.05178939e+03,9.97802773e+02,9.43131047e+02])
options['control_z_i'] = np.array([9.32216388e+02,7.68226146e+02,1.02776440e+03,6.32717730e+02,
 2.88035042e+02,2.35376227e+02,1.62230518e+02,7.09247055e+01,
 3.21672446e-15,1.95592623e-03,1.45293587e-03,8.33800687e-04,
 7.32344474e-04,5.97153782e-04,4.56609163e-04,7.21651139e-04,
 4.28149836e-04,4.37072814e-04,4.34941956e-04,4.40542343e-04,
 4.40395972e-04,4.44839290e-04,4.45492587e-04,4.48511739e-04,
 4.51173621e-04,4.52394470e-04,4.55562685e-04,4.58513270e-04,
 4.58119413e-04,4.66208463e-04,4.60607251e-04,4.72288171e-04,
 4.68481265e-04,4.64363882e-04,5.01126882e-04,4.65021534e-04,
 6.96339124e-04,1.31352852e-03,3.94257166e-04,3.08148061e-05])
options['control_alpha_i'] = np.array([-1.29796006e-22, 1.57079633e+00, 2.84516303e-01, 1.64010065e-01,
  1.19775673e-01, 1.04617838e-01, 8.67996203e-02, 7.45257723e-02,
  6.25805514e-02, 5.17567908e-02, 4.23671535e-02, 3.41410759e-02,
  2.62563034e-02, 2.08119227e-02, 1.05309167e-02, 2.48736092e-02,
  7.42655953e-03, 8.61526461e-03, 8.13428697e-03, 8.52283142e-03,
  8.53719357e-03, 8.60316899e-03, 8.81405915e-03, 8.88790052e-03,
  8.92749251e-03, 9.14630950e-03, 9.19713212e-03, 9.34812655e-03,
  9.32949234e-03, 9.63554829e-03, 9.66987515e-03, 9.67168028e-03,
  9.92557367e-03, 1.00538037e-02, 9.81358774e-03, 1.11607873e-02,
  2.25393786e-02, 3.88740783e-02, 1.84726982e-02,-4.19699591e-02])
"""


