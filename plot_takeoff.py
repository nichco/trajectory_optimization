import numpy as np
import matplotlib.pyplot as plt
plt.rcParams["font.family"] = "Times New Roman"
plt.rcParams.update({'font.size': 12})



num = 40
dte = 2.15999432
dtt = 1.23399272
te = np.linspace(0,num*dte,num)
tt = np.linspace(0,num*dtt,num)

# region energy

he = np.array([ 0.00000000e+00, 1.00465421e-01, 2.91429753e-01, 2.68265655e-01,
  1.25121910e-01, 2.11037956e-00,-7.63810105e-02, 2.56629596e-02,
 -1.75880587e-03, 6.74321505e-02, 1.08059603e+00, 2.99092668e-01,
  1.67749091e+00, 1.43158600e+00, 5.79347827e-01, 1.14486490e+00,
  2.85455578e+00, 5.71141382e+00, 1.03835484e+01, 1.86745750e+01,
  2.90301909e+01, 3.97577858e+01, 5.12127930e+01, 6.35775988e+01,
  7.65272815e+01, 8.93241064e+01, 1.01196653e+02, 1.12187382e+02,
  1.23153731e+02, 1.34914010e+02, 1.47748342e+02, 1.61678494e+02,
  1.76955911e+02, 1.94130959e+02, 2.13424938e+02, 2.34302675e+02,
  2.56129275e+02, 2.78161894e+02, 2.96304751e+02, 3.00000130e+02])
xe = np.array([   0.        ,   4.89951728,  32.10064107,  81.10156118, 148.44956297,
  232.35266733, 327.37779714, 428.79538828, 535.7400446 , 648.45402023,
  765.97374928, 888.46666171,1015.33140675,1146.32231551,1281.70526408,
 1420.97664035,1563.50794698,1708.85387063,1856.46809327,2005.22845265,
 2154.29215274,2303.52445503,2452.7430241 ,2601.65539699,2750.06247255,
 2897.99384971,3045.73805261,3193.59858447,3341.62210468,3489.57737297,
 3637.12324973,3783.91213754,3929.51198702,4073.26339387,4214.3355308 ,
 4351.9908783 ,4485.56733786,4614.46856635,4739.14097655,4864.04849314])
ve = np.array([ 0.625     ,8.42058077,18.38106233,27.60666531,35.92544152,42.03068686,
 45.66115888,48.21300789,50.8697331 ,53.36933268,55.51126314,57.83610284,
 59.64056464,61.67494316,63.63760088,65.27124473,66.68121394,67.89130532,
 68.77333536,69.11778309,69.22591392,69.29692318,69.25372605,69.08542675,
 68.84818318,68.6562199 ,68.61135083,68.68325669,68.73744552,68.66646039,
 68.44170128,68.05647187,67.45560028,66.5361912 ,65.2466771 ,63.61508238,
 61.65970775,59.35496856,57.77325695,57.99958274])
ge = np.array([ 0.00000000e+00, 0.57154404e+00, 2.28089032e-01,-2.05943377e-01,
 -1.82613965e-01,-6.53007468e-02,-8.29889120e-04, 1.42306396e-03,
 -2.24766874e-03, 7.84141849e-03,-6.66505318e-04, 1.36385974e-03,
  8.46849101e-03,-7.85625816e-03,-1.91272972e-03, 8.60496374e-03,
  1.56416730e-02, 2.36821898e-02, 4.32287318e-02, 6.52295673e-02,
  7.11627494e-02, 7.35195955e-02, 7.98306641e-02, 8.55476261e-02,
  8.76818781e-02, 8.38035445e-02, 7.65856621e-02, 7.29447224e-02,
  7.59668761e-02, 8.29304562e-02, 9.05585493e-02, 9.89766685e-02,
  1.10977861e-01, 1.27466595e-01, 1.43761316e-01, 1.56951922e-01,
  1.66040189e-01, 1.72671281e-01, 8.70552774e-02, 7.48960761e-06])
cxe = np.array([1478.49611216,1480.98178811,1529.61277261,1573.22831274,1605.33023483,
 1630.98581331,1325.68386461,1287.46910033,1339.86743696,1263.6562584 ,
 1251.32535487,1241.39490916,1212.17821459,1204.65166484,1199.24128993,
 1186.5037763 ,1190.63105459,1193.85537146,1195.69973551,1196.65021426,
 1199.04350553,1200.86596124,1201.85349357,1202.13528782,1202.52075349,
 1203.72357223,1205.51812862,1207.28826333,1208.69326616,1209.64616944,
 1209.92608225,1208.74462395,1204.64875896,1195.3825217 ,1178.85084849,
 1149.08723753,1106.09261556,1024.90212253,1037.64371144, 665.06722568])
cze = np.array([1.12996275e+03,1.03291990e+03,1.10774032e+03,7.87463530e+02,
 7.38730531e+02,4.98149648e+02,9.42650213e+01,9.09921098e-14,
 1.03100208e+01,5.81990551e-01,1.00975439e-03,1.82794555e-03,
 1.99846882e-04,4.84163052e-04,4.99547738e-04,4.22227666e-04,
 5.72542284e-04,5.28382585e-04,6.57981121e-04,6.30165102e-04,
 6.65704540e-04,6.72547897e-04,6.78140703e-04,6.78543610e-04,
 6.77427651e-04,6.73575235e-04,6.72091758e-04,6.70816729e-04,
 6.61888690e-04,6.42643649e-04,6.17300104e-04,5.90248487e-04,
 5.63600334e-04,5.37170528e-04,5.04523290e-04,4.80961544e-04,
 4.22227264e-04,4.69403469e-04,5.58653981e-04,0.00000000e+00])
control_alpha_e = np.array([ 2.00489587e-19,-0.68948540e+00,-3.92507868e-01, 1.21928731e-01,
  1.60088633e-01, 1.67457851e-01, 1.06928339e-01, 8.45766132e-02,
  6.63405209e-02, 6.24369994e-02, 2.96994876e-02, 4.77539534e-02,
  1.58138088e-02, 1.69457624e-02, 1.57000891e-02, 7.65332356e-03,
  3.86478765e-03, 4.24245210e-04, 4.71990672e-03,-1.54203055e-03,
 -6.05797343e-03,-4.02878599e-03,-3.63357340e-03,-3.68309723e-03,
 -4.50940955e-03,-5.88538858e-03,-5.57637775e-03,-3.51755127e-03,
 -1.69293155e-03,-9.49276183e-04,-3.49339094e-04, 1.36294799e-03,
  4.75339048e-03, 8.62854176e-03, 1.13839880e-02, 1.61076942e-02,
  2.12016572e-02, 3.06008921e-02,-2.59336189e-02, 3.65392444e-02])
cruisepower_e = np.array([468300.00000264,468300.04432837,468300.5060705 ,468301.60645774,
 468301.6881171 ,468301.07664535,242605.50712195,216909.15152919,
 238352.15139653,195264.39119613,185424.22372212,177085.66396503,
 161675.45449425,155389.13528262,150168.36277461,142868.2478931 ,
 142121.29890282,141321.47820469,140513.19149078,140184.84730505,
 140718.60893626,141098.7632603 ,141360.65898939,141562.92864106,
 141905.29752985,142467.58471924,143014.41229704,143374.41508578,
 143634.40558628,143926.74881153,144214.3474591 ,144223.69856007,
 143516.93580463,141439.80034334,137332.10307323,129197.62518985,
 117402.29604588, 95472.47039103,100479.61736601, 26397.28549803])
liftpower_e = np.array([1.40652002e+05,1.17468606e+05,1.40651892e+05,4.79441529e+04,
 3.98871696e+04,1.23792075e+04,8.60922388e+01,7.85227777e-44,
 1.15839680e-01,2.10459888e-05,1.11878573e-13,6.66203190e-13,
 8.85544224e-16,1.26963467e-14,1.40710791e-14,8.57966588e-15,
 2.15515187e-14,1.70481588e-14,3.29949557e-14,2.90677566e-14,
 3.43019974e-14,3.53228138e-14,3.61595419e-14,3.61530144e-14,
 3.58998827e-14,3.52315412e-14,3.49484900e-14,3.47017366e-14,
 3.32880635e-14,3.04161081e-14,2.68909289e-14,2.34218157e-14,
 2.02819116e-14,1.74358772e-14,1.43229975e-14,1.22759930e-14,
 8.20509555e-15,1.11096467e-14,1.88896092e-14,0.00000000e+00])
ee = np.array([       0.        , 3427959.52538653, 6929533.20514014, 9675607.71043906,
 11576549.22675472,13115827.96133016,13995104.9885183 ,14530720.51849684,
 15060286.87461884,15562728.17667424,16004715.52791515,16424978.02446487,
 16817345.44430896,17184498.29283713,17537928.08044454,17876575.5381291 ,
 18205804.46979267,18533088.16072346,18858293.27176191,19182149.13197121,
 19506319.25983515,19831539.00179935,20157486.08929935,20483992.16836976,
 20811180.89424053,21139483.31541742,21469098.85673236,21799734.20347163,
 22131041.38257467,22462972.97936431,22795594.54354861,23128589.61842498,
 23460806.36110955,23789853.50467535,24111850.84616059,24419762.92419761,
 24704653.80652156,24950100.21337245,25176964.81573002,25310815.03241618])
sple = np.array([123.52708855,120.24616638,115.04964613,107.73556941,113.27152677,
 121.95898542,117.62259925,116.8321235 ,117.87220497,116.32917162,
 115.59315411,115.78030969,114.36549105,114.36003858,114.74307855,
 114.15709459,112.91262783,110.08055923,105.56641473,100.9694426 ,
  97.30775724, 94.74894782, 92.71339445, 90.95539733, 89.41780236,
  88.09590707, 87.02064623, 86.17619303, 85.46804022, 84.79584512,
  84.11819648, 83.43507803, 82.73881748, 81.95706922, 80.97581715,
  79.66973869, 78.00244603, 75.38959834, 73.34214186, 61.37285399])

# endregion


# region time

ht = np.array([ 0.00000000e+00, 0.89255164e+00, 1.77897323e+00, 1.27778106e-00,
  1.20524444e-01, 1.90456334e+00, 1.77821828e+00, 1.50828183e+00,
  1.25569907e+00, 1.30148273e+00, 5.28751765e-01,-7.10635921e-02,
 -2.72473974e-02,-2.52722983e-02, 3.26603878e-01, 2.31820932e+00,
  6.39774733e+00, 1.22548650e+01, 1.95518984e+01, 2.81120142e+01,
  3.78116805e+01, 4.85151423e+01, 6.00963550e+01, 7.24445098e+01,
  8.54851588e+01, 9.91567091e+01, 1.13385718e+02, 1.28103727e+02,
  1.43245409e+02, 1.58781080e+02, 1.74701897e+02, 1.90985380e+02,
  2.07552881e+02, 2.24200703e+02, 2.40674629e+02, 2.56725773e+02,
  2.72125179e+02, 2.86614359e+02, 2.97799841e+02, 2.99996916e+02])
xt = np.array([0.00000000e+00,2.04824402e+00,9.71550051e+00,2.37706615e+01,
 4.44659558e+01,7.16687394e+01,1.05312243e+02,1.44939026e+02,
 1.88733634e+02,2.35576187e+02,2.85706769e+02,3.39223386e+02,
 3.96087095e+02,4.56367293e+02,5.20046727e+02,5.86786660e+02,
 6.56080280e+02,7.27520783e+02,8.00800904e+02,8.75655632e+02,
 9.51843418e+02,1.02918151e+03,1.10751216e+03,1.18669441e+03,
 1.26660241e+03,1.34711853e+03,1.42813726e+03,1.50957360e+03,
 1.59135427e+03,1.67340223e+03,1.75564033e+03,1.83799917e+03,
 1.92031994e+03,2.00204301e+03,2.08255855e+03,2.16133761e+03,
 2.23793818e+03,2.31203097e+03,2.38397303e+03,2.45553618e+03])
vt = np.array([ 0.625     , 4.2551722 , 9.52651331,14.14937084,19.49880153,24.87404886,
 30.01074003,34.15309   ,36.72893487,39.2581741 ,42.0075091 ,44.72794074,
 47.45008549,50.24760936,52.91850108,55.24057964,57.21584527,58.92117911,
 60.40197404,61.67704132,62.77833537,63.74066962,64.57426999,65.29478866,
 65.91369236,66.4355778 ,66.87365415,67.2423074 ,67.54601311,67.78645332,
 67.96631055,68.09406588,67.90926834,67.17595029,65.94718955,64.29287759,
 62.29153041,60.03884177,58.26087846,58.0056176 ])
gt = np.array([ 0.00000000e+00, 0.46036036e+00, 4.38118457e-01, 5.37700100e-02,
 -9.13012340e-02,-1.26631255e-01,-1.12485241e-01,-3.90248967e-02,
  7.66482142e-03,-9.07780572e-03,-1.69471401e-02,-4.15536538e-03,
  1.81034680e-03,-1.51292329e-04, 1.52218796e-02, 4.46948053e-02,
  7.14133253e-02, 9.11695123e-02, 1.06869634e-01, 1.20537432e-01,
  1.32363453e-01, 1.42398845e-01, 1.50920977e-01, 1.58340387e-01,
  1.65095318e-01, 1.71147342e-01, 1.76446197e-01, 1.81016958e-01,
  1.85108082e-01, 1.89174014e-01, 1.93275023e-01, 1.96999873e-01,
  2.00007425e-01, 2.01659186e-01, 2.01696403e-01, 1.99986180e-01,
  1.96475359e-01, 1.88546862e-01, 9.13035561e-02,-5.47560890e-06])
cxt = np.array([1323.33325834,1487.54397584,1499.5516819 ,1523.16494705,1543.41797723,
 1563.69370464,1583.93761677,1599.15250464,1610.01187089,1619.62013909,
 1631.93483256,1646.15397114,1657.09630708,1668.80724604,1687.55879419,
 1701.34159777,1714.84606737,1722.9983317 ,1731.52882467,1734.51060302,
 1746.91256037,1755.23604885,1760.97841967,1767.67761945,1772.90480549,
 1775.19544533,1780.23959247,1784.00785796,1785.37672239,1787.36955409,
 1788.63784651,1792.02588529,1612.15125232,1409.92334057,1201.10645208,
  986.92645338, 777.71271526, 557.36918705, 422.13247415, 665.13184677])
czt = np.array([1.09769810e+03,1.03590313e+03,1.10333198e+03,1.10686815e+03,
 1.10775052e+03,1.10567034e+03,1.10229339e+03,1.10332400e+03,
 5.66345863e+02,1.85350066e+02,2.84879046e+01,2.09025881e+00,
 6.91945541e-02,2.08537140e-03,8.86285940e-04,7.92182751e-04,
 1.00553757e-03,9.63301091e-04,1.12619021e-03,1.12469560e-03,
 1.20357346e-03,1.24715186e-03,1.28982357e-03,1.31748598e-03,
 1.33168449e-03,1.33750961e-03,1.34572817e-03,1.35473227e-03,
 1.35409749e-03,1.33963486e-03,1.31615477e-03,1.28772663e-03,
 1.25798990e-03,1.23440688e-03,1.21535877e-03,1.21274355e-03,
 1.15907609e-03,1.11952811e-03,5.16881203e-04,1.19691360e-16])
control_alpha_t = np.array([ 1.19681112e-19,-0.51953723e+00,-6.21984528e-01,-2.26437914e-01,
 -7.78299946e-02,-2.83194746e-02,-1.48593368e-02, 5.37889166e-02,
  1.39954814e-01, 1.55049823e-01, 1.52997144e-01, 1.25742342e-01,
  8.45338544e-02, 7.24830847e-02, 7.28272625e-02, 6.22898257e-02,
  4.81229765e-02, 3.74884536e-02, 3.01443841e-02, 2.43780284e-02,
  1.92894677e-02, 1.50990028e-02, 1.15707757e-02, 8.87911431e-03,
  6.68296534e-03, 4.68867254e-03, 3.09247026e-03, 1.64969382e-03,
  7.68895130e-04, 2.19075095e-04,-2.33380102e-04,-8.87259828e-04,
 -9.16314758e-04, 4.65336899e-04, 3.35094942e-03, 7.77929629e-03,
  1.38757052e-02, 1.84983872e-02,0.10124711e-02, 3.65392036e-02])
cruisepower_t = np.array([335792.72244191,469022.87605976,467006.92872742,469426.80151171,
 469331.03085478,469233.02193247,469163.36859887,467681.2259519 ,
 469267.90325951,468601.91297509,468638.06687919,468978.45448031,
 465674.46470982,463350.53290682,467360.4510706 ,467964.8427053 ,
 469422.13976212,467570.17755312,466960.9728034 ,462738.76265721,
 466791.04727106,468146.02013386,467988.34924412,469091.66598344,
 469476.32727593,467978.49253672,469052.13535606,469440.61771345,
 468247.89566097,467855.33706701,467190.44068943,468441.16951683,
 341229.40266776,229759.46113669,143759.23929851, 81075.77791111,
  40470.25860495, 15230.25972924,  6754.79567521, 26403.39228402])
liftpower_t = np.array([1.28944337e+05,1.13397827e+05,1.35642998e+05,1.35653941e+05,
 1.35625491e+05,1.35519202e+05,1.35613552e+05,1.35607981e+05,
 1.81042851e+04,6.35751830e+02,2.32427878e+00,9.31406537e-04,
 3.44473175e-08,9.54857674e-13,7.39751226e-14,5.34347612e-14,
 1.10546899e-13,9.81240805e-14,1.58000237e-13,1.58374888e-13,
 1.95138435e-13,2.18088934e-13,2.42140859e-13,2.58802347e-13,
 2.67857717e-13,2.71847182e-13,2.77205473e-13,2.83015561e-13,
 2.82680968e-13,2.73662368e-13,2.59379194e-13,2.42746246e-13,
 2.25762220e-13,2.12146268e-13,2.00839161e-13,1.97486682e-13,
 1.70327359e-13,1.51588547e-13,1.52247479e-14,1.82457224e-52])
et = np.array([       0.        , 1803784.99940354, 3751421.84873989, 5822070.36769651,
  7891316.60240967, 9958116.23138651,12024001.88994146,14088904.302385  ,
 15395461.94795666,16090933.34739423,16718173.24468211,17342053.69726425,
 17963438.96959169,18580582.45246576,19198249.82142043,19818472.89907653,
 20439688.66682234,21060315.4167756 ,21679037.96322764,22294306.13055526,
 22909277.39537273,23527623.44422596,24146592.07829005,24766044.58849979,
 25386350.88155118,26005812.51412138,26624913.68619044,27244902.94801088,
 27864293.83782297,28482588.92448939,29100145.13854903,29718064.92469365,
 30249735.98247397,30623735.63127184,30867517.32067885,31013202.97951311,
 31091085.37951965,31125817.96107792,31139739.75883321,31159556.75455932])
splt = np.array([121.87554247,123.28292792,121.85778498,120.53112174,120.89160151,
 122.37529798,124.37875619,125.00695044,122.26201556,122.33440819,
 122.87615288,123.26490866,123.42166502,123.60085683,123.79299554,
 122.87073406,119.22891796,114.0062852 ,110.69374339,107.68476579,
 105.56445294,103.67106044,102.01062066,100.59123838, 99.32937171,
  98.16475579, 97.15702518, 96.22662772, 95.34850387, 94.5554811 ,
  93.81524998, 93.15444903, 89.74391843, 85.64021697, 80.88715575,
  75.22769482, 68.51879198, 59.33257195, 49.36602046, 61.37531662])

# endregion


plt.rcParams['figure.figsize'] = [11, 2.5]
plt.figure(layout='constrained')

plt.plot(xe,np.ones(num)*300,color='k',linestyle='dashed',linewidth=1)
plt.scatter(xe,he,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(xt,ht,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['target altitude', 'minimum energy takeoff', 'minimum time takeoff'], frameon=False)

plt.plot(xe,he,color='blue')
plt.plot(xt,ht,color='red')
plt.ylim(-10, 400)
plt.xlim(0,xe.max())
plt.xlabel('horizontal position (m)')
plt.ylabel('altitude (m)')
plt.savefig('hx_takeoff.png', dpi=1200, bbox_inches='tight')
plt.show()


"""
plt.rcParams['figure.figsize'] = [11, 5]
plt.figure(layout='constrained')

plt.subplot(2,2,1)
plt.plot(te,np.ones(num)*58,color='k',linestyle='dashed',linewidth=1)
plt.scatter(te,ve,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,vt,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['target velocity', 'minimum energy takeoff', 'minimum time takeoff'], frameon=False)
plt.plot(te,ve,color='blue')
plt.plot(tt,vt,color='red')
plt.xlabel('time (s)')
plt.ylabel('velocity (m/s)')
plt.xlim(0,te.max())


plt.subplot(2,2,2)
plt.scatter(te,np.rad2deg(ge),color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,np.rad2deg(gt),color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy takeoff', 'minimum time takeoff'], frameon=False)
plt.plot(te,np.rad2deg(ge),color='blue')
plt.plot(tt,np.rad2deg(gt),color='red')
plt.xlabel('time (s)')
plt.ylabel('flight path angle ' r'($^{\circ}$)')
plt.xlim(0,te.max())


plt.subplot(2,2,3)
plt.scatter(te,np.rad2deg(control_alpha_e),color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,np.rad2deg(control_alpha_t),color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy takeoff', 'minimum time takeoff'], frameon=False)
plt.plot(te,np.rad2deg(control_alpha_e),color='blue')
plt.plot(tt,np.rad2deg(control_alpha_t),color='red')
plt.xlabel('time (s)')
plt.ylabel('angle of attack ' r'($^{\circ}$)')
plt.xlim(0,te.max())


plt.subplot(2,2,4)
plt.scatter(te,np.rad2deg(control_alpha_e + ge),color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,np.rad2deg(control_alpha_t + gt),color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy takeoff', 'minimum time takeoff'], frameon=False)
plt.plot(te,np.rad2deg(control_alpha_e + ge),color='blue')
plt.plot(tt,np.rad2deg(control_alpha_t + gt),color='red')
plt.xlabel('time (s)')
plt.ylabel('pitch angle ' r'($^{\circ}$)')
plt.xlim(0,te.max())

plt.show()
"""


"""
plt.rcParams['figure.figsize'] = [11, 5]
plt.figure(layout='constrained')

plt.subplot(2,2,1)
plt.scatter(te,cxe,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,cxt,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy', 'minimum time'], frameon=False)
plt.plot(te,cxe,color='blue')
plt.plot(tt,cxt,color='red')
plt.xlabel('time (s)')
plt.ylabel('cruise rotor speed (rpm)')

plt.subplot(2,2,2)
plt.scatter(te,cze,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,czt,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy', 'minimum time'], frameon=False)
plt.plot(te,cze,color='blue')
plt.plot(tt,czt,color='red')
plt.xlabel('time (s)')
plt.ylabel('lift rotor speed (rpm)')

plt.subplot(2,2,3)
plt.scatter(te,ee/1E6,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,et/1E6,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy', 'minimum time'], frameon=False)
plt.plot(te,ee/1E6,color='blue')
plt.plot(tt,et/1E6,color='red')
plt.xlabel('time (s)')
plt.ylabel('energy (MJ)')

plt.subplot(2,2,4)
plt.scatter(te,sple,color='blue',marker='^',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.scatter(tt,splt,color='red',marker='o',alpha=0.3,linewidth=0.3, edgecolor='k')
plt.legend(['minimum energy', 'minimum time'], frameon=False)
plt.plot(te,sple,color='blue')
plt.plot(tt,splt,color='red')
plt.xlabel('time (s)')
plt.ylabel('sound pressure level (db)')


plt.show()
"""