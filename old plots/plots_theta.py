import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import make_interp_spline
plt.rcParams["font.family"] = "Times New Roman"
plt.rcParams.update({'font.size': 12})
# print(np.array2string(sim['x'],separator=','))

num=30

#region mindt15
# minimum time +-15deg theta
dtt15 = 1.55553774
et15 = 25736471.30697091
tt15 = np.linspace(0,num*dtt15,num)

xt15 = np.array([   0.        ,  11.40869981,  30.90315296,  58.58677942,  95.14337052,
  141.32953385, 196.34395901, 258.52176766, 328.21265877, 404.51782122,
  486.291487  , 572.70370867, 663.06083053, 756.81782253, 853.48590152,
  952.66430232,1053.92075851,1156.93056371,1261.51609542,1367.44987476,
 1474.50885127,1582.52442929,1691.34111519,1800.80194165,1910.76178042,
 2021.14375781,2131.83732992,2242.63469213,2353.24166505,2463.92071505])
ht15 = np.array([ 0.00000000e+00,-9.01385679e-02, 1.14642289e-01, 1.04376125e+00,
  1.03398422e+00, 2.13276131e-01, 7.79619608e-02, 2.33533088e-01,
  1.95842608e+00, 6.77044896e+00, 1.37271569e+01, 2.25602256e+01,
  3.28838270e+01, 4.43132066e+01, 5.67508948e+01, 6.99273018e+01,
  8.41184317e+01, 9.89038425e+01, 1.13922186e+02, 1.29403253e+02,
  1.45356842e+02, 1.61680681e+02, 1.78338472e+02, 1.95361309e+02,
  2.12738369e+02, 2.30307273e+02, 2.48053018e+02, 2.65881797e+02,
  2.83978602e+02, 3.00065180e+02])
vt15 = np.array([ 5.        , 9.85078924,15.18871572,20.52937519,26.5867365 ,32.7417063 ,
 37.70979286,42.38307411,47.12844733,51.05220924,54.38431612,57.22213105,
 59.64730969,61.74003763,63.52690417,65.07086113,66.34721321,67.43034198,
 68.39826671,69.22625808,69.9238842 ,70.51491261,71.0079529 ,71.40467671,
 71.71805453,71.98183716,72.13002329,72.13015972,71.95916996,71.88424237])
at15 = np.array([ 0.02363588,-0.01122727, 0.01100978, 0.04749881, 0.0954053 , 0.09268304,
  0.04158612, 0.03084285, 0.01847124,-0.00682751,-0.01537006,-0.02363553,
 -0.03019941,-0.03388366,-0.03766433,-0.03778307,-0.04029188,-0.04175379,
 -0.04125156,-0.0417529 ,-0.04218436,-0.04244542,-0.04250701,-0.04251777,
 -0.04308061,-0.04283945,-0.04366824,-0.04148838,-0.04664568,-0.05      ])
gt15 = np.array([ 0.        ,-0.00559735, 0.0298771 , 0.02220838,-0.01627355,-0.0124898 ,
  0.00152523, 0.00842682, 0.04408091, 0.07641367, 0.09364606, 0.10880692,
  0.11784296, 0.12499721, 0.12990633, 0.13553116, 0.14184318, 0.14256139,
  0.14348988, 0.14664605, 0.14904875, 0.15090887, 0.15298855, 0.15567201,
  0.15736971, 0.15858384, 0.15866287, 0.16228466, 0.15733982, 0.12808645])
#endregion


#region mindt20
# minimum time +-20deg theta
dtt20 = 1.22886741
et20 = 20605896.4387136
tt20 = np.linspace(0,num*dtt20,num)

xt20 = np.array([   0.        ,   9.08539683,  23.7350631 ,  43.85064194,  69.49526699,
  101.1586408 , 138.95932272, 182.41798557, 230.79969814, 283.52388255,
  339.95071405, 399.23910201, 460.80034852, 524.31467101, 589.52732718,
  656.15707965, 723.9524711 , 792.71053543, 862.34105413, 932.7735369 ,
 1003.93563685,1075.73384055,1148.0520025 ,1220.75687492,1293.78984676,
 1367.05608448,1440.49656186,1513.92303667,1587.31999929,1660.97345056])
ht20 = np.array([ 0.00000000e+00,-8.90986266e-02, 9.88334350e-02, 1.16366605e+00,
  1.79312324e+00, 1.16190437e+00, 6.63769471e-02, 9.55069162e-02,
  1.77988326e+00, 4.90679292e+00, 1.01563857e+01, 1.80808453e+01,
  2.79045093e+01, 3.89453705e+01, 5.09989770e+01, 6.40959624e+01,
  7.81838037e+01, 9.31014905e+01, 1.08489277e+02, 1.24218744e+02,
  1.40259662e+02, 1.56653959e+02, 1.73486049e+02, 1.90835647e+02,
  2.08524492e+02, 2.26579004e+02, 2.44930035e+02, 2.63788785e+02,
  2.82553982e+02, 3.00026417e+02])
vt20 = np.array([ 5.        , 9.68712306,14.19703825,18.58244069,23.26233586,28.30376404,
 33.16784448,37.46789425,41.25260844,44.63826978,47.50001516,49.77070487,
 51.63759209,53.24856305,54.64804623,55.83543317,56.82910221,57.65745535,
 58.38933479,59.05450966,59.65783309,60.18989678,60.63996319,60.99806984,
 61.28889827,61.51205359,61.67183464,61.6835576 ,61.61325376,61.62615488])
at20 = np.array([ 0.08908234,-0.00498839, 0.06019187, 0.08189627, 0.12813977, 0.15577886,
  0.13030906, 0.08071664, 0.04449489, 0.03463832, 0.02575825, 0.00517787,
 -0.00719508,-0.01389502,-0.0166487 ,-0.01960246,-0.0215498 ,-0.02472475,
 -0.02546137,-0.02614657,-0.02622063,-0.02632936,-0.02576037,-0.02759037,
 -0.02678658,-0.02820456,-0.02571842,-0.02898599,-0.03271531,-0.04252497])
gt20 = np.array([ 0.00000000e+00,-6.56111417e-03, 3.85959920e-02, 4.88760831e-02,
 -1.15955141e-04,-3.21688192e-02,-1.88537927e-02, 1.93498028e-02,
  4.71484996e-02, 7.35371885e-02, 1.13484437e-01, 1.48306748e-01,
  1.66296660e-01, 1.77484812e-01, 1.88332034e-01, 1.99645880e-01,
  2.09921464e-01, 2.16211411e-01, 2.18691045e-01, 2.20668785e-01,
  2.22915702e-01, 2.26240289e-01, 2.31606476e-01, 2.36088279e-01,
  2.39684922e-01, 2.42864802e-01, 2.48260597e-01, 2.52833677e-01,
  2.45596842e-01, 2.14457297e-01])
#endregion


#region mindt25
# minimum time +-25deg theta
dtt25 = 1.09898037
et25 = 18339737.52940688
tt25 = np.linspace(0,num*dtt25,num)

xt25 = np.array([   0.        ,   8.32751204,  21.48194871,  38.36293472,  60.10168702,
   86.8891605 , 118.64639982, 155.16520759, 195.93413056, 240.43043619,
  288.16059138, 338.50601286, 390.77127898, 444.32882247, 498.74748446,
  553.8472653 , 609.53937941, 665.64151624, 722.05525315, 778.65548747,
  835.29192231, 891.84201253, 948.23171508,1004.4296991 ,1060.43704975,
 1116.17237848,1171.71321268,1227.1414042 ,1282.5339716 ,1337.74550685])
ht25 = np.array([ 0.00000000e+00,-9.28544277e-02, 5.09910275e-01, 1.34993360e+00,
  2.07128980e+00, 1.85454372e+00, 7.78952491e-01, 1.21266182e-01,
  7.50832742e-01, 2.64302869e+00, 6.10401966e+00, 1.19405538e+01,
  2.03101464e+01, 3.10702930e+01, 4.36651464e+01, 5.73379941e+01,
  7.16746546e+01, 8.67695974e+01, 1.02460032e+02, 1.18769994e+02,
  1.35729442e+02, 1.53269071e+02, 1.71254574e+02, 1.89541067e+02,
  2.07966611e+02, 2.26633353e+02, 2.45228134e+02, 2.63603983e+02,
  2.81690166e+02, 2.99871811e+02])
vt25 = np.array([ 5.        ,10.05696341,13.59474732,17.48198705,22.09056994,26.65892318,
 31.13746872,35.25100978,38.88140204,42.10325937,44.92163368,47.23180693,
 49.01916312,50.32973748,51.2776436 ,52.01374195,52.62098038,53.08921541,
 53.45826182,53.71828141,53.85473486,53.87948805,53.82630658,53.7173136 ,
 53.57648769,53.38742962,53.20967144,53.07018956,52.97316626,52.79823536])
at25 = np.array([ 0.19190364, 0.12667057,-0.05      , 0.20342722, 0.23038237, 0.23147218,
  0.19151977, 0.11246698, 0.06898938, 0.04954347, 0.04479889, 0.02993467,
  0.01864814, 0.00560543,-0.00517127,-0.01096969,-0.00869973,-0.01161575,
 -0.01041593,-0.00972214,-0.00948537,-0.00983965,-0.00962433,-0.01105789,
 -0.00690459,-0.01044142,-0.00954335,-0.01179906,-0.00346949,-0.01129355])
gt25 = np.array([ 0.        , 0.0113794 , 0.05657636, 0.04644145, 0.01452346,-0.02665551,
 -0.03295458,-0.00115938, 0.02979326, 0.05539786, 0.09231   , 0.13747362,
  0.17952165, 0.21501042, 0.23731475, 0.24774153, 0.25730012, 0.26735999,
  0.27559902, 0.28570361, 0.29608289, 0.3050555 , 0.31222042, 0.3160817 ,
  0.3207345 , 0.32397607, 0.32214099, 0.31701544, 0.31693672, 0.31629975])
#endregion


#region mindt30
# minimum time +-30deg theta
dtt30 = 1.01955949
et30 = 16694468.92703265
tt30 = np.linspace(0,num*dtt30,num)

xt30 = np.array([   0.        ,   7.88669596,  21.34589197,  39.18456553,  59.95476708,
   84.38548937, 112.91532304, 145.54574935, 182.16295639, 222.70630444,
  266.97237789, 314.44627881, 364.3269958 , 415.67901153, 467.63581092,
  519.61103663, 571.28596453, 622.44361378, 673.06308069, 723.13114336,
  772.61064091, 821.47163664, 869.6799082 , 917.19223253, 963.98755593,
 1009.98967399,1055.26382881,1099.91927907,1144.18871506,1188.30429959])
ht30 = np.array([ 0.00000000e+00,-9.23099915e-02, 4.23721924e-01, 2.68713117e+00,
  4.47584832e+00, 4.81583878e+00, 4.15515687e+00, 3.19443760e+00,
  1.89812808e+00, 5.24747587e-01, 8.49932558e-02, 1.87064219e+00,
  6.69713200e+00, 1.50484884e+01, 2.67367814e+01, 4.10336309e+01,
  5.71679014e+01, 7.46445828e+01, 9.28157306e+01, 1.11384929e+02,
  1.30232700e+02, 1.49265005e+02, 1.68431531e+02, 1.87709825e+02,
  2.07038211e+02, 2.26463064e+02, 2.45739953e+02, 2.64628066e+02,
  2.82796747e+02, 2.99996590e+02])
vt30 = np.array([ 5.        ,10.52855149,15.77166038,19.06996212,22.05362242,25.95317086,
 30.02462102,33.98410096,37.88211258,41.66020496,45.10738468,47.99140739,
 50.21598239,51.74544978,52.63947047,53.04325284,53.10520061,52.90986027,
 52.57650187,52.1647768 ,51.6899388 ,51.16456656,50.59481595,49.98093199,
 49.32746788,48.62236189,47.902905  ,47.22591038,46.66139064,46.27393254])
at30 = np.array([ 3.62397807e-01, 4.05582404e-01, 2.88617611e-01,-3.70258855e-03,
  1.01611767e-01, 2.34782758e-01, 1.76341991e-01, 8.14206315e-02,
  6.02847907e-02, 5.16033237e-02, 4.88423236e-02, 3.84317177e-02,
  3.09015305e-02, 1.89967451e-02, 7.10812969e-03,-2.19574147e-03,
 -3.95497253e-03,-9.70110800e-03,-9.11966851e-03,-7.39998631e-03,
 -5.43882688e-03,-3.01702520e-03, 4.05070011e-04, 2.01244620e-03,
  8.17758387e-03, 7.16805407e-03, 9.00761309e-03, 5.79800040e-03,
  9.23600809e-03,-5.15046215e-03])
gt30 = np.array([ 0.        ,-0.00283183, 0.08514164, 0.1310499 , 0.04436968,-0.00923955,
 -0.03031068,-0.0306745 ,-0.03770096,-0.0263361 , 0.01055367, 0.06542093,
  0.12840654, 0.19279257, 0.24724606, 0.28712519, 0.31747619, 0.33846808,
  0.35029656, 0.35979557, 0.36787591, 0.3749092 , 0.38208937, 0.38838905,
  0.39585575, 0.40196282, 0.402578  , 0.39579681, 0.38302832, 0.35558707])
cxt30 = np.array([1631.01871128,1612.90679291,2069.39683411,2194.91248963,2211.86962521,
 2228.54858208,2255.6953792 ,2280.46130066,2297.4979271 ,2321.19283405,
 2347.52145732,2368.82700428,2390.47786652,2404.64844968,2411.59415082,
 2416.88444221,2418.75748274,2416.22984719,2417.00492741,2415.85858057,
 2413.24087239,2410.57965208,2407.76202751,2404.87437812,2399.81920341,
 2397.62149582,2386.54915496,2389.69126047,2377.81618836,2384.26605724])
czt30 = np.array([1340.97821546,1376.23144992,1351.70808571,1153.83418266, 936.7771374 ,
  763.80027318, 664.88208702, 596.09369651, 538.42342772, 493.78157021,
  470.99476368, 444.9990366 , 449.23811504, 458.06394957, 443.96881534,
  428.02845067, 402.17000298, 366.89476156, 331.66054733, 297.94747943,
  261.1913374 , 229.43818109, 197.82242606, 168.18471498, 138.34292469,
  112.30609627, 100.03656218, 100.04351221, 100.05216921, 100.01703029])
#endregion


#region mindt45
# minimum time +-45deg theta
dtt45 = 0.92526766
et45 = 15634961.59767829
tt45 = np.linspace(0,num*dtt45,num)

xt45 = np.array([   0.        ,   8.30768096,  23.45950949,  43.92384574,  67.86402518,
   94.07759689, 121.92366616, 151.12964056, 182.08993337, 215.38576032,
  251.44466529, 290.55143586, 332.78983347, 378.01792607, 425.88480019,
  475.91827713, 527.57221805, 580.17712615, 633.07496875, 685.62840785,
  737.24368106, 787.41808335, 835.76088591, 881.98230472, 925.91666624,
  967.38801652,1006.50833615,1043.46970119,1078.56514473,1112.06020808])
ht45 = np.array([ 0.00000000e+00,-8.89140235e-02, 4.02682930e-02, 1.56397651e+00,
  4.81423783e+00, 9.32269519e+00, 1.48116522e+01, 2.09324870e+01,
  2.57408079e+01, 2.80850908e+01, 2.81647362e+01, 2.69881214e+01,
  2.55775125e+01, 2.50106445e+01, 2.60497692e+01, 2.90952981e+01,
  3.45558601e+01, 4.29942410e+01, 5.44204358e+01, 6.87916815e+01,
  8.59688430e+01, 1.05660431e+02, 1.27472282e+02, 1.50956533e+02,
  1.75620939e+02, 2.01123177e+02, 2.26807917e+02, 2.52125931e+02,
  2.76570023e+02, 2.99804281e+02])
vt45 = np.array([ 5.        ,12.87192345,19.62567068,24.40660302,27.59683523,29.7881871 ,
 31.50450645,32.99325747,34.85595912,37.429949  ,40.59206994,43.99028926,
 47.32944782,50.38537873,53.03849285,55.24145919,56.95740848,58.1287146 ,
 58.77727598,58.92349244,58.60008172,57.85485003,56.73540116,55.2911612 ,
 53.58033035,51.62584102,49.51382993,47.32066454,45.13039   ,43.01228098])
at45 = np.array([ 7.11864893e-01, 7.57744405e-01, 6.56359412e-01, 4.51986880e-01,
  3.58344166e-01, 2.50282451e-01, 1.59479846e-01, 3.44617103e-02,
  8.51599544e-03, 9.40531331e-03, 2.21881869e-02, 2.18336552e-02,
  2.15050156e-02, 1.45516222e-02, 6.24682719e-03, 1.17490401e-03,
  3.75427475e-03,-1.36960175e-03,-2.00742390e-03,-2.34768074e-03,
 -2.46027241e-03,-2.50261489e-03,-1.37595807e-03,-1.64933621e-03,
  4.60356285e-03, 2.22347088e-03, 4.67476221e-03, 3.53386947e-03,
  1.25619180e-02,-1.26130663e-04])
gt45 = np.array([ 0.        ,-0.01118108, 0.03613984, 0.10776416, 0.15583009, 0.18260346,
  0.20624282, 0.19230122, 0.11299672, 0.03153953,-0.01950894,-0.03613393,
 -0.02636825, 0.00310414, 0.04052153, 0.08146237, 0.13123707, 0.18602734,
  0.23964386, 0.29422954, 0.34807266, 0.39948607, 0.44788832, 0.4912837 ,
  0.53248325, 0.56806326, 0.59276153, 0.6059522 , 0.6104986 , 0.59644326])
cxt45 = np.array([2057.4633724 ,2058.91937552,2142.09927313,2220.55064313,2241.98196884,
 2262.57168983,2281.33723385,2284.82901144,2293.52568666,2314.15791618,
 2338.47973743,2361.29281463,2379.45536418,2405.1496605 ,2426.11583519,
 2443.51516362,2457.63066616,2472.48013106,2475.68176182,2477.70641813,
 2475.47286852,2473.74092918,2462.92281647,2454.13516112,2441.79981687,
 2428.09906794,2414.22746117,2399.9886513 ,2387.80188053,2376.35740597])
czt45 = np.array([1383.78194141,1378.86036698,1352.11349904,1153.93217922, 936.7964542 ,
  763.80029987, 664.88002066, 596.09215396, 538.42226447, 493.78070314,
  470.99414948, 444.99863164, 449.23786187, 458.06382629, 443.96879355,
  428.02848769, 402.17005601, 366.89480773, 331.66057241, 297.94748357,
  261.19132566, 229.43815853, 197.82239741, 168.18468584, 138.34289757,
  112.30607296, 100.03654314, 100.04349879, 100.0521632 , 100.01703127])
#endregion


#region mine45
# minimum energy +-45deg theta
dte45 = 2.76893345
ee45 = 12672195.51436315
te45 = np.linspace(0,num*dte45,num)

xe45 = np.array([   0.        ,  40.62649904, 115.10506221, 206.11473077, 306.25874796,
  413.68803898, 528.04900835, 649.25421229, 777.48614926, 911.91248475,
 1049.61003153,1187.47883726,1323.95583296,1459.00434477,1593.38405635,
 1727.88312868,1862.92805049,1998.50120164,2134.26579844,2269.81517639,
 2404.94247463,2539.84659704,2675.19461018,2811.90076106,2950.55346622,
 3090.47959579,3228.81691677,3361.11655888,3484.78392912,3603.57759808])
he45 = np.array([ 0.00000000e+00,-5.31659646e-02,-2.31294186e-02,-1.60519082e-03,
  2.76887994e-02, 9.69377456e-02, 1.24423028e-01, 1.31114364e-01,
  1.82331341e-01, 3.82196846e+00, 1.38155608e+01, 2.86765758e+01,
  4.53475733e+01, 6.12750055e+01, 7.54352445e+01, 8.82164923e+01,
  1.00506142e+02, 1.13123709e+02, 1.26508708e+02, 1.40570732e+02,
  1.54750053e+02, 1.68192923e+02, 1.80223373e+02, 1.90903711e+02,
  2.01533145e+02, 2.14995096e+02, 2.34518961e+02, 2.60234719e+02,
  2.86004964e+02, 3.00001351e+02])
ve45 = np.array([ 5.        ,22.39812455,30.58249121,34.7539267 ,37.51429827,40.05600513,
 42.53646608,45.02623622,47.55181542,49.42090739,50.12936593,49.93264851,
 49.36471512,48.90004953,48.75087363,48.86500927,49.08263413,49.24657021,
 49.26678589,49.15063222,48.9940924 ,48.96609977,49.23839529,49.8491917 ,
 50.57273199,50.8282574 ,49.84689251,47.28253171,44.08064453,43.000127  ])
ae45 = np.array([0.78530325,0.4702343 ,0.18905535,0.14087707,0.10172744,0.07235467,
 0.05330951,0.03261601,0.02568995,0.02058693,0.01337855,0.00957653,
 0.00825776,0.00909056,0.01094019,0.01206709,0.01250096,0.01256135,
 0.01244276,0.01228232,0.01173845,0.0108125 ,0.00961938,0.00865769,
 0.00988108,0.01453278,0.02106852,0.02737412,0.02018726,0.00620727])
ge45 = np.array([ 0.00000000e+00, 1.26671237e-05,-2.73185464e-03, 9.47833976e-06,
  5.22471117e-04, 5.41052324e-04, 6.26369491e-04,-2.05408325e-03,
  8.34990648e-03, 4.89712857e-02, 9.31586336e-02, 1.18089050e-01,
  1.21935641e-01, 1.11621350e-01, 9.89735862e-02, 9.15997341e-02,
  9.08945738e-02, 9.52447863e-02, 1.01197707e-01, 1.04914923e-01,
  1.03108179e-01, 9.46234431e-02, 8.26683201e-02, 7.46169110e-02,
  8.17227449e-02, 1.14412973e-01, 1.67592886e-01, 2.11585151e-01,
  1.80866133e-01, 3.96148542e-02])
cxe45 = np.array([1415.36422254,1864.40572243,1673.67942036,1408.98126134,1383.016821  ,
 1372.69308282,1386.73658393,1413.74317807,1461.14935448,1507.46133841,
 1528.22329203,1527.21656801,1516.93987298,1505.90057843,1500.89765135,
 1502.79754383,1507.26313661,1511.89887278,1513.50015366,1511.81321246,
 1506.13656005,1503.96625683,1515.22126955,1539.23217026,1569.37325922,
 1584.27755325,1549.84550401,1455.71770794,1334.4904803 ,1274.04373469])
cze45 = np.array([1561.21637065,1111.59928506, 683.87697954, 359.5629271 , 205.53364564,
  173.58454341, 107.55538508, 100.19074843,  99.99842418,  99.99841053,
   99.99838928,  99.9984355 ,  99.99861214,  99.99883854,  99.9990394 ,
   99.99920069,  99.999312  ,  99.9993959 ,  99.99946375,  99.99951403,
   99.99955021,  99.99957594,  99.9995982 ,  99.99963088,  99.99968415,
   99.99975422,  99.99982475,  99.99985354,  99.99980629,  99.99988239])
#endregion


#region mine30
# minimum energy +-30deg theta
dte30 = 2.88644311
ee30 = 12888806.16645985
te30 = np.linspace(0,num*dte30,num)

xe30 = np.array([   0.        ,  39.14718283, 115.6998417 , 210.64603044, 316.01780759,
  429.05594408, 549.20977915, 676.63106155, 810.9483964 , 951.5757628 ,
 1095.08953218,1238.03896696,1379.80859286,1520.58194138,1660.82091585,
 1801.09147546,1941.67075431,2082.39380524,2222.94582472,2363.30377376,
 2503.72849545,2644.41382417,2785.53757313,2927.69424632,3071.67384874,
 3217.06819302,3360.85718586,3498.26111976,3626.58237878,3750.14115369])
he30 = np.array([ 0.00000000e+00,-6.44712010e-02, 5.20682506e-02, 3.21546438e-02,
  7.82694505e-02, 2.15033368e-01, 2.17145899e-02, 1.98205435e-01,
  1.25677634e+00, 4.54103242e+00, 1.59176493e+01, 3.14276448e+01,
  4.72107614e+01, 6.23640685e+01, 7.63937257e+01, 8.94653310e+01,
  1.02372274e+02, 1.15859017e+02, 1.29874140e+02, 1.43672492e+02,
  1.56817711e+02, 1.69516730e+02, 1.81716437e+02, 1.92834657e+02,
  2.03346976e+02, 2.16359142e+02, 2.35784764e+02, 2.61711241e+02,
  2.87365332e+02, 2.99949394e+02])
ve30 = np.array([ 5.        ,21.55728179,30.48716013,34.94400592,37.91763453,40.37969926,
 42.88992113,45.36712409,47.69097418,49.59196841,49.97102893,49.62398653,
 49.22206684,48.90607695,48.78441976,48.84901675,48.95970686,48.97364017,
 48.89270191,48.84424582,48.89185721,48.99071261,49.18906596,49.66472187,
 50.3603639 ,50.64707331,49.64557544,47.02051217,43.80199182,43.00749199])
ae30 = np.array([0.5095912 ,0.45279632,0.20610054,0.1319    ,0.09679136,0.06812762,
 0.05088307,0.0343124 ,0.01841512,0.02477432,0.01133454,0.00806609,
 0.00983957,0.01048665,0.01155727,0.0127238 ,0.01363955,0.01364028,
 0.01276822,0.01239689,0.0129813 ,0.01274227,0.01058376,0.00851414,
 0.0100332 ,0.01546941,0.02180377,0.02846389,0.02119365,0.00721188])
ge30 = np.array([ 0.00000000e+00,-1.83247674e-03,-3.48916260e-03, 2.89102404e-05,
  1.21726720e-03, 4.16489055e-05,-1.62831770e-03, 4.98232655e-03,
  9.40597597e-03, 4.89093715e-02, 1.00527838e-01, 1.11776178e-01,
  1.09708307e-01, 1.03908399e-01, 9.57033335e-02, 9.11206160e-02,
  9.29793928e-02, 9.80693433e-02, 9.96403146e-02, 9.57534126e-02,
  9.13946349e-02, 8.87152985e-02, 8.27723561e-02, 7.34256086e-02,
  7.59134293e-02, 1.07734451e-01, 1.62161473e-01, 2.05670714e-01,
  1.69488526e-01, 2.06604579e-02])
cxe30 = np.array([1815.11334313,1963.53250341,1647.99016991,1467.9958531 ,1357.02288715,
 1336.65972058,1377.8065691 ,1402.89942868,1439.80154897,1476.48503191,
 1498.31902755,1501.80294233,1493.83545158,1484.83856011,1481.43244284,
 1484.29229651,1489.8266829 ,1494.16267577,1494.27245216,1489.88975308,
 1482.62382151,1478.10124012,1484.96642955,1506.83726008,1535.3668332 ,
 1550.72726916,1524.75911325,1435.0934305 ,1305.29338335,1253.89623203])
cze30 = np.array([1399.0607193 ,1129.87854872, 684.09810251, 359.43877918, 205.52282665,
  173.57419612, 107.55510375, 100.18789412,  99.99502517,  99.99543202,
   99.99545044,  99.99550169,  99.99593563,  99.99657466,  99.9971701 ,
   99.99763404,  99.99796744,  99.99821977,  99.99841731,  99.99856889,
   99.99868179,  99.99876135,  99.99882583,  99.99891452,  99.9990637 ,
   99.99927203,  99.99948465,  99.99958385,  99.99944494,  99.99965725])
#endregion


#region mine25
# minimum energy +-25deg theta
dte25 = 2.87706481
ee25 = 13074964.42265374
te25 = np.linspace(0,num*dte25,num)

xe25 = np.array([   0.        ,  37.0819923 , 112.32964127, 206.86612879, 311.27458739,
  423.2790673 , 542.05386955, 668.05801502, 800.37765859, 937.62647554,
 1078.41348945,1220.16072011,1361.0604933 ,1500.68426771,1639.44605649,
 1777.99508842,1916.96925223,2056.81737589,2197.47443511,2338.20537574,
 2478.13247741,2617.17814968,2756.31366517,2896.77265854,3039.11629514,
 3182.75454204,3325.45198999,3463.14460181,3592.51593239,3716.26890434])
he25 = np.array([ 0.00000000e+00,-6.44532302e-02, 4.84626073e-02, 6.89795450e-03,
  2.71998885e-02, 1.02147715e-01, 7.20990145e-01, 3.03947814e-01,
  3.42680543e+00, 8.38396936e+00, 1.74520554e+01, 3.10489912e+01,
  4.69091365e+01, 6.27213339e+01, 7.73705031e+01, 9.07534200e+01,
  1.03090123e+02, 1.14925438e+02, 1.27320419e+02, 1.41247871e+02,
  1.56398715e+02, 1.70990215e+02, 1.83509038e+02, 1.94324998e+02,
  2.05263377e+02, 2.18508491e+02, 2.36453076e+02, 2.60189589e+02,
  2.85221376e+02, 2.99980491e+02])
ve25 = np.array([ 5.        ,20.81310291,30.41325419,34.84918603,37.65026591,40.14581873,
 42.47585431,45.0443501 ,46.8957067 ,48.51517079,49.41504791,49.46852636,
 49.06599937,48.63518975,48.39876972,48.39994729,48.6171949 ,48.94762859,
 49.17055556,49.08360231,48.74136032,48.49923799,48.68928264,49.27959916,
 49.94126906,50.23179576,49.54084241,47.35731326,44.29073255,43.00842823])
ae25 = np.array([0.40498603,0.39343125,0.19533088,0.13885869,0.09781356,0.07690237,
 0.04531425,0.04622898,0.02214793,0.02143346,0.01640357,0.01237507,
 0.01093614,0.01169817,0.01318372,0.01363675,0.0133764 ,0.01355201,
 0.01437023,0.01468031,0.01342076,0.01199739,0.01195232,0.01223322,
 0.01205066,0.01427062,0.02098517,0.0287969 ,0.02509611,0.00820279])
ge25 = np.array([ 0.00000000e+00,-2.38338547e-03,-3.45685696e-03,-1.12190862e-04,
 -7.09669902e-04, 5.34238231e-03,-2.00579134e-03, 7.51674440e-03,
  3.12307404e-02, 4.67328252e-02, 8.15062633e-02, 1.06882812e-01,
  1.14631540e-01, 1.09702447e-01, 1.00694065e-01, 9.20885700e-02,
  8.54970565e-02, 8.46209917e-02, 9.25063456e-02, 1.04606647e-01,
  1.08790767e-01, 9.82081273e-02, 8.18016374e-02, 7.42088066e-02,
  8.13771154e-02, 1.05193678e-01, 1.47548224e-01, 1.91224054e-01,
  1.75052636e-01, 4.52182546e-02])
cxe25 = np.array([1800.34483122,2114.27731259,1701.17322968,1407.08629325,1358.21823983,
 1348.35748721,1367.51327487,1395.48689825,1433.76662924,1480.2020608 ,
 1504.36911185,1506.12039282,1498.29733819,1488.29114251,1481.83016236,
 1481.9001763 ,1486.36205161,1492.13016077,1494.61364788,1493.66359001,
 1488.56079954,1485.41767873,1493.94542354,1515.03158224,1542.94785795,
 1557.0387412 ,1525.20418371,1436.21843129,1311.07041515,1254.03607792])
cze25 = np.array([1385.86223363,1118.80314512, 684.42995761, 359.55770281, 205.5267344 ,
  173.58268862, 107.554566  , 100.19102111,  99.99838366,  99.99843164,
   99.99848514,  99.99851018,  99.99865906,  99.99886511,  99.99904994,
   99.99920502,  99.99931877,  99.9994038 ,  99.99946986,  99.99952073,
   99.99956068,  99.99958751,  99.99960785,  99.99963901,  99.99968869,
   99.99975154,  99.99982157,  99.99987524,  99.99984853,  99.99989533])
#endregion


#region mine20
# minimum energy +-20deg theta
dte20 = 2.81155679
ee20 = 13407369.28860069
te20 = np.linspace(0,num*dte20,num)

xe20 = np.array([   0.        ,  36.50960914, 108.84047064, 201.66340493, 305.91472832,
  418.03539728, 536.82508493, 661.56906781, 792.83901657, 929.84367787,
 1069.48757077,1209.22094866,1348.20145079,1486.58349638,1624.61031386,
 1762.43666022,1900.1223474 ,2037.71938464,2175.37656464,2313.23579177,
 2451.37550767,2589.98367471,2729.35488431,2869.27443956,3008.61537567,
 3146.2692901 ,3281.36905394,3412.38611411,3537.72555082,3658.78579716])
he20 = np.array([ 0.00000000e+00,-8.18167253e-02, 5.06067132e-02, 7.71319241e-02,
  5.15446415e-02, 5.07156023e-02, 1.56355481e+00, 3.52818035e+00,
  4.58119276e+00, 9.93190954e+00, 2.09123735e+01, 3.54194651e+01,
  5.05298187e+01, 6.51771176e+01, 7.94085421e+01, 9.33339125e+01,
  1.07167893e+02, 1.20955031e+02, 1.34518699e+02, 1.47875918e+02,
  1.61098895e+02, 1.73922213e+02, 1.86336491e+02, 1.99634510e+02,
  2.15106409e+02, 2.31947699e+02, 2.49682075e+02, 2.68940723e+02,
  2.88033380e+02, 3.00024252e+02])
ve20 = np.array([ 5.        ,20.55994544,30.13830421,35.38989472,38.57720886,41.1312023 ,
 43.32725266,45.46943468,47.87589441,49.48286866,50.01544186,49.86360012,
 49.59213601,49.41109863,49.30378933,49.24154282,49.19696684,49.18148232,
 49.22336096,49.30551307,49.41852937,49.62162646,49.90898447,50.0096382 ,
 49.65373946,48.95244894,47.89394587,46.19307368,44.0070305 ,43.00129956])
ae20 = np.array([0.29276244,0.29994202,0.1951765 ,0.118311  ,0.08604872,0.06792505,
 0.04813506,0.02586434,0.02688854,0.01787156,0.01198596,0.0075559 ,
 0.00790364,0.00929989,0.01000135,0.01093522,0.011422  ,0.01117879,
 0.01120276,0.01125889,0.01030254,0.00898505,0.0100147 ,0.01263567,
 0.01225442,0.0148936 ,0.02319907,0.03244834,0.03372001,0.01725142])
ge20 = np.array([ 0.        ,-0.00104271,-0.00378119, 0.00124682,-0.00185933, 0.005351  ,
  0.01806212, 0.00880413, 0.01745011, 0.06003578, 0.09440504, 0.1085556 ,
  0.10721502, 0.1039578 , 0.10153311, 0.10019409, 0.10016728, 0.09921712,
  0.09726005, 0.09613587, 0.09431428, 0.08982138, 0.08952257, 0.10220254,
  0.11736813, 0.12538555, 0.1373932 , 0.15382325, 0.13951381, 0.04314353])
cxe20 = np.array([2306.22708918,2070.82952395,1843.8228062 ,1549.66127576,1367.6032305 ,
 1382.59351466,1403.9423098 ,1423.25839251,1480.31648171,1509.67878635,
 1515.38524222,1513.03939753,1511.81004091,1511.37658167,1508.5315384 ,
 1506.1309517 ,1509.38194848,1514.51555625,1515.64963599,1516.49425712,
 1519.67110263,1523.56518321,1526.44818751,1524.96215397,1515.72548641,
 1492.90793361,1447.54209798,1372.42453426,1248.02042566,1194.37727269])
cze20 = np.array([1335.35621055,1121.34903863, 684.10533221, 359.56752989, 205.50891611,
  173.57217497, 107.55290089, 100.18694856,  99.99618605,  99.99592597,
   99.99562104,  99.9958958 ,  99.99647746,  99.99708705,  99.99755717,
   99.99789007,  99.9981776 ,  99.99842404,  99.99858896,  99.99871067,
   99.99882415,  99.99892053,  99.99901314,  99.9991226 ,  99.9992559 ,
   99.99940694,  99.99957517,  99.99976046,  99.99978533,  99.9997913 ])
#endregion


#region mine15
# minimum energy +-15deg theta
dte15 = 3.39952608
ee15 = 14541719.34570797
te15 = np.linspace(0,num*dte15,num)

xe15 = np.array([   0.        ,  50.06721479, 147.72844893, 267.12042972, 400.92796725,
  547.58747443, 704.42553236, 869.08366802,1037.93760491,1209.68998621,
 1383.21458369,1558.15989365,1733.95067005,1910.21144712,2086.52960811,
 2262.82899669,2439.24587419,2615.61673855,2792.01857526,2968.51878278,
 3145.0261581 ,3321.0974386 ,3496.48421081,3671.01102853,3844.19566894,
 4015.09636221,4182.48326435,4344.74623   ,4501.13155315,4650.74491289])
he15 = np.array([ 0.00000000e+00,-5.11541281e-02,-2.18884992e-02, 1.71319279e-01,
  2.41814594e-03, 4.88322107e-02, 7.05904705e-01, 7.17412233e+00,
  1.65513456e+01, 2.73839683e+01, 3.93861649e+01, 5.16328105e+01,
  6.47667862e+01, 7.79004396e+01, 9.16868788e+01, 1.05429057e+02,
  1.19431445e+02, 1.33496826e+02, 1.47504576e+02, 1.61820994e+02,
  1.76161796e+02, 1.90583756e+02, 2.04742870e+02, 2.18944905e+02,
  2.33537050e+02, 2.48290845e+02, 2.62793351e+02, 2.76773600e+02,
  2.89688094e+02, 3.00013472e+02])
ve15 = np.array([ 5.        ,23.89909188,32.60196892,37.37893082,41.36234232,44.70753975,
 47.51529301,49.22420179,50.23714465,50.94335996,51.38147652,51.76412981,
 51.92772571,52.03641895,52.00589356,52.04322392,52.05730859,52.0386384 ,
 52.07501346,52.10261289,52.05476248,51.86727157,51.64556576,51.35359331,
 50.84944454,50.01368779,48.74737998,47.01875608,45.31347719,42.99821967])
ae15 = np.array([ 1.42123209e-01, 1.76073310e-01, 1.07202785e-01, 9.10131759e-02,
  5.92747538e-02, 3.27140685e-02, 2.91136069e-02, 1.17596110e-02,
  6.96675126e-03, 4.09660168e-03, 4.99623419e-04, 1.04444966e-03,
 -1.72713113e-03,-6.23128221e-05,-1.48765550e-03,-5.64924822e-04,
 -9.47091335e-04,-9.48926255e-04,-2.17943710e-04,-9.59158500e-04,
 -1.29211307e-04, 8.15823256e-05, 1.66029097e-03, 3.44079898e-03,
  5.53011843e-03, 8.90923707e-03, 1.58328366e-02, 2.37257912e-02,
  3.97175737e-02, 2.70434354e-02])
ge15 = np.array([ 0.        ,-0.01532805, 0.00487486,-0.00177714,-0.00072891,-0.0012127 ,
  0.01909154, 0.05181007, 0.05901491, 0.06701304, 0.06932209, 0.07234336,
  0.07460254, 0.07605124, 0.07837491, 0.07814394, 0.07980113, 0.07915297,
  0.0800664 , 0.08105773, 0.08152309, 0.08124574, 0.08034972, 0.08240805,
  0.08540834, 0.08615339, 0.086857  , 0.08320217, 0.08543147, 0.02913596])
cxe15 = np.array([3000.54376155,1981.95242123,1601.60085035,1442.36730557,1525.88186532,
 1344.05326556,1471.77492239,1434.24341462,1458.0904464 ,1446.93826071,
 1457.03946339,1454.72225769,1447.52508921,1440.67552143,1443.94958173,
 1461.55971343,1454.61378723,1455.50860151,1470.67343887,1473.91514695,
 1448.34065275,1430.54373585,1416.54963406,1405.35870119,1362.6848829 ,
 1288.15250628,1170.27026377,1047.16269396,1089.21444527, 380.77080992])
cze15 = np.array([1341.34585855, 997.78769844, 660.34500056, 356.28688462, 205.06038323,
  173.38996502, 107.48923991, 100.14092341,  99.94687683,  99.94792522,
   99.95325492,  99.96062341,  99.9665872 ,  99.97031296,  99.97380963,
   99.97747677,  99.98058266,  99.98261644,  99.98460629,  99.98671746,
   99.98860278,  99.99002615,  99.99140519,  99.99309506,  99.99494979,
   99.99686746,  99.99933335, 100.00193356, 100.0052502 ,  99.99965333])
#endregion




# h vs x min e
plt.rcParams['figure.figsize'] = [11, 2.5]

eSpline45 = make_interp_spline(xe45,he45)
ixe45 = np.linspace(xe45.min(), xe45.max(), 500)
ihe45 = eSpline45(ixe45)

eSpline30 = make_interp_spline(xe30,he30)
ixe30 = np.linspace(xe30.min(), xe30.max(), 500)
ihe30 = eSpline30(ixe30)

eSpline15 = make_interp_spline(xe15,he15)
ixe15 = np.linspace(xe15.min(), xe15.max(), 500)
ihe15 = eSpline15(ixe15)

target_altitude = np.ones(num)*300
plt.plot(xe15,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(xe45,he45,color='navy',marker='^')
plt.scatter(xe30,he30,color='blue',marker='D')
plt.scatter(xe15,he15,color='royalblue',marker='s')
plt.legend(['target altitude', 'minimum energy 'r'$|\theta| \leq 45^{\circ}$', 'minimum energy 'r'$|\theta| \leq 30^{\circ}$', 'minimum energy 'r'$|\theta| \leq 15^{\circ}$'], frameon=False)

plt.plot(ixe45,ihe45,color='navy',linestyle='solid',linewidth=2)
plt.plot(ixe30,ihe30,color='blue',linestyle='solid',linewidth=2)
#plt.plot(ixe25,ihe25,color='blue',linestyle='solid',linewidth=2)
#plt.plot(ixe20,ihe20,color='cornflowerblue',linestyle='solid',linewidth=2)
plt.plot(ixe15,ihe15,color='royalblue',linestyle='solid',linewidth=2)
plt.xlabel('horizontal displacement (m)')
plt.ylabel('altitude (m)')
plt.savefig('e_theta_h_vs_x.png', dpi=1200, bbox_inches='tight')
plt.show()


# h vs x min dt
plt.rcParams['figure.figsize'] = [11, 2.5]

tSpline45 = make_interp_spline(xt45,ht45)
ixt45 = np.linspace(xt45.min(), xt45.max(), 500)
iht45 = tSpline45(ixt45)

tSpline30 = make_interp_spline(xt30,ht30)
ixt30 = np.linspace(xt30.min(), xt30.max(), 500)
iht30 = tSpline30(ixt30)

tSpline15 = make_interp_spline(xt15,ht15)
ixt15 = np.linspace(xt15.min(), xt15.max(), 500)
iht15 = tSpline15(ixt15)

target_altitude = np.ones(num)*300
plt.plot(xt15,target_altitude,color='k',linestyle='dashed',linewidth=1)
plt.scatter(xt45,ht45,color='darkred',marker='o')
plt.scatter(xt30,ht30,color='red',marker='d')
plt.scatter(xt15,ht15,color='indianred',marker='P')
plt.legend(['target altitude', 'minimum time 'r'$|\theta| \leq 45^{\circ}$', 'minimum time 'r'$|\theta| \leq 30^{\circ}$', 'minimum time 'r'$|\theta| \leq 15^{\circ}$'], frameon=False)

plt.plot(ixt45,iht45,color='darkred',linestyle='solid',linewidth=2)
plt.plot(ixt30,iht30,color='red',linestyle='solid',linewidth=2)
#plt.plot(ixt25,iht25,color='red',linestyle='solid',linewidth=2)
#plt.plot(ixt20,iht20,color='indianred',linestyle='solid',linewidth=2)
plt.plot(ixt15,iht15,color='indianred',linestyle='solid',linewidth=2)
plt.xlabel('horizontal displacement (m)')
plt.ylabel('altitude (m)')
# plt.legend(['target altitude', 'minimum time 'r'$|\theta| \leq 45^{\circ}$', 'minimum time 'r'$|\theta| \leq 30^{\circ}$', 'minimum time 'r'$|\theta| \leq 25^{\circ}$', 'minimum time 'r'$|\theta| \leq 20^{\circ}$', 'minimum time 'r'$|\theta| \leq 15^{\circ}$'], frameon=False)
plt.savefig('t_theta_h_vs_x.png', dpi=1200, bbox_inches='tight')
plt.show()




# theta vs t min dt
plt.rcParams['figure.figsize'] = [5, 2.5]

tSpline45 = make_interp_spline(tt45,np.rad2deg(gt45+at45))
itt45 = np.linspace(tt45.min(), tt45.max(), 500)
igt45 = tSpline45(itt45)

tSpline30 = make_interp_spline(tt30,np.rad2deg(gt30+at30))
itt30 = np.linspace(tt30.min(), tt30.max(), 500)
igt30 = tSpline30(itt30)

tSpline15 = make_interp_spline(tt15,np.rad2deg(gt15+at15))
itt15 = np.linspace(tt15.min(), tt15.max(), 500)
igt15 = tSpline15(itt15)


plt.scatter(tt45,np.rad2deg(gt45+at45),color='darkred',marker='o')
plt.scatter(tt30,np.rad2deg(gt30+at30),color='red',marker='d')
plt.scatter(tt15,np.rad2deg(gt15+at15),color='indianred',marker='P')
plt.legend(['minimum time 'r'$|\theta| \leq 45^{\circ}$', 'minimum time 'r'$|\theta| \leq 30^{\circ}$', 'minimum time 'r'$|\theta| \leq 15^{\circ}$'], frameon=False)

th45 = np.ones(num)*45
th30 = np.ones(num)*30
th15 = np.ones(num)*15
plt.plot(tt15,th45,color='k',linestyle='dashed',linewidth=1)
plt.plot(tt15,th30,color='k',linestyle='dashed',linewidth=1)
plt.plot(tt15,th15,color='k',linestyle='dashed',linewidth=1)

plt.plot(itt45,igt45,color='darkred',linestyle='solid',linewidth=2)
plt.plot(itt30,igt30,color='red',linestyle='solid',linewidth=2)
plt.plot(itt15,igt15,color='indianred',linestyle='solid',linewidth=2)
plt.xlabel('time (s)')
plt.ylabel('pitch angle 'r'$(^{\circ})$')
# plt.legend(['minimum time 'r'$|\theta| \leq 45^{\circ}$', 'minimum time 'r'$|\theta| \leq 30^{\circ}$', 'minimum time 'r'$|\theta| \leq 25^{\circ}$', 'minimum time 'r'$|\theta| \leq 20^{\circ}$', 'minimum time 'r'$|\theta| \leq 15^{\circ}$'], frameon=False)
plt.savefig('t_theta_vs_t.png', dpi=1200, bbox_inches='tight')
plt.show()






# theta vs t min e
plt.rcParams['figure.figsize'] = [5, 2.5]

eSpline45 = make_interp_spline(te45,np.rad2deg(ge45+ae45))
ite45 = np.linspace(te45.min(), te45.max(), 500)
ige45 = eSpline45(ite45)

eSpline30 = make_interp_spline(te30,np.rad2deg(ge30+ae30))
ite30 = np.linspace(te30.min(), te30.max(), 500)
ige30 = eSpline30(ite30)

eSpline15 = make_interp_spline(te15,np.rad2deg(ge15+ae15))
ite15 = np.linspace(te15.min(), te15.max(), 500)
ige15 = eSpline15(ite15)

plt.scatter(te45,np.rad2deg(ge45+ae45),color='navy',marker='^')
plt.scatter(te30,np.rad2deg(ge30+ae30),color='blue',marker='D')
plt.scatter(te15,np.rad2deg(ge15+ae15),color='royalblue',marker='s')
plt.legend(['minimum energy 'r'$|\theta| \leq 45^{\circ}$', 'minimum energy 'r'$|\theta| \leq 30^{\circ}$', 'minimum energy 'r'$|\theta| \leq 15^{\circ}$'], frameon=False)

th45 = np.ones(num)*45
th30 = np.ones(num)*30
th15 = np.ones(num)*15
plt.plot(te15,th45,color='k',linestyle='dashed',linewidth=1)
plt.plot(te15,th30,color='k',linestyle='dashed',linewidth=1)
plt.plot(te15,th15,color='k',linestyle='dashed',linewidth=1)

plt.plot(ite45,ige45,color='navy',linestyle='solid',linewidth=2)
plt.plot(ite30,ige30,color='blue',linestyle='solid',linewidth=2)
plt.plot(ite15,ige15,color='royalblue',linestyle='solid',linewidth=2)
plt.xlabel('time (s)')
plt.ylabel('pitch angle 'r'$(^{\circ})$')
# plt.legend(['minimum time 'r'$|\theta| \leq 45^{\circ}$', 'minimum time 'r'$|\theta| \leq 30^{\circ}$', 'minimum time 'r'$|\theta| \leq 25^{\circ}$', 'minimum time 'r'$|\theta| \leq 20^{\circ}$', 'minimum time 'r'$|\theta| \leq 15^{\circ}$'], frameon=False)
plt.savefig('e_theta_vs_t.png', dpi=1200, bbox_inches='tight')
plt.show()
